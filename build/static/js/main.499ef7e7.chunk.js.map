{"version":3,"sources":["contexts/socket.js","components/homepage/navbar/HomeNavbar.jsx","components/pages/homePage/HomePage.jsx","api/user/login.js","api/user/register.js","api/user/image.js","actions/user.js","api/user/test.js","components/homepage/modals/LoginModal.jsx","components/pages/homePage/Login.jsx","components/homepage/modals/RegisterModal.jsx","components/pages/homePage/Register.jsx","api/server/getAllOnlineMembers.js","api/server/getServer.js","api/server/createServer.js","api/server/deleteServer.js","api/server/leaveServer.js","actions/server.js","api/server/getAllServers.js","api/channel/getAllChannels.js","api/channel/getChannel.js","api/channel/createChannel.js","components/skidapp/modals/newserver/NewServer.jsx","api/invite/getInviteFromServer.js","api/invite/getServerFromInvite.js","api/invite/createInvite.js","api/invite/joinInvite.js","actions/invite.js","components/skidapp/modals/joinserver/JoinServer.jsx","components/skidapp/navbar/ServerNavbar.jsx","api/server/getGlobalServer.js","actions/channel.js","api/category/getAllCategories.js","api/category/createCategory.js","actions/other.js","components/skidapp/modals/newcategory/NewCategory.jsx","actions/category.js","components/skidapp/modals/newchannel/NewChannel.jsx","components/skidapp/modals/newserverinvite/NewServerInvite.jsx","components/skidapp/settings/UserSettings.jsx","components/skidapp/channelbar/UserInfo.jsx","components/skidapp/channelbar/ChannelBar.jsx","api/message/getAllMessages.js","api/message/createMessage.js","actions/message.js","components/skidapp/usercontent/UserContent.jsx","actions/notifications.js","components/skidapp/reminder/Reminder.jsx","components/pages/skidApp/SkidApp.jsx","components/pages/skidApp/SkidAppMe.jsx","components/pages/skidApp/SkidAppInvite.jsx","components/App.jsx","reducers/user.js","reducers/index.js","reducers/server.js","reducers/category.js","reducers/channel.js","reducers/message.js","reducers/invite.js","reducers/notify.js","reducers/other.js","index.jsx"],"names":["SocketContext","React","createContext","useSocket","useContext","SocketProvider","children","useState","socket","setSocket","auth","useSelector","state","user","useEffect","newSocket","io","token","close","Provider","value","HomeNavbar","className","href","to","HomePage","messages","used","selectQuote","index","Math","floor","random","length","selectedMsg","includes","push","quotes","setQuotes","setCount","handleClick","e","c","document","addEventListener","removeEventListener","onClick","window","location","login","username","password","axios","post","URI","register","image","imageLink","headers","localStorage","getItem","testAction","dispatch","a","data","type","payload","LoginModal","props","navigating","setNavigating","navigate","useNavigate","setUsername","setPassword","useDispatch","show","_id","onSubmit","preventDefault","console","log","loginAction","onChange","target","placeholder","Login","RegisterModal","confPassword","setConfPassword","checkForm","setError","registerAction","error","Register","getAllOnlineMembers","serverId","get","getServer","createServer","serverName","deleteServer","leaveServer","getAllServersAction","createServerAction","getAllOnlineMembersAction","getAllChannels","getChannel","channelId","createChannel","categoryId","channelName","NewServer","setServerName","handleSubmit","handleKeyPress","useCallback","key","getElementById","click","join","id","getInviteFromServer","getServerFromInvite","inviteCode","createInvite","joinInvite","joinInviteAction","JoinServer","setInviteCode","splitInviteCode","split","at","replace","ServerNavbar","allServers","setAllServers","showNewServerModal","setShowNewServerModal","showJoinServerModal","setShowJoinServerModal","allServerChannelsSelector","channel","allServerChannels","allServersSelector","server","globalServer","global","redirectToChannel","useParams","on","serverIdSocket","hideServerAction","getAllChannelsAction","getChannelAction","filter","aria-hidden","width","height","viewBox","fill","d","name","map","i","slice","getAllCategories","createCategory","categoryName","checkReminder","setter","JSON","parse","NewCategory","setCategoryName","createCategoryAction","NewChannel","setChannelName","createChannelAction","setCategoryId","NewServerInvite","newInvite","setNewInvite","alreadyHasInvite","setAlreadyHasInvite","currentServerInvite","setCurrentServerInvite","copied","setCopied","allInviteCodes","invite","allInvites","timeoutstate","setstateTimeout","hasServerInviteCode","undefined","readOnly","navigator","clipboard","writeText","clearTimeout","timeout","setTimeout","createInviteAction","UserSettings","setImage","class","size","pattern","UserInfo","showSettings","setShowSettings","muted","setMuted","src","alt","Category","showCategoryChannels","setShowCategoryChannels","allChannels","category","toUpperCase","setShowNewChannelModal","ChannelBar","showServerContextMenu","setShowServerContextMenu","showNewCategoryModal","setShowNewCategoryModal","showNewChannelModal","newChannelCategoryId","setNewChannelCategoryId","showNewInviteModal","setShowNewInviteModal","allServerCategories","setAllServerCategories","contextMenuRef","useRef","showReminder","other","reminder","currentServer","categories","getServerAction","getAllCategoriesAction","getInviteFromServerAction","current","contains","handleDeleteServer","emit","deleteServerAction","handleLeaveServer","leaveServerAction","ref","owner","getAllMessages","createMessage","content","createMessageAction","UserContent","createdMessage","setCreatedMessage","message","setMessage","allMessages","setAllMessages","currentChannel","allMessagesSelector","allChannelMessages","currentMessage","getAllMessagesAction","off","addMessageToAll","notifyChannelAndServer","messageServerId","messageChannel","handleCreateMessageForm","small","ownerName","Date","creation","toLocaleDateString","allOnlineUsers","member","allOfflineUsers","Reminder","setShowReminder","setItem","stringify","SkidApp","SkidAppInvite","serverFromLink","serverFromInvite","getServerFromInviteAction","Redirect","App","path","element","SkidAppMe","initialState","currentToken","jwtDecode","combineReducers","action","online","offline","currentCategory","jwt","notify","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render"],"mappings":"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","file":"static/js/main.499ef7e7.chunk.js","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst URI = process.env.NODE_ENV === 'production' ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nconst SocketContext = React.createContext();\r\n\r\nexport const useSocket = () => {\r\n    return useContext(SocketContext);\r\n}\r\n\r\nexport const SocketProvider = ({ children }) => {\r\n    const [socket, setSocket] = useState();\r\n    const auth = useSelector((state) => state.user);\r\n\r\n    useEffect(() => {\r\n        const newSocket = io(URI, {\r\n            auth: {\r\n                token: auth.token || null\r\n            }\r\n        });\r\n        setSocket(newSocket);\r\n\r\n        return () => newSocket.close();\r\n    }, [auth]);\r\n\r\n    return (\r\n        <SocketContext.Provider value={socket}>\r\n            {children}\r\n        </SocketContext.Provider>\r\n    );\r\n}\r\n\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport './HomeNavbar.css'\r\n\r\nconst HomeNavbar = () => {\r\n    return (\r\n        <div className=\"home-navbar\">\r\n            <div className=\"left-items\">\r\n                <h1 className=\"left-title\"><span className=\"title-color-change\">skid</span> <span className='smol'>v1.4.1</span></h1>\r\n                <a href=\"https://github.com/ulnk/skid\" className=\"left-item\">Features</a>\r\n                <a href=\"https://github.com/ulnk/skid\" className=\"left-item\">GitHub</a>\r\n                <a href=\"https://github.com/ulnk/skid\" className=\"left-item\">About</a>\r\n            </div>\r\n            <div className=\"right-items\">\r\n                <Link to=\"/login\"><button className=\"login-button\">Login</button></Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeNavbar\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport '../../homepage/homepage.css';\r\nimport '../../skidapp/skidapp.css';\r\n\r\nimport { FaGithub } from 'react-icons/fa';\r\n\r\nimport HomeNavbar from '../../homepage/navbar/HomeNavbar';\r\n\r\nconst HomePage = () => {\r\n    let messages = [\r\n        'Blasting NBA Youngboy on OBlock, been in the game since \\'02.',\r\n        'P2P Encryption.',\r\n        '14.2 Million Bots Connected.',\r\n        'Pushin\\' P.',\r\n        'Central Cee > OBlock.',\r\n        'OBlock smoking on Tooka.',\r\n        'Built using BQN.',\r\n        'You wouldn\\'t steal a car.',\r\n        'Gunna & Future - pushin P (feat. Young Thug) [Official Video]',\r\n        'I can rhyme Orange and Banana. Bornana.',\r\n        'Miria Botnet < Brixton Botnet.',\r\n        'NOTDS Multitool.',\r\n        'Killer Whales at SeaWorld™️',\r\n        'Osaka > Horion.',\r\n        'skid  oxygen when?',\r\n        'Jesus died for chocolate eggs.',\r\n        'Visual Basic Botnet.',\r\n        'decrypt0r.cs',\r\n        'Cookie Clicker?',\r\n        'When it rains, it pours.',\r\n        'Mike Amiri, Mike Amiri.',\r\n        'Trap House Mob.',\r\n        'Horion Wallet Miner.',\r\n        'One Bot Botnet™️',\r\n        'horion.site',\r\n    ];\r\n\r\n    let used = [];\r\n    const selectQuote = () => {\r\n        const index = Math.floor(Math.random() * messages.length);\r\n        let selectedMsg = messages[index];\r\n        if (used.includes(messages[index])) return selectQuote();\r\n        used.push(messages[index]);\r\n        return selectedMsg;\r\n    };\r\n\r\n    const [quotes, setQuotes] = useState([selectQuote(), selectQuote()]);\r\n    const [count, setCount] = useState(0);\r\n\r\n    const regenQuotes = () => {\r\n        setQuotes([selectQuote(), selectQuote()]);\r\n        used = [];\r\n    };\r\n\r\n    const handleClick = (e) => {\r\n        setCount(c => c+=1);\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('click', handleClick)\r\n        return () => document.removeEventListener('click', handleClick)\r\n    }, [])\r\n\r\n    return (<>\r\n            <div className=\"home-body\">\r\n                <HomeNavbar />\r\n                <div className=\"home-header\">\r\n                    <h1 className=\"home-header-title\">{quotes[0]}</h1>\r\n                    <span className=\"home-header-desc\">{quotes[1]}</span>\r\n                    <div className=\"home-buttons-container\">\r\n                        <span onClick={() => {\r\n                            window.location = \"https://github.com/ulnk/skid\"\r\n                        }}><button className=\"home-github-main\"><FaGithub className='github-icon' />Check out our GitHub!</button></span>\r\n                        <span onClick={() => {\r\n                            window.location = \"/skid/@me\"\r\n                        }}><button className=\"home-login-main\">Open Skid in your browser</button></span>\r\n                        {<span onClick={() => {\r\n                            // window.location = \"https://cdn.skid.today/WordleGame.exe\"\r\n                        }}><button onClick={regenQuotes} className=\"home-red-main\">Regenerate Quotes</button></span>}\r\n                        {/* {count > 50 && <button onClick={regenQuotes} className=\"home-regen-main\">Regenerate Quotes!</button>} */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"home-bottom\">\r\n                {/* {count<200 &&<button onClick={() => setCount(200)} className=\"home-regen-bottom\"></button>} */}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HomePage;\r\n","import axios from 'axios';\r\n\r\nconst URI = process.env.NODE_ENV === 'production' ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const login =  (username, password) => username && password ? axios.post(URI + `/api/v1/user/login`, { username, password }) : null; ","import axios from 'axios';\r\n\r\nconst URI = process.env.NODE_ENV === 'production' ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const register =  (username, password) => username && password ? axios.post(URI + `/api/v1/user/register`, { username, password }) : null; ","import axios from 'axios';\r\n\r\nconst URI = process.env.NODE_ENV === 'production' ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const image = (imageLink) => imageLink ? axios.post(URI + `/api/v1/user/image`, { imageLink }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n}) : null;","import { login } from '../api/user/login';\r\nimport { test } from '../api/user/test';\r\nimport { register } from '../api/user/register';\r\nimport { image } from '../api/user/image';\r\n\r\nexport const loginAction = (username, password) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await login(username, password);\r\n        dispatch({ type: 'LOGIN', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const registerAction = (username, password) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await register(username, password);\r\n        dispatch({ type: 'REGISTER', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const imageAction = (imageLink) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await image(imageLink);\r\n        dispatch({ type: 'IMAGE', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const logoutAction = () => async (dispatch) =>  {\r\n    try {\r\n        dispatch({ type: 'LOGOUT', payload: null });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const testAction = (username, password) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await test(username, password);\r\n        dispatch({ type: 'AUTH', payload: data });\r\n    } catch(e) {\r\n        dispatch({ type: 'LOGOUT', payload: null });\r\n    }\r\n}\r\n","import axios from 'axios';\r\n\r\nconst URI = process.env.NODE_ENV === 'production' ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const test = () => axios.post(URI + `/api/v1/user/test`, {}, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n});","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate , Link } from 'react-router-dom';\r\n\r\nimport '../../css/modal.css';\r\n\r\nimport { loginAction } from '../../../actions/user';\r\n\r\nconst LoginModal = (props) => {\r\n    const [navigating, setNavigating] = useState(true);\r\n    const auth = useSelector((state) => state.user);\r\n    const navigate = useNavigate();\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault();\r\n        dispatch(loginAction(username, password));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.show) setNavigating(false);\r\n    }, [props]);\r\n\r\n    useEffect(() => {\r\n        if (auth._id) navigate('/skid/@me')\r\n    }, [auth, navigate])\r\n\r\n    return (\r\n        <form className=\"modal-body\" onSubmit={submitForm} >\r\n            <div className={`modal-container background-primary ${!navigating ? 'show' : ''}`}>\r\n                <div className=\"modal-form\">\r\n                    <div className=\"modal-form-header\">\r\n                        <span className=\"modal-header-title\">Welcome Back!</span>\r\n                        <small className=\"modal-header-desc\">We're so glad to see you again!</small>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">USERNAME</span>\r\n                        <input type=\"text\" className=\"modal-form-input\" value={username} onChange={(e) => setUsername(e.target.value)} placeholder=\"\"/>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">PASSWORD</span>\r\n                        <input type=\"password\" className=\"modal-form-input\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"\"/>\r\n                        <span className=\"login-register\"><Link to=\"/recover\" className=\"register-button\">Forgot your password?</Link></span>\r\n                    </div>\r\n                </div>\r\n                <button type=\"submit\" className=\"submit-button-long\">Login</button>\r\n                <span className=\"login-register-below\">Need an account? <Link to=\"/register\" className=\"register-button\">Register</Link></span>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LoginModal","import React from 'react'\r\n\r\nimport LoginModal from '../../homepage/modals/LoginModal'\r\n\r\nconst Login = (props) => {\r\n    return (\r\n        <div className=\"body\">\r\n            <LoginModal {...props} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate , Link } from 'react-router-dom';\r\n\r\nimport '../../css/modal.css';\r\n\r\nimport { registerAction } from '../../../actions/user';\r\n\r\nconst RegisterModal = (props) => {\r\n    const [navigating, setNavigating] = useState(true);\r\n    const auth = useSelector((state) => state.user);\r\n    const navigate = useNavigate();\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confPassword, setConfPassword] = useState('');\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const checkForm = () => {\r\n        if (username.length < 1 || password.length < 1 || confPassword.length < 1 ) return setError('Invalid form.');\r\n        if (username.includes(' ') || username.includes('#') || username.includes('\"') || \r\n            username.includes(\"'\") || username.includes(\"&\") || username.includes(\"@\") || \r\n            username.includes(\"~\") || username.includes(\"/\") || username.includes(\",\") || \r\n            username.includes(\">\")  ) return setError(`Username must not contain special characters including: # ' \" & @ ~ / > < `);\r\n        if (password.includes(' ')) return setError('Password cannot include spaces.');\r\n        if (username.length < 5) return setError('Username must be larger than 4 characters.');\r\n        if (username.length > 15) return setError('Username must be less than 15 characters.');\r\n        if (password !== confPassword) return setError('Passwords do not match.');\r\n        dispatch(registerAction( username, password ))\r\n    }\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault();\r\n        checkForm();\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.show) setNavigating(false);\r\n    }, [props]);\r\n\r\n    useEffect(() => {\r\n        if (auth._id) navigate('/skid/@me')\r\n    }, [auth, navigate])\r\n\r\n    const [error, setError] = useState('')\r\n\r\n\r\n    return (\r\n        <form className=\"modal-body\" onSubmit={submitForm}>\r\n            <div className={`modal-container background-primary ${!navigating ? 'show' : ''}`}>\r\n                <div className=\"modal-form\">\r\n                    <div className=\"modal-form-header\">\r\n                        <span className=\"modal-header-title\">Create an account</span>\r\n                        <small className=\"modal-err-desc\">{error}</small>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">USERNAME</span>\r\n                        <input type=\"text\" className=\"modal-form-input\" value={username} onChange={(e) => setUsername(e.target.value)} placeholder=\"\"/>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">PASSWORD</span>\r\n                        <input type=\"password\" className=\"modal-form-input\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"\"/>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">CONFIRM PASSWORD</span>\r\n                        <input type=\"password\" className=\"modal-form-input\" value={confPassword} onChange={(e) => setConfPassword(e.target.value)} placeholder=\"\"/>\r\n                    </div>\r\n                </div>\r\n                <button type=\"submit\" className=\"submit-button-long\">Register</button>\r\n                <span className=\"login-register-below\">Already have an account? <Link to=\"/login\" className=\"register-button\">Login</Link></span>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default RegisterModal\r\n","import React from 'react'\r\n\r\nimport RegisterModal from '../../homepage/modals/RegisterModal'\r\n\r\nconst Register = (props) => {\r\n    return (\r\n        <div className=\"body\">\r\n            <RegisterModal {...props} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register","import axios from 'axios';\r\n\r\nconst URI = process.env.NODE_ENV === 'production' ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const getAllOnlineMembers = (serverId) => axios.get(URI + `/api/v1/user/getAllOnlineUsers?serverId=${serverId}`, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n});","import axios from 'axios';\r\n\r\nconst URI = process.env.NODE_ENV === 'production' ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const getServer = (serverId) => serverId ? axios.get(URI + `/api/v1/server/getServer?serverId=${serverId}`, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n}) : null;","import axios from 'axios';\r\n\r\nconst URI = process.env.NODE_ENV === 'production' ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const createServer = (serverName) => serverName ? axios.post(URI + `/api/v1/server/createServer`, { serverName }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n}) : null;","import axios from 'axios';\r\n\r\nconst URI = process.env.NODE_ENV === 'production' ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const deleteServer = (serverId) => serverId ? axios.post(URI + `/api/v1/server/deleteServer`, { serverId }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n}) : null;","import axios from 'axios';\r\n\r\nconst URI = process.env.NODE_ENV === 'production' ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const leaveServer = (serverId) => serverId ? axios.post(URI + `/api/v1/server/leaveServer`, { serverId },{\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n}) : null;","import { getGlobalServer } from '../api/server/getGlobalServer';\r\nimport { getAllServers } from '../api/server/getAllServers';\r\nimport { getAllOnlineMembers } from '../api/server/getAllOnlineMembers';\r\nimport { getServer } from '../api/server/getServer';\r\nimport { createServer } from '../api/server/createServer';\r\nimport { deleteServer } from '../api/server/deleteServer';\r\nimport { leaveServer } from '../api/server/leaveServer';\r\n\r\nexport const getAllServersAction = () => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await getAllServers();\r\n        dispatch({ type: 'GET_ALL_SERVERS', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const getServerAction = (serverId) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await getServer(serverId);\r\n        dispatch({ type: 'GET_SERVER', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const createServerAction = (serverName) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await createServer(serverName);\r\n        dispatch({ type: 'CREATE_SERVER', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\n\r\nexport const deleteServerAction = (serverId) => async (dispatch) =>  {\r\n    try {\r\n        await deleteServer(serverId);\r\n        dispatch({ type: 'DELETE_SERVER', payload: serverId });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const leaveServerAction = (serverId) => async (dispatch) =>  {\r\n    try {\r\n        await leaveServer(serverId);\r\n        dispatch({ type: 'LEAVE_SERVER', payload: serverId });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const hideServerAction = (serverId) => async (dispatch) =>  {\r\n    try {\r\n        dispatch({ type: 'HIDE_SERVER', payload: serverId });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const getAllOnlineMembersAction = (serverId) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await getAllOnlineMembers(serverId);\r\n        dispatch({ type: 'GET_ALL_ONLINE_USERS', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const getGlobalServerAction = () => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await getGlobalServer();\r\n        dispatch({ type: 'GLOBAL_SERVER', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}","import axios from 'axios';\r\n\r\nconst URI = process.env.NODE_ENV === 'production' ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const getAllServers = () => axios.get(URI + `/api/v1/server/getAllServers`, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n});","import axios from 'axios';\r\n\r\nconst URI = process.env.NODE_ENV === 'production' ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const getAllChannels = (serverId) => serverId ? axios.get(URI + `/api/v1/channel/getAllChannels?serverId=${serverId}`, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n}) : null;","import axios from 'axios';\r\n\r\nconst URI = process.env.NODE_ENV === 'production' ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const getChannel = (channelId) => channelId ? axios.get(URI + `/api/v1/channel/getChannel?channelId=${channelId}`, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n}) : null;","import axios from 'axios';\r\n\r\nconst URI = process.env.NODE_ENV === 'production' ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const createChannel =  (serverId, categoryId, channelName) => serverId && categoryId && channelName ? axios.post(URI + `/api/v1/channel/createChannel`, { serverId, categoryId, channelName }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n}) : null; ","import React, { useEffect, useState, useCallback } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { createServerAction } from '../../../../actions/server';\r\n\r\nconst NewServer = (props) => {\r\n    const [serverName, setServerName] = useState('');\r\n    const user = useSelector(state => state.user);\r\n    const dispatch = useDispatch();\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        dispatch(createServerAction(serverName));\r\n        setServerName('');\r\n        props.close(false);\r\n    }\r\n\r\n    const handleKeyPress = useCallback( (e) => {\r\n        if (e.key === \"Escape\") props.close(false)\r\n        if (e.key === \"Enter\") document.getElementById('submit-new-server').click();\r\n    }, [props]);\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('keydown', handleKeyPress, false);\r\n        return () => document.removeEventListener('keydown', handleKeyPress, false);\r\n    }, [handleKeyPress])\r\n\r\n    return (\r\n        <form className={`modal-underbody ${props.show && 'show'}`} onSubmit={handleSubmit}>\r\n            <div className={`modal-container-app background-primary ${props.show && 'show'}`}>\r\n                <div className=\"modal-form\">\r\n                    <div className=\"modal-form-header-app\">\r\n                        <span className=\"modal-header-title-app\">Create server</span>\r\n                        <small className=\"modal-header-desc-app\">Give your new server a personality with a name. You can always change it later.</small>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">SERVER NAME</span>\r\n                        <input type=\"text\" className=\"modal-form-input\" value={serverName} onChange={(e) => setServerName(e.target.value)} placeholder={`${user.username}'s server`}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"options-container background-secondary\">\r\n                    <button type=\"button\" className=\"cancel-button\" onClick={() => {props.close(false); setServerName('')}}>Cancel</button>\r\n                    <button type=\"button\" className=\"cancel-button\" onClick={() => {\r\n                        props.join(true);\r\n                        props.close(false);\r\n                        setServerName('')\r\n                    }}>Join a Server</button>\r\n                    <button type=\"submit\" id=\"submit-new-server\" className=\"submit-button\">Create server</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default NewServer","import axios from 'axios';\r\n\r\nconst URI = process.env.NODE_ENV === 'production' ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const getInviteFromServer = (serverId) => serverId ? axios.get(URI + `/api/v1/invite/getInviteFromServer?serverId=${serverId}`, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n}) : null;","import axios from 'axios';\r\n\r\nconst URI = process.env.NODE_ENV === 'production' ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const getServerFromInvite = (inviteCode) => inviteCode ? axios.get(URI + `/api/v1/invite/getServerFromInvite?inviteCode=${inviteCode}`, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n}) : null;","import axios from 'axios';\r\n\r\nconst URI = process.env.NODE_ENV === 'production' ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const createInvite = (serverId, inviteCode) => serverId ? axios.post(URI + `/api/v1/invite/createInvite`, { serverId, inviteCode }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n}) : null;","import axios from 'axios';\r\n\r\nconst URI = process.env.NODE_ENV === 'production' ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const joinInvite = (inviteCode) => inviteCode ? axios.post(URI + `/api/v1/invite/joinInvite`, { inviteCode },{\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n}) : null;","import { getInviteFromServer } from '../api/invite/getInviteFromServer';\r\nimport { getServerFromInvite } from '../api/invite/getServerFromInvite';\r\nimport { createInvite } from '../api/invite/createInvite';\r\nimport { joinInvite } from '../api/invite/joinInvite';\r\n\r\nexport const getInviteFromServerAction = (serverId) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await getInviteFromServer(serverId);\r\n        dispatch({ type: 'GET_INVITE', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const getServerFromInviteAction = (inviteCode) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await getServerFromInvite(inviteCode);\r\n        dispatch({ type: 'GET_SERVER_FROM_INVITE', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const createInviteAction = (serverId, inviteCode) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await createInvite(serverId, inviteCode);\r\n        dispatch({ type: 'CREATE_INVITE', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const joinInviteAction = (inviteCode) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await joinInvite(inviteCode);\r\n        dispatch({ type: 'JOIN_INVITE', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { joinInviteAction } from '../../../../actions/invite';\r\n\r\n\r\nconst JoinServer = (props) => {\r\n    const [inviteCode, setInviteCode] = useState('');\r\n    const [error, setError] = useState('')\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        splitInviteCode(inviteCode)\r\n        dispatch(joinInviteAction(inviteCode));\r\n        props.close(false);\r\n    }\r\n\r\n    const splitInviteCode = (inviteCode) => {\r\n        inviteCode = inviteCode.split(`:`).at(-1).split(`//`).at(-1).split(`skid.rocks/invite`).at(-1).split(`skid.today/invite`).at(-1);\r\n        inviteCode = inviteCode.split(`/`)[1] || inviteCode.split(`/`).at(-1);\r\n        inviteCode = inviteCode.replace(/\\s+/g, '') // remove whitespace\r\n        if (inviteCode === '') return setError('Invite is invalid or expired.');\r\n        setError('');\r\n        setInviteCode(inviteCode);\r\n    }\r\n\r\n    const handleKeyPress = useCallback( (e) => {\r\n        if (e.key === \"Escape\") props.close(false)\r\n        if (e.key === \"Enter\") document.getElementById('submit-join-channel').click();\r\n    }, [props]);\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('keydown', handleKeyPress, false);\r\n        return () => document.removeEventListener('keydown', handleKeyPress, false);\r\n    }, [handleKeyPress])\r\n\r\n    return (\r\n        <form className={`modal-underbody ${props.show && 'show'}`} onSubmit={handleSubmit}>\r\n            <div className={`modal-container-app background-primary ${props.show && 'show'}`}>\r\n                <div className=\"modal-form\">\r\n                    <div className=\"modal-form-header-app\">\r\n                        <span className=\"modal-header-title-app\">Join server</span>\r\n                        <small className=\"modal-header-desc-app\">Enter an invite below to join an existing server.</small>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className={`modal-form-input-header ${error !== '' && 'error-invite'}`}>Invite Link {error !== '' && `- ${error}`}</span>\r\n                        <input type=\"text\" className=\"modal-form-input\" value={inviteCode} onChange={(e) => setInviteCode(e.target.value)} placeholder=\"skid.today/invite/aO9yuf\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"options-container background-secondary\">\r\n                    <button type=\"button\" className=\"cancel-button\" onClick={() => {props.close(false); setInviteCode('')}}>Cancel</button>\r\n                    <button type=\"submit\" id=\"submit-join-channel\" className=\"submit-button\">Join server</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default JoinServer;","import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams, useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport './ServerNavbar.css';\r\n// import { getServer, removeServer, getServers } from '../../../actions/servers';\r\nimport { hideServerAction, getGlobalServerAction } from '../../../actions/server';\r\nimport { getAllChannelsAction, getChannelAction } from '../../../actions/channel';\r\nimport { useSocket } from '../../../contexts/socket';\r\n\r\nimport { FaGlobeAmericas } from 'react-icons/fa';\r\n\r\nimport NewServer from '../modals/newserver/NewServer';\r\nimport JoinServer from '../modals/joinserver/JoinServer';\r\n\r\nconst ServerNavbar = () => {\r\n    const [allServers, setAllServers] = useState([]);\r\n    const [showNewServerModal, setShowNewServerModal] = useState(false);\r\n    const [showJoinServerModal, setShowJoinServerModal] = useState(false);\r\n    const allServerChannelsSelector = useSelector((state) => state.channel.allServerChannels);\r\n    const allServersSelector = useSelector((state) => state.server.allServers);\r\n    const globalServer = useSelector((state) => state.server.global);\r\n    const redirectToChannel = useSelector((state) => state.channel.redirectToChannel);\r\n\r\n    const { serverId, channelId } = useParams();\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const socket = useSocket();\r\n\r\n    useEffect(() => {\r\n        if (!socket) return;\r\n\r\n        socket.on('deleteServer', (serverIdSocket) => {\r\n            dispatch(hideServerAction(serverId));\r\n            if (serverId === serverIdSocket) navigate('/skid/@me');\r\n        })\r\n    }, [serverId, socket, dispatch, navigate]);\r\n\r\n    useEffect(() => {\r\n        setAllServers(allServersSelector);\r\n    }, [allServersSelector]);\r\n\r\n    useEffect(() => {\r\n        dispatch(getGlobalServerAction());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllChannelsAction(serverId));\r\n    }, [serverId, dispatch])\r\n\r\n    useEffect(() => {\r\n        if (channelId === 'redirect' || channelId === 'null') return;\r\n        dispatch(getChannelAction(channelId));\r\n    }, [channelId, dispatch])\r\n\r\n    useEffect(() => {\r\n        if (!redirectToChannel) return;\r\n        if (!serverId) return;\r\n        const foundChanelInServer = allServerChannelsSelector.filter((c) => c.server === serverId && c._id === channelId);\r\n        if (foundChanelInServer[0]) return;\r\n        navigate(`/skid/${serverId}/${redirectToChannel}`);\r\n    }, [serverId, channelId, redirectToChannel, allServerChannelsSelector, navigate])\r\n\r\n    // useEffect(() => {\r\n    //     if (channelId === 'redirect') {\r\n    //         navigate(`/skid/${serverId}/${allServersChannelsSelector[0] ? allServersChannelsSelector[0]._id : 'redirect'}`);\r\n    //     }\r\n    // }, [serverId, channelId, allServersChannelsSelector])\r\n\r\n    // useEffect(() => {\r\n    //     if (channelId !== 'redirect') return;\r\n    //     if (!allServersChannelsSelector[0]) return;\r\n    //     navigate(`/skid/${serverId}/${allServersChannelsSelector[0]._id}`);\r\n    // }, [serverId, channelId, allServersChannelsSelector]);\r\n\r\n    return (\r\n        <>\r\n            <NewServer show={showNewServerModal} close={setShowNewServerModal} join={setShowJoinServerModal} />\r\n            <JoinServer show={showJoinServerModal} close={setShowJoinServerModal} />\r\n            \r\n            <div className=\"navbar background-tertiary\">\r\n                <Link to=\"/skid/@me\">\r\n                    <div className={`selected-noti ${!serverId ? 'active' : null}`}></div>\r\n                    <div className={`navbar-server hover-skid background-primary ${!serverId ? 'home-selected' : null}`}>\r\n                        <svg className='server-icon' aria-hidden=\"false\" width=\"28\" height=\"20\" viewBox=\"0 0 28 20\"><path fill=\"currentColor\" d=\"M23.0212 1.67671C21.3107 0.879656 19.5079 0.318797 17.6584 0C17.4062 0.461742 17.1749 0.934541 16.9708 1.4184C15.003 1.12145 12.9974 1.12145 11.0283 1.4184C10.819 0.934541 10.589 0.461744 10.3368 0.00546311C8.48074 0.324393 6.67795 0.885118 4.96746 1.68231C1.56727 6.77853 0.649666 11.7538 1.11108 16.652C3.10102 18.1418 5.3262 19.2743 7.69177 20C8.22338 19.2743 8.69519 18.4993 9.09812 17.691C8.32996 17.3997 7.58522 17.0424 6.87684 16.6135C7.06531 16.4762 7.24726 16.3387 7.42403 16.1847C11.5911 18.1749 16.408 18.1749 20.5763 16.1847C20.7531 16.3332 20.9351 16.4762 21.1171 16.6135C20.41 17.0369 19.6639 17.3997 18.897 17.691C19.3052 18.4993 19.7718 19.2689 20.3021 19.9945C22.6677 19.2689 24.8929 18.1364 26.8828 16.6466H26.8893C27.43 10.9731 25.9665 6.04728 23.0212 1.67671ZM9.68041 13.6383C8.39754 13.6383 7.34085 12.4453 7.34085 10.994C7.34085 9.54272 8.37155 8.34973 9.68041 8.34973C10.9893 8.34973 12.0395 9.54272 12.0187 10.994C12.0187 12.4453 10.9828 13.6383 9.68041 13.6383ZM18.3161 13.6383C17.0332 13.6383 15.9765 12.4453 15.9765 10.994C15.9765 9.54272 17.0124 8.34973 18.3161 8.34973C19.6184 8.34973 20.6751 9.54272 20.6543 10.994C20.6543 12.4453 19.6184 13.6383 18.3161 13.6383Z\"></path></svg>\r\n                        <span className=\"tool\">Home</span>\r\n                    </div>\r\n                </Link>\r\n\r\n                { allServers[0] || globalServer._id ? <div className=\"divider background-primary\" /> : null }\r\n\r\n                {globalServer._id && \r\n                <Link key={-1} to={`/skid/${globalServer._id}/redirect`}>\r\n                    <div className={`selected-noti ${globalServer._id === serverId ? 'active' : null}`}></div>\r\n                    <div className={`navbar-server  hover-skid background-primary ${globalServer._id === serverId ? 'home-selected' : null}`}>\r\n                        {/* <span className='server-title'>{globalServer.name?.split(\" \")[0]?.slice(0, 1)}{globalServer.name.split(\" \")[1]?.slice(0, 1)}</span> */}\r\n                        <FaGlobeAmericas className='server-title global' />\r\n                        <span className=\"tool\">{globalServer.name}</span>\r\n                    </div>\r\n                </Link>}\r\n\r\n                {\r\n                    allServers.map((server, i) => {\r\n                        if (!server) return null;\r\n                        return (\r\n                            <Link key={i} to={`/skid/${server._id}/redirect`}>\r\n                                <div className={`selected-noti ${server._id === serverId ? 'active' : null}`}></div>\r\n                                <div className={`navbar-server hover-skidr background-primary ${server._id === serverId ? 'home-selected' : null}`}>\r\n                                    <span className='server-title'>{server.name.split(\" \")[0]?.slice(0, 1)}{server.name.split(\" \")[1]?.slice(0, 1)}</span>\r\n                                    <span className=\"tool\">{server.name}</span>\r\n                                </div>\r\n                            </Link>\r\n                        )\r\n                    })\r\n                }\r\n\r\n                <div className=\"divider background-primary\" />\r\n\r\n                <div className=\"navbar-server hover-site background-primary\" onClick={() => setShowNewServerModal(true)}>\r\n                <svg aria-hidden=\"false\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M20 11.1111H12.8889V4H11.1111V11.1111H4V12.8889H11.1111V20H12.8889V12.8889H20V11.1111Z\"></path></svg>\r\n                    <span className=\"tool\">Add a server</span>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ServerNavbar\r\n","import axios from 'axios';\r\n\r\nconst URI = process.env.NODE_ENV === 'production' ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const getGlobalServer = () => axios.get(URI + `/api/v1/server/getGlobalServer`, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n});","import { getAllChannels } from '../api/channel/getAllChannels';\r\nimport { getChannel } from '../api/channel/getChannel';\r\nimport { createChannel } from '../api/channel/createChannel';\r\nimport { deleteChannel } from '../api/channel/deleteChannel';\r\n\r\nexport const getAllChannelsAction = (serverId) => async (dispatch) =>  {\r\n    try {\r\n        if (!serverId) return;\r\n        const { data } = await getAllChannels(serverId);\r\n        dispatch({ type: 'GET_ALL_CHANNELS', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const getChannelAction = (channelId) => async (dispatch) =>  {\r\n    try {\r\n        if (!channelId) return;\r\n        const { data } = await getChannel(channelId);\r\n        dispatch({ type: 'GET_CHANNEL', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const createChannelAction = (serverId, categoryId, channelName) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await createChannel(serverId, categoryId, channelName);\r\n        dispatch({ type: 'CREATE_CHANNEL', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const deleteChannelAction = (channelId) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await deleteChannel(channelId);\r\n        dispatch({ type: 'CREATE_CHANNEL', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}","import axios from 'axios';\r\n\r\nconst URI = process.env.NODE_ENV === 'production' ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const getAllCategories = (serverId) => serverId ? axios.get(URI + `/api/v1/category/getAllCategories?serverId=${serverId}`, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n}) : null;","import axios from 'axios';\r\n\r\nconst URI = process.env.NODE_ENV === 'production' ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const createCategory = (serverId, categoryName) => serverId && categoryName ? axios.post(URI + `/api/v1/category/createCategory`, { serverId, categoryName }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n}) : null; ","export const checkReminder = (setter) => async (dispatch) =>  {\r\n    try {\r\n        dispatch({ type: 'REMINDER', payload: setter ? setter : JSON.parse(localStorage.getItem('reminder'))});\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const test = () => async (dispatch) =>  {\r\n    dispatch({ type: 'TEST', payload: '123'});\r\n}","import React, { useState, useEffect, useCallback } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\n\r\n// import { addCategory } from '../../../../actions/servers'\r\nimport { createCategoryAction } from '../../../../actions/category'\r\n\r\nimport './NewCategory.css'\r\n\r\nconst NewCategory = (props) => {\r\n    const [categoryName, setCategoryName] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const { serverId } = useParams();\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(createCategoryAction(serverId, categoryName))\r\n        setCategoryName('')\r\n        props.close(false)\r\n    }\r\n\r\n    const handleKeyPress = useCallback( (e) => {\r\n        if (e.key === \"Escape\") props.close(false)\r\n        if (e.key === \"Enter\") document.getElementById('submit-new-category').click();\r\n    }, [props]);\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('keydown', handleKeyPress, false);\r\n        return () => document.removeEventListener('keydown', handleKeyPress, false);\r\n    }, [handleKeyPress])\r\n\r\n    return (\r\n        <form className={`modal-underbody ${props.show && 'show'}`} onSubmit={handleSubmit}>\r\n            <div className={`modal-container-app background-primary ${props.show && 'show'}`}>\r\n                <div className=\"modal-form\">\r\n                    <div className=\"modal-form-header\">\r\n                        <span className=\"modal-header-title\">Create category</span>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">CATEGORY NAME</span>\r\n                        <input type=\"text\" className=\"modal-form-input\" value={categoryName} onChange={(e) => setCategoryName(e.target.value)} placeholder=\"New category\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"options-container background-secondary\">\r\n                    <button type=\"button\" onClick={() => props.close(false)} className=\"cancel-button\">Cancel</button>\r\n                    <button type=\"submit\" id=\"submit-new-category\" className=\"submit-button\">Create category</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default NewCategory\r\n","import { getAllCategories } from \"../api/category/getAllCategories\";\r\nimport { getCategory } from \"../api/category/getCategory\";\r\nimport { createCategory } from \"../api/category/createCategory\";\r\nimport { deleteCategory } from \"../api/category/deleteCategory\";\r\n\r\nexport const getAllCategoriesAction = (serverId) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await getAllCategories(serverId);\r\n        dispatch({ type: 'GET_ALL_CATEGORIES', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const getCategoryAction = (categoryId) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await getCategory(categoryId);\r\n        dispatch({ type: 'GET_CATEGORY', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const createCategoryAction = (serverId, categoryName) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await createCategory(serverId, categoryName);\r\n        dispatch({ type: 'CREATE_CATEGORY', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const deleteCategoryAction = (categoryId) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await deleteCategory(categoryId);\r\n        dispatch({ type: 'DELETE_CATEGORY', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n","import React, { useState, useEffect, useCallback } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport { createChannelAction } from '../../../../actions/channel'\r\n\r\nimport { FaHashtag } from 'react-icons/fa'\r\nimport { ImVolumeMedium } from 'react-icons/im'\r\n\r\nimport './NewChannel.css'\r\n\r\nconst NewChannel = (props) => {\r\n    const [channelName, setChannelName] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const { serverId } = useParams();\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(createChannelAction(serverId, props.categoryId, channelName));\r\n        setChannelName('');\r\n        props.setCategoryId('');\r\n        props.close(false);\r\n    }\r\n\r\n    const handleKeyPress = useCallback( (e) => {\r\n        if (e.key === \"Escape\") props.close(false)\r\n        if (e.key === \"Enter\") document.getElementById('submit-new-channel').click();\r\n    }, [props]);\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('keydown', handleKeyPress, false);\r\n        return () => document.removeEventListener('keydown', handleKeyPress, false);\r\n    }, [handleKeyPress])\r\n\r\n    return (\r\n        <form className={`modal-underbody ${props.show && 'show'}`} onSubmit={handleSubmit}>\r\n            <div className={`modal-container-app background-primary ${props.show && 'show'}`}>\r\n                <div className=\"modal-form\">\r\n                    <div className=\"modal-form-header\">\r\n                        <span className=\"modal-header-title\">Create text channel</span>\r\n                        <small className=\"modal-header-desc\">in {props.categoryId}</small>\r\n                    </div>\r\n                    <div className=\"modal-select-container\">\r\n                        <span className=\"modal-select-header\">CHANNEL TYPE</span>\r\n                        <div className=\"modal-type-container\">\r\n                            <div className=\"modal-select-type modal-selected-type\">\r\n                                <div className=\"select-check-wrapper\"><div className=\"select-check\"/></div>\r\n                                <FaHashtag className=\"select-type-icon\" />\r\n                                <div className=\"select-type-info\">\r\n                                    <span className=\"select-type-name\">Text Channel</span>\r\n                                    <small className=\"select-type-desc\">Post images, GIFs, opinions and puns</small>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-select-type modal-select-hover\">\r\n                                <div className=\"unselect-check-wrapper\"><div className=\"unselect-check\"/></div>\r\n                                <ImVolumeMedium className=\"select-type-icon\" />\r\n                                <div className=\"select-type-info\">\r\n                                    <span className=\"select-type-name\">Voice Channel</span>\r\n                                    <small className=\"select-type-desc\">Hang out with voice, video and screen sharing</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">CHANNEL NAME</span>\r\n                        <input type=\"text\" className=\"modal-form-input\" value={channelName} onChange={(e) => {setChannelName(e.target.value)}} placeholder=\"new-channel\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"options-container background-secondary\">\r\n                    <button type=\"button\" onClick={() => {props.setCategoryId('');props.close(false)}} className=\"cancel-button\">Cancel</button>\r\n                    <button type=\"submit\" id=\"submit-new-channel\" className=\"submit-button\">Create channel</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default NewChannel\r\n","import React, { useState, useEffect,useCallback } from 'react'\r\nimport './NewServerInvite.css';\r\n\r\n// import { createInvite, hasInvite } from '../../../../actions/servers';\r\nimport { createInviteAction } from '../../../../actions/invite';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst NewServerInvite = (props) => {\r\n    const { serverId } = useParams();\r\n    const [newInvite, setNewInvite] = useState(serverId.slice(-6, -1));\r\n    const [alreadyHasInvite, setAlreadyHasInvite] = useState(false);\r\n    const [currentServerInvite, setCurrentServerInvite] = useState('');\r\n    const [copied, setCopied] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const allInviteCodes = useSelector(state => state.invite.allInvites);\r\n    const [timeoutstate, setstateTimeout] = useState();\r\n\r\n\r\n    useEffect(() => {\r\n        let hasServerInviteCode = allInviteCodes.filter(inviteCode => inviteCode.server === serverId)\r\n        setAlreadyHasInvite(hasServerInviteCode[0] !== undefined);\r\n        if (hasServerInviteCode[0]) setCurrentServerInvite(hasServerInviteCode[0].invite)\r\n    }, [serverId, allInviteCodes]);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(createInviteAction(serverId, newInvite));\r\n    }\r\n\r\n    const handleKeyPress = useCallback( (e) => {\r\n        if (e.key === \"Escape\") props.close(false)\r\n    }, [props]);\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('keydown', handleKeyPress, false);\r\n        return () => document.removeEventListener('keydown', handleKeyPress, false);\r\n    }, [handleKeyPress])\r\n\r\n    return (\r\n        !alreadyHasInvite ? <form className={`modal-underbody ${props.show && 'show'}`} onSubmit={handleSubmit}>\r\n            <div className={`modal-container-app background-primary ${props.show && 'show'}`}>\r\n                <div className=\"modal-form\">\r\n                    <div className=\"modal-form-header\">\r\n                        <span className=\"modal-header-title\">Create Server Invite</span>\r\n                        <small className=\"modal-header-desc\">Give your server personality with a custom invite.</small>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">SERVER INVITE</span>\r\n                        <input type=\"text\" className=\"modal-form-input\" value={newInvite} onChange={(e) => setNewInvite(e.target.value)} placeholder=\"fun-server\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"options-container background-secondary\">\r\n                    <button type=\"button\" onClick={() => props.close(false)} className=\"cancel-button\">Cancel</button>\r\n                    <button type=\"submit\" id=\"submit-new-category\" className=\"submit-button\">Create Server Invite</button>\r\n                </div>\r\n            </div>\r\n        </form> : <div className={`modal-underbody ${props.show && 'show'}`}>\r\n            <div className={`modal-container-app background-primary ${props.show && 'show'}`}>\r\n                <div className=\"modal-form\">\r\n                    <div className=\"modal-form-header-invite\">\r\n                        <span className=\"modal-header-title-invite\">Invite friends to the server!</span>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container-invite\">\r\n                        <span className=\"modal-form-input-header\">SERVER INVITE</span>\r\n                        <div className=\"modal-form-input-readonly-container\">\r\n                            <input type=\"text\" className=\"modal-form-input-readonly\" value={currentServerInvite} readOnly />\r\n                            <button type=\"button\" className={`modal-form-button-readonly-copy ${copied && 'green'}`} onClick={() => {\r\n                                setCopied(true);\r\n                                navigator.clipboard.writeText(`${currentServerInvite}`);\r\n                                clearTimeout(timeoutstate);\r\n                                let timeout = setTimeout(() => {\r\n                                    setCopied(false);\r\n                                }, 1000)\r\n                                setstateTimeout(timeout);\r\n                            }}>{copied ? 'Copied' : 'Copy'}</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewServerInvite","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { MdClose } from 'react-icons/md';\r\n\r\nimport './UserSettings.css';\r\nimport { imageAction, logoutAction } from '../../../actions/user';\r\n\r\nconst UserSettings = (props) => {\r\n    const [image, setImage] = useState('');\r\n    const user = useSelector(state => state.user);\r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect(() => {\r\n        setImage(user.image)\r\n    }, [user]);\r\n\r\n    const handleImageChange = (e) => {\r\n        e.preventDefault();\r\n        dispatch(imageAction(image));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className={`settings ${props.class}`}>\r\n                <div className=\"close\" onClick={() => props.close(false)}>\r\n                    <MdClose size=\"18\" />\r\n                </div>\r\n                <section className='tabs'>\r\n                    <ul className='tab-buttons-container'>\r\n                        <div className=\"tab-section\">\r\n                            <span className=\"font-display section-title\">USER SETTINGS</span>\r\n                            <div className=\"section-items\">\r\n                                <button className=\"section-button text-channel-colour selected\" >My Account</button>\r\n                                <button className=\"section-button text-channel-colour\" >User Profile</button>\r\n                                <button className=\"section-button text-channel-colour\" >Privacy & Safety</button>\r\n                                <button className=\"section-button text-channel-colour\" >Authorised Apps</button>\r\n                                <button className=\"section-button text-channel-colour\" >Connections</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"divider-options\" />\r\n                        <form className=\"tab-section\" onSubmit={() => { dispatch(logoutAction()) }}>\r\n                            <button type=\"submit\" className=\"section-button logout text-channel-colour\" >Logout</button>\r\n                        </form>\r\n                    </ul>\r\n                </section>\r\n                <section className='options'>\r\n                    <div className=\"header-title-option\">My Account</div>\r\n                    <form className=\"option\" onSubmit={handleImageChange}>\r\n                        <span className=\"option-title\">Profile Picture URL</span>\r\n                        <input type=\"url\" className=\"modal-form-input-o\" pattern=\"https://.*\" value={image || 'https://cdn.skid.today/img/1f0bfc0865d324c2587920a7d80c609b.png'} onChange={(e) => setImage(e.target.value)} placeholder=\"\" />\r\n                        <button type='submit' className='submit-button-save'>Save</button>\r\n                    </form>\r\n                </section>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserSettings;\r\n","import React, { useState } from 'react';\r\nimport { MdMic, MdMicOff } from 'react-icons/md';\r\nimport { HiCog } from 'react-icons/hi';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport UserOptions from '../settings/UserSettings';\r\n\r\nconst UserInfo = (props) => {\r\n    const [showSettings, setShowSettings] = useState(false);\r\n    const [muted, setMuted] = useState(false);\r\n    const user = useSelector(state => state.user);\r\n    return (\r\n        <>\r\n            <UserOptions close={setShowSettings} class={`${showSettings && 'active'}`} />\r\n            <section className={`user-info background-secondary-alt ${props.className}`}>\r\n                <div className=\"profile-container\">\r\n                    <img className=\"profile-image\" src={user.image || 'https://cdn.skid.today/img/1f0bfc0865d324c2587920a7d80c609b.png'} alt=\"\" />    \r\n                    <div className=\"profile-name-container\">\r\n                        <span className=\"profile-name\">{user.username}</span>\r\n                        <small className=\"profile-tag\">{user._id}</small>\r\n                    </div>\r\n                </div>\r\n                <div className=\"buttons-container\">\r\n                    <div className=\"button-wrapper\" onClick={() => setMuted(!muted)}>\r\n                        <span className=\"button-tool\">{!muted ? 'Mute' : 'Unmute'}</span>\r\n                        {!muted ? <MdMic className=\"button\" /> : <MdMicOff className=\"button\" />}\r\n                    </div>\r\n                    <div className=\"button-wrapper\" onClick={() => setShowSettings(true)}>\r\n                        <span className=\"button-tool\">Settings</span>\r\n                        <HiCog className=\"button\" />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserInfo;\r\n","import React, { useState, useEffect, useCallback, useRef } from 'react'\r\nimport { FaChevronDown, FaPlus, FaHashtag, FaChevronRight } from 'react-icons/fa';\r\nimport { useParams, Link, useNavigate } from 'react-router-dom';\r\n\r\nimport './ChannelBar.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { getServerAction, deleteServerAction, leaveServerAction } from '../../../actions/server';\r\nimport { getAllCategoriesAction } from '../../../actions/category';\r\nimport { getInviteFromServerAction } from '../../../actions/invite';\r\nimport { checkReminder } from '../../../actions/other';\r\n\r\nimport { useSocket } from '../../../contexts/socket';\r\n\r\nimport NewCategory from '../../skidapp/modals/newcategory/NewCategory';\r\nimport NewChannel from '../../skidapp/modals/newchannel/NewChannel';\r\nimport NewServerInvite from '../modals/newserverinvite/NewServerInvite';\r\n\r\nimport UserInfo from './UserInfo';\r\n\r\nconst ChannelBar = () => {\r\n    const [showServerContextMenu, setShowServerContextMenu] = useState(false);\r\n    const [showNewCategoryModal, setShowNewCategoryModal] = useState(false);\r\n    const [showNewChannelModal, setShowNewChannelModal] = useState(false);\r\n    const [newChannelCategoryId, setNewChannelCategoryId] = useState('');\r\n    const [showNewInviteModal, setShowNewInviteModal] = useState(false);\r\n    const [allServerCategories, setAllServerCategories] = useState([]);\r\n    const contextMenuRef = useRef();\r\n    \r\n    const showReminder = useSelector(state => state.other.reminder)\r\n    const server = useSelector(state => state.server.currentServer);\r\n    const global = useSelector(state => state.server.global);\r\n    const categories = useSelector(state => state.category.allServerCategories);\r\n    const auth = useSelector(state => state.user);\r\n\r\n    const { serverId, channelId } = useParams();\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const socket = useSocket();\r\n\r\n    useEffect(() => {\r\n        dispatch(checkReminder());\r\n        dispatch(getServerAction(serverId));\r\n        dispatch(getAllCategoriesAction(serverId));\r\n        dispatch(getInviteFromServerAction(serverId));\r\n    }, [dispatch, serverId, channelId]);\r\n\r\n    useEffect(() => {\r\n        setAllServerCategories(categories);\r\n    }, [categories]);\r\n    \r\n    const handleClick = useCallback((e) => {\r\n        if (!showServerContextMenu) return;\r\n        if (contextMenuRef.current && !contextMenuRef.current.contains(e.target)) return setShowServerContextMenu(false);\r\n    }, [showServerContextMenu]);\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('click', handleClick)\r\n        return () => document.removeEventListener('click', handleClick)\r\n    }, [showServerContextMenu, handleClick])\r\n\r\n    const handleDeleteServer = () => {\r\n        socket.emit('deleteServer', serverId);\r\n        dispatch(deleteServerAction(serverId));\r\n        navigate('/skid/@me');\r\n    }\r\n\r\n    const handleLeaveServer = () => {\r\n        dispatch(leaveServerAction(serverId));\r\n        navigate('/skid/@me');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <NewServerInvite show={showNewInviteModal} close={setShowNewInviteModal} />\r\n            <NewCategory show={showNewCategoryModal} close={setShowNewCategoryModal} />\r\n            <NewChannel categoryId={newChannelCategoryId} setCategoryId={setNewChannelCategoryId} show={showNewChannelModal} close={setShowNewChannelModal} />\r\n            <UserInfo />\r\n            <nav className={`channel-bar background-secondary noselect ${showReminder && 'rHeight'}`}>\r\n                <div className=\"channel-bar-items\" >\r\n                    <section className=\"server-name\" onClick={() => setShowServerContextMenu(!showServerContextMenu)}>\r\n                        <h2 className=\"server-name-header font-primary\">{server.name}</h2>\r\n                        <FaChevronDown className=\"server-name-chevron\" />\r\n                        <ul ref={contextMenuRef} className={`context-menu ${showServerContextMenu && 'on'}`}>\r\n                            {serverId !== global._id ? <>\r\n                                <li className=\"context-menu-item blue text-blue\" onClick={() => setShowNewInviteModal(true)}>\r\n                                    <button>Invite People</button>\r\n                                </li>\r\n                                <li className=\"context-menu-item blue\" onClick={() => setShowNewCategoryModal(true)}>\r\n                                    <button>Create Category</button>\r\n                                </li>\r\n                                {auth._id !== server.owner && <li className=\"context-menu-item red\" onClick={() => handleLeaveServer()}>\r\n                                    <button>Leave Server</button>\r\n                                </li>}\r\n                                {auth._id === server.owner && <li className=\"context-menu-item red\" onClick={() => handleDeleteServer()}>\r\n                                    <button>Delete Server</button>\r\n                                </li>}\r\n                            </>: <> \r\n                                <li className=\"context-menu-item blue text-blue\">\r\n                                    <button>Do Nothing</button>\r\n                                </li>\r\n                            </>}\r\n                        </ul>\r\n                    </section>\r\n                    <div className=\"channels\">\r\n                        {\r\n                            allServerCategories.map((category, i) => {\r\n                                return (\r\n                                    <Category key={i} category={category} setCategoryId={setNewChannelCategoryId} setShowNewChannelModal={setShowNewChannelModal} />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nconst Category = (props) => {\r\n    const [showCategoryChannels, setShowCategoryChannels] = useState(true);\r\n    const { serverId, channelId } = useParams();\r\n    const allChannels = useSelector(state => state.channel.allServerChannels);\r\n\r\n    return (\r\n        <div className=\"category\">\r\n            <div className=\"category-header text-channel-colour-group\">\r\n                {showCategoryChannels ? <FaChevronDown className={`category-chevron colour-group-item`} onClick={() => setShowCategoryChannels(!showCategoryChannels)} /> :\r\n                    <FaChevronRight className=\"category-chevron colour-group-item\" onClick={() => setShowCategoryChannels(!showCategoryChannels)} />}\r\n                <span className=\"category-header-text font-display colour-group-item\" onClick={() => setShowCategoryChannels(!showCategoryChannels)} >{props.category.name.toUpperCase()}</span>\r\n                <FaPlus className=\"category-add colour-group-item\" onClick={() => {props.setShowNewChannelModal(true); props.setCategoryId(props.category._id)}} />\r\n            </div>\r\n            <div className=\"children\">\r\n                {\r\n                    allChannels.filter((c) => c.category === props.category._id).map((channel, i) => {\r\n                        return (showCategoryChannels &&\r\n                            <Link to={`/skid/${serverId}/${channel._id}`} key={i}>\r\n                                <div className={`channel text-channel-colour ${channelId === channel._id ? 'selected' : '' }`}>\r\n                                    <FaHashtag className=\"channel-hashtag text-channel-colour\" />\r\n                                    <span className=\"channel-title font-primary\">{channel.name}</span>\r\n                                </div>\r\n                            </Link>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default ChannelBar\r\n","import axios from 'axios';\r\n\r\nconst URI = process.env.NODE_ENV === 'production' ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const getAllMessages = (serverId, channelId) => serverId && channelId ? axios.get(URI + `/api/v1/message/getAllMessages?serverId=${serverId}&channelId=${channelId}`, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n}) : null;","import axios from 'axios';\r\n\r\nconst URI = process.env.NODE_ENV === 'production' ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const createMessage = (content, serverId, categoryId, channelId) => content && serverId && categoryId && channelId ? axios.post(URI + `/api/v1/message/createMessage`, { content, serverId, categoryId, channelId }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n}) : 'awd'; ","import { getAllMessages } from \"../api/message/getAllMessages\";\r\nimport { getMessage } from \"../api/message/getMessage\";\r\nimport { createMessage } from \"../api/message/createMessage\";\r\nimport { deleteMessage } from \"../api/message/deleteMessage\";\r\n\r\nexport const getAllMessagesAction = (serverId, channelId) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await getAllMessages(serverId, channelId);\r\n        dispatch({ type: 'GET_ALL_MESSAGES', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const getMessageAction = (messageId) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await getMessage(messageId);\r\n        dispatch({ type: 'GET_MESSAGE', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const addMessageToAll = (message) => async (dispatch) =>  {\r\n    try {\r\n        dispatch({ type: 'ADD_MESSAGE_TO_ALL', payload: message });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const createMessageAction = (content, serverId, categoryId, channelId) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await createMessage(content, serverId, categoryId, channelId);\r\n        dispatch({ type: 'CREATE_MESSAGE', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const deleteMessageAction = (messageId) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await deleteMessage(messageId);\r\n        dispatch({ type: 'DELETE_MESSAGE', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSocket } from '../../../contexts/socket';\r\n\r\nimport { addMessageToAll, createMessageAction, getAllMessagesAction } from '../../../actions/message';\r\nimport { notifyChannelAndServer } from '../../../actions/notifications';\r\n\r\nimport './UserContent.css';\r\nimport { getAllOnlineMembersAction } from '../../../actions/server';\r\n\r\nconst UserContent = () => {\r\n    const [createdMessage, setCreatedMessage] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [allMessages, setAllMessages] = useState([]);\r\n\r\n    const user = useSelector(state => state.user);\r\n    const channel = useSelector(state => state.channel.currentChannel);\r\n    const allMessagesSelector = useSelector(state => state.message.allChannelMessages);\r\n    const showReminder = useSelector(state => state.other.reminder)\r\n    const currentMessage = useSelector(state => state.message.currentMessage)\r\n    const server = useSelector(state => state.server)\r\n\r\n    const { serverId, channelId } = useParams();\r\n    const socket = useSocket();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (channelId === 'redirect') return;\r\n        dispatch(getAllMessagesAction(serverId, channelId));\r\n    }, [dispatch, serverId, channelId]);\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllOnlineMembersAction(serverId));\r\n    }, [serverId, dispatch])\r\n\r\n    useEffect(() => {\r\n        setAllMessages(allMessagesSelector);\r\n    }, [allMessagesSelector, setAllMessages]);\r\n\r\n    useEffect(() => {\r\n        if (!socket && !createdMessage.owner) return;\r\n        socket.emit('message', createdMessage);\r\n    }, [socket, createdMessage]);\r\n\r\n    useEffect(() => {\r\n        setCreatedMessage(currentMessage);\r\n    }, [currentMessage]);\r\n\r\n    useEffect(() => {\r\n        if (!socket) return;\r\n        socket.off('message');\r\n        socket.off('online');\r\n        socket.off('offline');\r\n\r\n        socket.on('message', (message) => {\r\n            if (message.owner === user._id) return;\r\n            if (message.server === serverId && message.channel === channelId) dispatch(addMessageToAll(message));\r\n            else dispatch(notifyChannelAndServer(message.messageServerId, message.messageChannel));\r\n        });\r\n\r\n        socket.on('online', () => {\r\n            dispatch(getAllOnlineMembersAction(serverId));\r\n        });\r\n\r\n        socket.on('offline', () => {\r\n            dispatch(getAllOnlineMembersAction(serverId));\r\n        });\r\n    }, [socket, user, serverId, channelId, dispatch]);\r\n\r\n    const handleCreateMessageForm = async (e) => {\r\n        e.preventDefault();\r\n        dispatch(createMessageAction(message, serverId, channel.category, channelId));\r\n        setMessage('');\r\n    }\r\n\r\n    return (\r\n        <div className={`user-content background-primary ${showReminder && 'reminder-user-content'}`}>\r\n            <div className=\"channel-name background-primary\">\r\n                <span className=\"channel-info-name\">{channel.name}</span>\r\n            </div>\r\n            <div className=\"chat\">\r\n                <div className=\"chat-bar-container\">\r\n                    <form className=\"chat-bar background-primary-alt\" onSubmit={handleCreateMessageForm}>\r\n                        <input type=\"text\" placeholder={`Message #${channel.name}`} value={message} onChange={(e) => setMessage(e.target.value)} className=\"chat-bar-area\" />\r\n                    </form>\r\n                </div>   \r\n                <div className=\"chat-container\">\r\n                    { \r\n                        allMessages.map((message, i) => {\r\n                            return (\r\n                                message.small ? <div className=\"chat-item-small\" key={message._id}>\r\n                                    <div className=\"chat-item-content\">\r\n                                        <span className=\"chat-item-text\">{message.content}</span>\r\n                                    </div>\r\n                                </div> :\r\n                                <div className=\"chat-item\" key={i}>\r\n                                    <img className=\"chat-item-picture\" src={message.image} alt=\"\" />\r\n                                    <div className=\"chat-item-content\">\r\n                                        <div className=\"chat-user-info\">\r\n                                            <span className=\"chat-item-name\">{message.ownerName}</span>\r\n                                            <span className=\"chat-item-date\">{new Date(message.creation).toLocaleDateString()}</span>\r\n                                        </div>\r\n                                        <span className=\"chat-item-text\">{message.content}</span>\r\n                                    </div>\r\n                                </div> \r\n                            )\r\n                        })\r\n                    }\r\n                    <div className=\"chat-container-header\">\r\n                        <span className='chat-contiainer-header-text-large'>Welcome to #{channel.name}!</span>\r\n                        <small className=\"chat-contiainer-header-text-small\">This is the start of the #{channel.name} channel.</small>\r\n                    </div>\r\n                </div>             \r\n            </div>\r\n            <div className=\"member-list background-secondary\">\r\n                <div className=\"member-list-category\">\r\n                    <span className=\"member-list-name text-channel-colour\">ONLINE - {server.allOnlineUsers.length}</span>\r\n                    <div className=\"members\">\r\n                        <div className=\"member\">\r\n                            <img className=\"member-profile-image\" alt=\"profile\" src={user.image ? user.image : 'https://cdn.skid.today/img/1f0bfc0865d324c2587920a7d80c609b.png' } />\r\n                            <span className=\"member-name text-primary\">{user.username}</span>\r\n                        </div>\r\n                        {\r\n                            server.allOnlineUsers.map(member => {\r\n                                if (member._id === user._id) return null;\r\n                                return <div className=\"member\">\r\n                                    <img className=\"member-profile-image\" alt=\"profile\" src={member.image ? member.image : 'https://cdn.skid.today/img/1f0bfc0865d324c2587920a7d80c609b.png' } />\r\n                                    <span className=\"member-name text-primary\">{member.username}</span>\r\n                                </div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"member-list-category\">\r\n                    <span className=\"member-list-name text-channel-colour\">OFFLINE - {server.allOfflineUsers.length}</span>\r\n                    <div className=\"members\">\r\n                        {\r\n                            server.allOfflineUsers.map(member => {\r\n                                if (member._id === user._id) return null;\r\n                                return <div className=\"member\">\r\n                                    <img className=\"member-profile-image\" alt=\"profile\" src={member.image ? member.image : 'https://cdn.skid.today/img/1f0bfc0865d324c2587920a7d80c609b.png' } />\r\n                                    <span className=\"member-name text-muted\">{member.username}</span>\r\n                                </div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserContent\r\n","export const notifyChannelAndServer = (serverId, channelId) => async (dispatch) =>  {\r\n    try {\r\n        dispatch({ type: 'NOTIFY_SERVER_CHANNEL', payload: { serverId, channelId } });\r\n    } catch(e) {\r\n        console.log(e);\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { MdClose } from 'react-icons/md';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { checkReminder } from '../../../actions/other';\r\n\r\nimport './Reminder.css';\r\n\r\nconst Reminder = () => {\r\n    const [showReminder, setShowReminder] = useState(JSON.parse(localStorage.getItem('reminder')));\r\n    const dispatch = useDispatch();\r\n\r\n    const hideReminder = () => {\r\n        setShowReminder(false);\r\n        localStorage.setItem('reminder', JSON.stringify(false));\r\n        dispatch(checkReminder(false));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('reminder') === null) {\r\n            localStorage.setItem('reminder', true);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {showReminder && <div className=\"reminder\">\r\n                <div className=\"reminder-title\">\r\n                    Have you heard of notds? Check out their amazing mutitool! \r\n                    <a href=\"https://github.com/jugoslovenska/notds\" className=\"reminder-button\">click here!</a>\r\n                </div>\r\n                <MdClose className='reminder-close' onClick={() => hideReminder()}/>\r\n            </div>}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Reminder;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../../skidapp/skidapp.css'\r\n\r\nimport { getAllServersAction } from '../../../actions/server';\r\nimport { testAction } from '../../../actions/user';\r\n\r\n// Main Components\r\nimport ServerNavbar from '../../skidapp/navbar/ServerNavbar';\r\nimport ChannelBar from '../../skidapp/channelbar/ChannelBar';\r\nimport UserContent from '../../skidapp/usercontent/UserContent';\r\nimport Reminder from '../../skidapp/reminder/Reminder';\r\n\r\n// Modals\r\n// import NewChannel from '../../skidapp/modals/newchannel/NewChannel'\r\n// import NewCategory from '../../skidapp/modals/newcategory/NewCategory'\r\n// import NewServer from '../../skidapp/modals/newserver/NewServer'\r\n\r\nconst SkidApp = () => {\r\n    const auth = useSelector((state) => state.user);\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (!auth._id) navigate('/login');\r\n        dispatch(getAllServersAction());\r\n    }, [auth, navigate, dispatch]);\r\n\r\n    useEffect(() => {\r\n        dispatch(testAction());\r\n    }, [])\r\n\r\n    return (\r\n        auth.auth && <div className=\"flex h-screen w-screen overflow-hidden\">\r\n            <ServerNavbar />\r\n            <div className=\"reminder-container\">\r\n                <Reminder />\r\n                <div className=\"flex h-full w-full transition-none user-context-navbar-container\">\r\n                    <ChannelBar />\r\n                    <UserContent />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SkidApp\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport '../../skidapp/skidapp.css';\r\nimport { getAllServersAction } from '../../../actions/server';\r\nimport { testAction } from '../../../actions/user';\r\n\r\n// Main Components\r\nimport ServerNavbar from '../../skidapp/navbar/ServerNavbar';\r\nimport UserInfo from '../../skidapp/channelbar/UserInfo';\r\nimport Reminder from '../../skidapp/reminder/Reminder';\r\nconst SkidApp = () => {\r\n    const auth = useSelector((state) => state.user);\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (!auth._id) navigate('/login');\r\n        dispatch(getAllServersAction());\r\n    }, [auth, navigate, dispatch]);\r\n\r\n    useEffect(() => {\r\n        dispatch(testAction());\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"flex h-screen w-screen overflow-hidden\">\r\n            <ServerNavbar />\r\n            <UserInfo className=\"ml-[72px]\" />\r\n            <div className=\"reminder-container\">\r\n                <Reminder />    \r\n                <div className=\"flex transition-none user-context-navbar-container\">\r\n                    <nav className=\"channel-bar background-secondary\"/>\r\n                    <div className=\"user-content background-primary flex flex-grow\"></div> \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SkidApp\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport '../../skidapp/skidapp.css'\r\nimport './SkidAppInvite.css'\r\n\r\nimport { joinInviteAction, getServerFromInviteAction } from '../../../actions/invite';\r\n\r\n// import NewChannel from '../../skidapp/modals/newchannel/NewChannel'\r\n// import NewCategory from '../../skidapp/modals/newcategory/NewCategory'\r\n// import NewServer from '../../skidapp/modals/newserver/NewServer'\r\n\r\nconst SkidAppInvite = () => {\r\n    const auth = useSelector((state) => state.user);\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const { inviteCode } = useParams();\r\n\r\n    const serverFromLink = useSelector((state) => state.invite.serverFromInvite);\r\n\r\n    useEffect(() => {\r\n        dispatch(getServerFromInviteAction(inviteCode))\r\n    }, [dispatch, inviteCode])\r\n\r\n    const onClick = () => {\r\n        if (!auth._id) return navigate('/login');\r\n        dispatch(joinInviteAction(inviteCode));\r\n        navigate(`/skid/${serverFromLink._id}/redirect`);\r\n    }\r\n\r\n    const redirect = () => {\r\n        if (!auth._id) return navigate('/login');\r\n        navigate(`/skid/@me`);\r\n    }\r\n\r\n    return (\r\n        serverFromLink._id ? <div className=\"invite-body\">\r\n            <div className=\"modal-container-inv background-primary\">\r\n                <div className=\"modal-form-inv\">\r\n                    <div className=\"modal-form-header-inv\">\r\n                        <small className=\"modal-header-desc-inv\">You have been invited to join</small>\r\n                        <span className=\"modal-header-title-inv\">{serverFromLink.name}!</span>\r\n                    </div>\r\n                </div>\r\n                <button type=\"submit\" onClick={onClick} className=\"submit-button-inv\">Accept Invite</button>\r\n            </div>\r\n        </div> : <div className=\"invite-body\">\r\n            <div className=\"modal-container-inv2 show background-primary\">\r\n                <div className=\"modal-form\">\r\n                    <div className=\"modal-form-header-inv2\">\r\n                        <span className=\"modal-header-title-inv2\">Invite Invalid</span>\r\n                        <small className=\"modal-header-desc-inv2\">This invite may be expired or you might not have permission to join.</small>\r\n                    </div>\r\n                </div>\r\n                <button type=\"submit\" onClick={redirect} className=\"submit-button-inv\">Continue to Site</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SkidAppInvite\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Routes, Route, useNavigate } from 'react-router-dom';\r\nimport { useSocket } from '../contexts/socket';\r\n\r\nimport './css/modal.css';\r\n\r\n// HomePage Route Elements\r\nimport HomePage from './pages/homePage/HomePage';\r\nimport Login from './pages/homePage/Login';\r\nimport Register from './pages/homePage/Register';\r\n\r\n// SkidApp Elements\r\nimport SkidApp from './pages/skidApp/SkidApp';\r\nimport SkidAppMe from './pages/skidApp/SkidAppMe';\r\nimport SkidAppInvite from './pages/skidApp/SkidAppInvite';\r\n\r\nconst App = () => {\r\n    const user = useSelector(state => state.user);\r\n    const socket = useSocket();\r\n\r\n    useEffect(() => {\r\n        if (!socket) return;\r\n        if (user.token) socket.emit('online');\r\n    }, [socket, user]);\r\n\r\n    return (\r\n        <>  \r\n            <Routes>\r\n                <Route path=\"/\" element={<HomePage />} />\r\n                <Route path=\"/login\" element={<Login show={true} />} />\r\n                <Route path=\"/register\" element={<Register show={true} />} />\r\n\r\n                <Route path=\"/invite/:inviteCode\" element={<SkidAppInvite />} />\r\n                \r\n                <Route path=\"/skid/:serverId/:channelId\" element={<SkidApp />} />\r\n                <Route path=\"/skid/@me\" element={<SkidAppMe />} />\r\n\r\n                <Route path=\"*\" element={<Redirect />} />\r\n            </Routes>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Redirect = () => {\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        navigate('/skid/@me');\r\n    }, [navigate])\r\n    return null;\r\n}\r\n\r\nexport default App\r\n","import jwtDecode from 'jwt-decode';\r\n\r\nconst initialState = (token) => {\r\n    const currentToken = token || JSON.parse(localStorage.getItem('token'));\r\n\r\n    try {\r\n        return {\r\n            token: currentToken, \r\n            ...jwtDecode(currentToken).data,\r\n            auth: false\r\n        }\r\n    } catch {\r\n        return {\r\n            token: JSON.stringify(null),\r\n            auth: false\r\n        }\r\n    }\r\n}\r\n\r\n//eslint-disable-next-line\r\nexport default (state = initialState(), action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN':\r\n            if (!action.payload) return { ...initialState() };\r\n            localStorage.setItem('token', JSON.stringify(action.payload.jwt));\r\n            return { ...initialState(action.payload.jwt) };\r\n        case 'LOGOUT':\r\n            localStorage.setItem('token', JSON.stringify(null))\r\n            return { ...initialState() };\r\n        case 'REGISTER':\r\n            if (!action.payload) return { ...initialState() };\r\n            localStorage.setItem('token', JSON.stringify(action.payload.jwt));\r\n            return { ...initialState(action.payload.jwt) };\r\n        case 'IMAGE':\r\n            if (!action.payload) return state;\r\n            return { ...initialState(action.payload.jwt) };\r\n        case 'AUTH':\r\n            return { ...state, auth: action.payload.auth }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport server from './server.js';\r\nimport category from './category.js';\r\nimport channel from './channel.js';\r\nimport message from './message.js';\r\n\r\nimport invite from './invite.js';\r\nimport user from './user.js';\r\nimport notify from './notify.js';\r\nimport other from './other.js';\r\n\r\nexport default combineReducers({\r\n    server, category, channel, message, invite, user, notify, other\r\n});","const initialState = () => {\r\n    return {\r\n        currentServer : {},\r\n        global : {},\r\n        allServers: [],\r\n        allOnlineUsers: [],\r\n        allOfflineUsers: []\r\n    }\r\n}\r\n\r\n//eslint-disable-next-line\r\nexport default (state = initialState(), action) => {\r\n    switch (action.type) {\r\n        case 'JOIN_INVITE':\r\n            if (!action.payload) return state;\r\n            return { ...state, currentServer: action.payload, allServers: [...state.allServers, action.payload] };\r\n        case 'GET_ALL_SERVERS':\r\n            if (!action.payload) return state;\r\n            return { ...state, allServers: [...action.payload] };\r\n        case 'CREATE_SERVER':\r\n            if (!action.payload) return state;\r\n            return { ...state, allServers: [...state.allServers, action.payload] };\r\n        case 'GET_SERVER':\r\n            if (!action.payload) return state;\r\n            return { ...state, currentServer: action.payload };\r\n        case 'DELETE_SERVER':\r\n            if (!action.payload) return state;\r\n            return { ...state, allServers: state.allServers.filter((server => server._id !== action.payload)) };\r\n        case 'LEAVE_SERVER':\r\n            if (!action.payload) return state;\r\n            return { ...state, allServers: state.allServers.filter((server => server._id !== action.payload)) };\r\n        case 'GET_ALL_ONLINE_USERS':\r\n            if (!action.payload) return state;\r\n            return { ...state, allOnlineUsers: [...action.payload.online], allOfflineUsers: [...action.payload.offline] };\r\n        case 'GLOBAL_SERVER':\r\n            if (!action.payload) return state;\r\n            return { ...state, global: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = () => {\r\n    return {\r\n        currentCategory : {},\r\n        allServerCategories: []\r\n    }\r\n}\r\n\r\n//eslint-disable-next-line\r\nexport default (state = initialState(), action) => {\r\n    switch (action.type) {\r\n        case 'GET_ALL_CATEGORIES':\r\n            if (!action.payload) return state;\r\n            return { ...state, allServerCategories: action.payload };\r\n        case 'GET_CATEGORY':\r\n            if (!action.payload) return state;\r\n            return { ...state, currentCategory: action.payload };\r\n        case 'CREATE_CATEGORY':\r\n            if (!action.payload) return state;\r\n            return { ...state, allServerCategories: [...state.allServerCategories, action.payload] };\r\n        case 'DELETE_CATEGORY':\r\n            if (!action.payload) return state;\r\n            return { ...state, allServerCategories: [...action.payload] };\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = () => {\r\n    return {\r\n        currentChannel: {},\r\n        redirectToChannel: null,\r\n        allServerChannels: []\r\n    }\r\n}\r\n\r\n//eslint-disable-next-line\r\nexport default (state = initialState(), action) => {\r\n    switch (action.type) {\r\n        case 'GET_ALL_CHANNELS':\r\n            if (!action.payload) return state;\r\n            return { ...state, allServerChannels: [...action.payload], redirectToChannel: action.payload[0]._id };\r\n        case 'CREATE_CHANNEL':\r\n            if (!action.payload) return state;\r\n            return { ...state, allServerChannels: [...state.allServerChannels, action.payload] };\r\n        case 'GET_CHANNEL':\r\n            if (!action.payload) return state;\r\n            return { ...state, currentChannel: action.payload };\r\n        case 'DELETE_CHANNEL':\r\n            if (!action.payload) return state;\r\n            return { ...state, allServerChannels: [...action.payload] };\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = () => {\r\n    return {\r\n        currentMessage: {},\r\n        allChannelMessages: []\r\n    }\r\n}\r\n\r\n//eslint-disable-next-line\r\nexport default (state = initialState(), action) => {\r\n    switch (action.type) {\r\n        case 'GET_ALL_MESSAGES':\r\n            if (!action.payload) return state;\r\n            return { ...state, allChannelMessages: [...action.payload] };\r\n        case 'ADD_MESSAGE_TO_ALL':\r\n            if (!action.payload) return state;\r\n            return { ...state, allChannelMessages: [action.payload, ...state.allChannelMessages] };\r\n        case 'GET_MESSAGE':\r\n            if (!action.payload) return state;\r\n            return { ...state, currentMessage: action.payload };\r\n        case 'CREATE_MESSAGE':\r\n            if (!action.payload) return state;\r\n            return { ...state, currentMessage: action.payload, allChannelMessages: [action.payload, ...state.allChannelMessages]};\r\n        case 'DELETE_MESSAGE':\r\n            if (!action.payload) return state;\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = () => {\r\n    return {\r\n        serverFromInvite: {},\r\n        allInvites: []\r\n    }\r\n}\r\n\r\n//eslint-disable-next-line\r\nexport default (state = initialState(), action) => {\r\n    switch (action.type) {\r\n        case 'GET_SERVER_FROM_INVITE':\r\n            if (!action.payload) return { ...state, serverFromInvite: {} };\r\n            return { ...state, serverFromInvite: action.payload };\r\n        case 'GET_INVITE':\r\n            if (!action.payload) return state;\r\n            for (let invite of state.allInvites) if (invite._id === action.payload._id) return state;\r\n            return { ...state, allInvites: [action.payload, ...state.allInvites] };\r\n        case 'CREATE_INVITE':\r\n            if (!action.payload) return state;\r\n            return { ...state, allInvites: [action.payload, ...state.allInvites] };\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = () => {\r\n    return {\r\n        notify: []\r\n    }\r\n}\r\n\r\n//eslint-disable-next-line\r\nexport default (state = initialState(), action) => {\r\n    switch (action.type) {\r\n        case 'NOTIFY_SERVER_CHANNEL':\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = () => {\r\n    return {\r\n        reminder : {}\r\n    };\r\n}\r\n\r\n//eslint-disable-next-line\r\nexport default (state = initialState(), action) => {\r\n    switch (action.type) {\r\n        case 'REMINDER':\r\n            return { ...state, reminder: action.payload };\r\n        case 'TEST':\r\n            console.log(action.payload)\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nimport reducers from './reducers';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { SocketProvider } from './contexts/socket';\r\n\r\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <SocketProvider>\r\n        <App />\r\n      </SocketProvider>\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}