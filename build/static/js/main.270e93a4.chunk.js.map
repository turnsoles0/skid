{"version":3,"sources":["contexts/socket.js","components/homepage/navbar/HomeNavbar.jsx","components/pages/HomePage/HomePage.jsx","api/index.js","components/homepage/modals/LoginModal.jsx","actions/login.js","components/pages/HomePage/Login.jsx","components/homepage/modals/RegisterModal.jsx","actions/servers.js","components/skidapp/modals/newserver/NewServer.jsx","components/skidapp/navbar/ServerNavbar.jsx","components/skidapp/modals/newcategory/NewCategory.jsx","components/skidapp/modals/newchannel/NewChannel.jsx","components/skidapp/options/UserOptions.jsx","components/skidapp/channelbar/UserInfo.jsx","components/skidapp/channelbar/ChannelBar.jsx","components/skidapp/usercontent/UserContent.jsx","actions/notifications.js","components/skidapp/reminder/Reminder.jsx","components/pages/SkidApp/SkidApp.jsx","components/pages/SkidApp/SkidAppMe.jsx","components/App.jsx","reducers/auth.js","reducers/index.js","reducers/servers.js","reducers/notify.js","index.jsx"],"names":["SocketContext","React","createContext","useSocket","useContext","SocketProvider","children","useState","socket","setSocket","auth","useSelector","state","useEffect","newSocket","io","token","close","Provider","value","HomeNavbar","className","href","to","HomePage","messages","used","selectQuote","index","Math","floor","random","length","selectedMsg","includes","push","URI","changePfp","data","axios","post","headers","localStorage","getItem","getServer","sId","get","getChannel","cId","addServer","serverName","addCategory","categoryName","addChannel","categoryId","channelName","joinInvite","invite","inviteCode","LoginModal","navigate","useNavigate","username","setUsername","password","setPassword","dispatch","useDispatch","userId","onSubmit","e","usercred","preventDefault","a","userLoginData","type","payload","console","log","onChange","target","placeholder","Login","RegisterModal","confPassword","setConfPassword","checkForm","setError","userRegisterData","error","api","removeServer","checkReminder","setter","JSON","parse","sendMessage","message","channelId","serverId","messageContent","NewServer","props","setServerName","handleSubmit","handleKeyPress","key","document","getElementById","click","addEventListener","removeEventListener","onClick","id","ServerNavbar","showModal","setShowModal","servers","all","useParams","on","map","server","i","_id","allCategorys","allChannels","NewCategory","setCategoryName","NewChannel","setChannelName","UserOptions","pfpUrl","setPfpUrl","user","useLayoutEffect","class","size","datato","url","jwt","pattern","UserInfo","showSettings","setShowSettings","muted","setMuted","src","alt","Category","showItems","setShowItems","category","toUpperCase","setShowChannelModal","channel","ChannelBar","showContext","setShowContext","showCategoryModal","setShowCategoryModal","showChannelModal","show","reminder","current","joinServerFromInvite","handleDeleteServer","emit","deleteServer","UserContent","setMessage","setMessages","allMessages","off","messageUserId","messageServerId","messageChannel","getMessage","submitForm","isSmall","profilePicture","messageOwner","Date","messageCreation","toLocaleDateString","Reminder","setShow","setItem","SkidApp","Redirect","App","path","element","SkidAppMe","initial","currentToken","jwtDecode","userRole","profileUrl","setJwt","action","newJwt","userJwt","combineReducers","filter","notify","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render"],"mappings":"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","file":"static/js/main.270e93a4.chunk.js","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst SocketContext = React.createContext();\r\n\r\nexport const useSocket = () => {\r\n    return useContext(SocketContext);\r\n}\r\n\r\nexport const SocketProvider = ({ children }) => {\r\n    const [socket, setSocket] = useState();\r\n    const auth = useSelector((state) => state.auth);\r\n\r\n    useEffect(() => {\r\n        const newSocket = io(process.env.NODE_ENV  ? 'localhost:5000' : \"https://skid.rocks\", {\r\n            auth: {\r\n                token: auth.token || null\r\n            }\r\n        });\r\n        setSocket(newSocket);\r\n\r\n        return () => newSocket.close();\r\n    }, [auth]);\r\n\r\n    return (\r\n        <SocketContext.Provider value={socket}>\r\n            {children}\r\n        </SocketContext.Provider>\r\n    );\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport './HomeNavbar.css'\r\n\r\nconst HomeNavbar = () => {\r\n    return (\r\n        <div className=\"home-navbar\">\r\n            <div className=\"left-items\">\r\n                <h1 className=\"left-title\"><span className=\"title-color-change\">skid</span>.rocks <span className='smol'>v1.2.1</span></h1>\r\n                <a href=\"https://github.com/ulnk/skid\" className=\"left-item\">Features</a>\r\n                <a href=\"https://github.com/ulnk/skid\" className=\"left-item\">GitHub</a>\r\n                <a href=\"https://github.com/ulnk/skid\" className=\"left-item\">About</a>\r\n            </div>\r\n            <div className=\"right-items\">\r\n                <Link to=\"/login\"><button className=\"login-button\">Login</button></Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeNavbar\r\n","import React from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport '../../homepage/homepage.css'\r\nimport '../../skidapp/skidapp.css'\r\n\r\n// Componenets\r\nimport HomeNavbar from '../../homepage/navbar/HomeNavbar'\r\n\r\n\r\nconst HomePage = () => {\r\n    let messages = [\r\n        'Blasting NBA Youngboy on OBlock, been in the game since \\'02.',\r\n        'P2P Encryption.',\r\n        '14.2 Million Bots Connected.',\r\n        'Pushin\\' P.',\r\n        'Central Cee > OBlock.',\r\n        'OBlock smoking on Tooka.',\r\n        'Built using BQN.',\r\n        'You wouldn\\'t steal a car.',\r\n        'Gunna & Future - pushin P (feat. Young Thug) [Official Video]',\r\n        'I can rhyme Orange and Banana. Bornana.',\r\n        'Miria Botnet < Brixton Botnet.',\r\n        'NOTDS Multitool.',\r\n        'Killer Whales at SeaWorld™️',\r\n        'Osaka > Brush & Cyan > Horion.',\r\n        'skid.rocks oxygen when?',\r\n        'Jesus died for chocolate eggs.',\r\n    ]\r\n\r\n    let used = [];\r\n\r\n    const selectQuote = () => {\r\n        const index = Math.floor(Math.random() * messages.length);\r\n        let selectedMsg = messages[index];\r\n        if (used.includes(messages[index])) return selectQuote();\r\n        used.push(messages[index]);\r\n        return selectedMsg;\r\n    }\r\n\r\n    return (\r\n        <div className=\"home-body\">\r\n            <HomeNavbar />\r\n            <div className=\"home-header\">\r\n                <h1 className=\"home-header-title\">{selectQuote()}</h1>\r\n                <span className=\"home-header-desc\">{selectQuote()}</span>\r\n                <div className=\"home-buttons-container\">\r\n                    <a href=\"https://github.com/ulnkos/skidcordprod\"><button className=\"home-github-main\">Check out our GitHub!</button></a>\r\n                    <Link to=\"/skid/@me\"><button className=\"home-login-main\">Open skidrocks in your browser</button></Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","import axios from 'axios';\r\n\r\nlet URI = 'https://skid.rocks'\r\nif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\r\n    URI = 'http://localhost:5000';\r\n};\r\n\r\nexport const login = (userLoginData) => axios.post(URI + '/api/login', userLoginData)\r\n\r\nexport const register = (userRegisterData) => axios.post(URI + '/api/register', userRegisterData)\r\n\r\nexport const changePfp = (data) => axios.post(URI + '/api/app/changePfp', data, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n});\r\n\r\nexport const getServers = () => axios.get(URI + '/api/app/getservers', {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n});\r\n\r\nexport const getServer = (sId) => sId ? axios.get(URI + `/api/app/getserver?sid=${sId}`, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n}) : null;\r\n\r\nexport const deleteServer = (serverId) =>  axios.post(URI + `/api/app/deleteserver`, { serverId }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n});\r\n\r\nexport const leaveServer = (serverId) =>  axios.post(URI + `/api/app/leaveserver`, { serverId }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n});\r\n\r\nexport const getChannel = (cId, sId) =>  axios.get(URI + `/api/app/getchannel?sid=${sId}&cid=${cId}`, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n});\r\n\r\nexport const sendMessage = (channelId, serverId, messageContent) =>  axios.post(URI + `/api/app/addmessage`, { serverId, channelId, messageContent }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n});\r\n\r\nexport const pseudoMessage = (channelId, serverId, messageContent) =>  axios.post(URI + `/api/app/pseudomessage`, { serverId, channelId, messageContent }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n});\r\n\r\n\r\nexport const addServer = (serverName) =>  axios.post(URI + `/api/app/addserver`, { serverName }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n});\r\n\r\nexport const addCategory = (categoryName, sId) =>  axios.post(URI + `/api/app/addcategory`, { categoryName, sId }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n});\r\n\r\nexport const addChannel = (sId, categoryId, channelName) =>  axios.post(URI + `/api/app/addchannel`, { sId, categoryId, channelName }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n});\r\n\r\nexport const joinInvite = (invite) =>  axios.post(URI + `/api/app/joinInvite`, { inviteCode: invite }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n});","import React, { useEffect, useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate , Link } from 'react-router-dom';\r\n\r\nimport './LoginModal.css'\r\n\r\nimport { login } from '../../../actions/login';\r\n\r\nconst LoginModal = () => {\r\n    const auth = useSelector((state) => state.auth.data);\r\n    const navigate = useNavigate();\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    // const username = useRef();\r\n    // const password = useRef();\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault();\r\n        // dispatch(login({username: username.current.value, password: password.current.value}));\r\n        dispatch(login({username, password}));\r\n        // console.log(username.current.value, password.current.value,)\r\n        // console.log(username, password)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (auth.userId) navigate('/skid/@me')\r\n    }, [auth.userId, navigate])\r\n\r\n    return (\r\n        <form className=\"login-body\" onSubmit={submitForm} >\r\n            <div className=\"modal-container background-primary\">\r\n                <div className=\"modal-form\">\r\n                    <div className=\"modal-form-header\">\r\n                        <span className=\"modal-header-title\">Welcome Back!</span>\r\n                        <small className=\"modal-header-desc\">We're so glad to see you again!</small>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">USERNAME</span>\r\n                        <input type=\"text\" className=\"modal-form-input\" value={username} onChange={(e) => setUsername(e.target.value)} placeholder=\"\"/>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">PASSWORD</span>\r\n                        <input type=\"password\" className=\"modal-form-input\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"\"/>\r\n                        <span className=\"login-register\"><Link to=\"/recover\" className=\"register-button\">Forgot your password?</Link></span>\r\n                    </div>\r\n\r\n                    {/* <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">USERNAME</span>\r\n                        <input type=\"text\" className=\"modal-form-input\" ref={username} placeholder=\"\"/>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">PASSWORD</span>\r\n                        <input type=\"password\" className=\"modal-form-input\" ref={password} placeholder=\"\"/>\r\n                        <span className=\"login-register\"><Link to=\"/recover\" className=\"register-button\">Forgot your password?</Link></span>\r\n                    </div> */}\r\n                </div>\r\n                <div className=\"options-container background-secondary\">\r\n                    <span className=\"login-register\">Need an account? <Link to=\"/register\" className=\"register-button\">Register</Link></span>\r\n                    <button type=\"submit\" className=\"submit-button\">Login</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LoginModal\r\n","import * as api from '../api/index'\r\n\r\nexport const login = (usercred) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await api.login(usercred);\r\n        dispatch({ type: 'LOGIN', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) =>  {\r\n    try {\r\n        dispatch({ type: 'LOGOUT', payload: null });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const register = (usercred) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await api.register(usercred);\r\n        dispatch({ type: 'REGISTER', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const changePfp = (datato) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await api.changePfp(datato);\r\n        dispatch({ type: 'PROFILEPICTURE', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}","import React from 'react'\r\n\r\nimport LoginModal from '../../homepage/modals/LoginModal'\r\n\r\nconst Login = () => {\r\n    return (\r\n        <div className=\"body\">\r\n            <LoginModal />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate , Link } from 'react-router-dom';\r\n\r\nimport './RegisterModal.css'\r\n\r\nimport { register } from '../../../actions/login';\r\n\r\nconst RegisterModal = () => {\r\n    const auth = useSelector((state) => state.auth.data);\r\n    const navigate = useNavigate();\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confPassword, setConfPassword] = useState('');\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const checkForm = () => {\r\n        if (username.length < 1 || password.length < 1 || confPassword.length < 1 ) return setError('Invalid form.');\r\n        if (username.includes(' ') || username.includes('#') || username.includes('\"') || \r\n            username.includes(\"'\") || username.includes(\"&\") || username.includes(\"@\") || \r\n            username.includes(\"~\") || username.includes(\"/\") || username.includes(\",\") || \r\n            username.includes(\">\")  ) return setError(`Username must not contain special characters including: # ' \" & @ ~ / > < `);\r\n        if (password.includes(' ')) return setError('Password cannot include spaces.');\r\n        if (username.length < 5) return setError('Username must be larger than 4 characters.');\r\n        if (username.length > 15) return setError('Username must be less than 15 characters.');\r\n        if (password !== confPassword) return setError('Passwords do not match.');\r\n        dispatch(register({ username, password }))\r\n    }\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault();\r\n        checkForm();\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (auth.userId) navigate('/skid/@me')\r\n    }, [auth.userId, navigate])\r\n\r\n    const [error, setError] = useState('')\r\n\r\n    return (\r\n        <form className=\"login-body\" onSubmit={submitForm}>\r\n            <div className=\"modal-container background-primary\">\r\n                <div className=\"modal-form\">\r\n                    <div className=\"modal-form-header\">\r\n                        <span className=\"modal-header-title\">Create an account</span>\r\n                        <small className=\"modal-err-desc\">{error}</small>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">USERNAME</span>\r\n                        <input type=\"text\" className=\"modal-form-input\" value={username} onChange={(e) => setUsername(e.target.value)} placeholder=\"\"/>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">PASSWORD</span>\r\n                        <input type=\"password\" className=\"modal-form-input\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"\"/>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">CONFIRM PASSWORD</span>\r\n                        <input type=\"password\" className=\"modal-form-input\" value={confPassword} onChange={(e) => setConfPassword(e.target.value)} placeholder=\"\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"options-container background-secondary\">\r\n                    <span className=\"login-register\">Already have an account? <Link to=\"/login\" className=\"register-button\">Login</Link></span>\r\n                    <button type=\"submit\" className=\"submit-button\">Register</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default RegisterModal\r\n","import * as api from '../api/index';\r\n\r\nexport const joinInvite = (invite) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await api.joinInvite(invite);\r\n        dispatch({ type: 'JOIN_INVITE', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const getServers = () => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await api.getServers();\r\n        dispatch({ type: 'GET_ALL_SERVERS', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const getServer = (sId) => async (dispatch) =>  {\r\n    if (!sId) return\r\n    try {\r\n        const { data } = await api.getServer(sId);\r\n        if (!data) return;\r\n        dispatch({ type: 'GET_CURRENT_SERVER', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const removeServer = (sId) => async (dispatch) =>  {\r\n    if (!sId) return\r\n    try {\r\n        dispatch({ type: 'REMOVE_SERVER', payload: sId });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const checkReminder = (setter) => async (dispatch) =>  {\r\n    try {\r\n        dispatch({ type: 'REMINDER', payload: setter ? setter : JSON.parse(localStorage.getItem('showReminder'))});\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\n\r\nexport const deleteServer = (sId) => async (dispatch) =>  {\r\n    if (!sId) return\r\n    try {\r\n        const { data } = await api.deleteServer(sId);\r\n        if (!data) return;\r\n        dispatch({ type: 'DELETE_SERVER', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const leaveServer = (sId) => async (dispatch) =>  {\r\n    if (!sId) return\r\n    try {\r\n        const { data } = await api.leaveServer(sId);\r\n        if (!data) return;\r\n        dispatch({ type: 'LEAVE_SERVER', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\n\r\nexport const getChannel = (cId, sId) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await api.getChannel(cId, sId);\r\n        if (!data) return;\r\n        dispatch({ type: 'GET_CURRENT_CHANNEL', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const getMessage = (message) => async (dispatch) =>  {\r\n    try {\r\n        dispatch({ type: 'GET_MESSAGE', payload: message });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const sendMessage = (cId, sId, message) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await api.sendMessage(cId, sId, message);\r\n        if (!data) return;\r\n        dispatch({ type: 'SEND_MESSAGE', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const addServer = (serverName) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await api.addServer(serverName);\r\n        if (!data) return;\r\n        dispatch({ type: 'ADD_SERVER', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const addServer2 = async (serverName) => {\r\n    try {\r\n        const { data } = await api.addServer(serverName);\r\n        if (!data) return;\r\n        return data\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const addCategory = (categoryName, sId) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await api.addCategory(categoryName, sId);\r\n        if (!data) return;\r\n        dispatch({ type: 'ADD_CATEGORY', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const addChannel = (sId, categoryId, channelName) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await api.addChannel(sId, categoryId, channelName);\r\n        if (!data) return;\r\n        dispatch({ type: 'ADD_CHANNEL', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}","import React, { useEffect, useRef, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { addServer } from '../../../../actions/servers'\r\nimport { useSocket } from '../../../../contexts/socket.js';\r\n\r\nimport './NewServer.css'\r\n\r\nconst NewServer = (props) => {\r\n    const [serverName, setServerName] = useState('');\r\n    const dispatch = useDispatch();\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        dispatch(addServer(serverName));\r\n        setServerName('');\r\n        props.close(false);\r\n    }\r\n    \r\n    const handleKeyPress = (e) => {\r\n        if (e.key === \"Escape\") props.close(false)\r\n        if (e.key === \"Enter\") document.getElementById('submit-new-server').click();\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('keydown', handleKeyPress, false);\r\n        return () => document.removeEventListener('keydown', handleKeyPress, false);\r\n    }, [])\r\n\r\n    return (\r\n        <form className=\"modal-underbody\" onSubmit={handleSubmit}>\r\n            <div className=\"modal-container background-primary\">\r\n                <div className=\"modal-form\">\r\n                    <div className=\"modal-form-header\">\r\n                        <span className=\"modal-header-title\">Create server</span>\r\n                        <small className=\"modal-header-desc\">Give your new server a personality with a name. You can always change it later.</small>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">SERVER NAME</span>\r\n                        <input type=\"text\" className=\"modal-form-input\" value={serverName} onChange={(e) => setServerName(e.target.value)} placeholder=\"genericuser's server\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"options-container background-secondary\">\r\n                    <button className=\"cancel-button\" onClick={() => props.close(false)}>Cancel</button>\r\n                    <button type=\"submit\" id=\"submit-new-server\" className=\"submit-button\">Create server</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NewServer","import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams, useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport './ServerNavbar.css';\r\nimport { getServer, removeServer, getServers } from '../../../actions/servers';\r\nimport { useSocket } from '../../../contexts/socket';\r\n\r\nimport NewServer from '../modals/newserver/NewServer'\r\n\r\nconst ServerNavbar = () => {\r\n    const [showModal, setShowModal] = useState(false);\r\n    const servers = useSelector((state) => state.servers.all);\r\n\r\n    const { sId } = useParams();\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const socket = useSocket();\r\n\r\n    useEffect(() => {\r\n        if (!socket) return\r\n\r\n        socket.on('deleteServer', (serverId) => {\r\n            dispatch(removeServer(serverId));\r\n            if (sId === serverId) navigate('/skid/@me');\r\n        })\r\n\r\n    }, [socket, dispatch, navigate])\r\n\r\n    return (\r\n        <>\r\n            { showModal && <NewServer close={setShowModal} /> }\r\n            <div className=\"navbar background-tertiary\">\r\n                <Link to=\"/skid/@me\">\r\n                    <div className={`selected-noti ${!sId ? 'active' : null}`}></div>\r\n                    <div className={`navbar-server hover-skid background-primary ${!sId ? 'home-selected' : null}`}>\r\n                        <span className=\"tool\">Home</span>\r\n                    </div>\r\n                </Link>\r\n\r\n                { servers[0] && <div className=\"divider background-primary\" /> }\r\n\r\n                {\r\n                    servers.map((server, i) => {\r\n                        return (\r\n                            <Link key={i} to={`/skid/${server._id}/${server.allCategorys[0].allChannels[0]._id}`}>\r\n                                <div className={`selected-noti ${server._id === sId ? 'active' : null}`}></div>\r\n                                <div className={`navbar-server hover-server background-primary ${server._id === sId ? 'server-selected' : null}`} onClick={() => {\r\n                                    dispatch(getServer());\r\n                                }}>\r\n                                    <span className=\"tool\">{server.serverName}</span>\r\n                                </div>\r\n                            </Link>\r\n                        )\r\n                    })\r\n                }\r\n\r\n                <div className=\"divider background-primary\" />\r\n\r\n                <div className=\"navbar-server hover-server background-primary\" onClick={() => setShowModal(true)}>\r\n                    <span className=\"tool\">Add a server</span>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ServerNavbar\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport { addCategory } from '../../../../actions/servers'\r\n\r\nimport './NewCategory.css'\r\n\r\nconst NewCategory = (props) => {\r\n    const [categoryName, setCategoryName] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const { sId } = useParams();\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(addCategory(categoryName, sId))\r\n        setCategoryName('')\r\n        props.close(false)\r\n    }\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === \"Escape\") props.close(false)\r\n        if (e.key === \"Enter\") document.getElementById('submit-new-category').click();\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('keydown', handleKeyPress, false);\r\n        return () => document.removeEventListener('keydown', handleKeyPress, false);\r\n    }, [])\r\n\r\n    return (\r\n        <form className=\"modal-underbody\" onSubmit={handleSubmit}>\r\n            <div className=\"modal-container background-primary\">\r\n                <div className=\"modal-form\">\r\n                    <div className=\"modal-form-header\">\r\n                        <span className=\"modal-header-title\">Create category</span>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">CATEGORY NAME</span>\r\n                        <input type=\"text\" className=\"modal-form-input\" value={categoryName} onChange={(e) => setCategoryName(e.target.value)} placeholder=\"New category\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"options-container background-secondary\">\r\n                    <button onClick={() => props.close(false)} className=\"cancel-button\">Cancel</button>\r\n                    <button type=\"submit\" id=\"submit-new-category\" className=\"submit-button\">Create category</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NewCategory\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport { addChannel } from '../../../../actions/servers'\r\n\r\n// eslint-disable-next-line\r\nimport { FaHashtag } from 'react-icons/fa'\r\n// eslint-disable-next-line\r\nimport { ImVolumeMedium } from 'react-icons/im'\r\n\r\nimport './NewChannel.css'\r\n\r\nconst NewChannel = (props) => {\r\n    const [channelName, setChannelName] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const { sId } = useParams();\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(addChannel(sId, props.categoryId, channelName));\r\n        setChannelName('');\r\n        props.close([false, '']);\r\n    }\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === \"Escape\") props.close(false)\r\n        if (e.key === \"Enter\") document.getElementById('submit-new-channel').click();\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('keydown', handleKeyPress, false);\r\n        return () => document.removeEventListener('keydown', handleKeyPress, false);\r\n    }, [])\r\n\r\n    return (\r\n        <form className=\"modal-underbody\" onSubmit={handleSubmit}>\r\n            <div className=\"modal-container background-primary\">\r\n                <div className=\"modal-form\">\r\n                    <div className=\"modal-form-header\">\r\n                        <span className=\"modal-header-title\">Create text channel</span>\r\n                        <small className=\"modal-header-desc\">in {props.categoryId}</small>\r\n                    </div>\r\n                    <div className=\"modal-select-container\">\r\n                        <span className=\"modal-select-header\">CHANNEL TYPE</span>\r\n                        <div className=\"modal-type-container\">\r\n                            <div className=\"modal-select-type modal-selected-type\">\r\n                                <div className=\"select-check-wrapper\"><div className=\"select-check\"/></div>\r\n                                <FaHashtag className=\"select-type-icon\" />\r\n                                <div className=\"select-type-info\">\r\n                                    <span className=\"select-type-name\">Text Channel</span>\r\n                                    <small className=\"select-type-desc\">Post images, GIFs, opinions and puns</small>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-select-type modal-select-hover\">\r\n                                <div className=\"unselect-check-wrapper\"><div className=\"unselect-check\"/></div>\r\n                                <ImVolumeMedium className=\"select-type-icon\" />\r\n                                <div className=\"select-type-info\">\r\n                                    <span className=\"select-type-name\">Voice Channel</span>\r\n                                    <small className=\"select-type-desc\">Hang out with voice, video and screen sharing</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">CHANNEL NAME</span>\r\n                        <input type=\"text\" className=\"modal-form-input\" value={channelName} onChange={(e) => {setChannelName(e.target.value)}} placeholder=\"new-channel\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"options-container background-secondary\">\r\n                    <button onClick={() => props.close([false, ''])} className=\"cancel-button\">Cancel</button>\r\n                    <button type=\"submit\" id=\"submit-new-channel\" className=\"submit-button\">Create channel</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NewChannel\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logout } from '../../../actions/login';\r\nimport { MdClose } from 'react-icons/md';\r\n\r\nimport './UserOptions.css';\r\nimport { useState } from 'react';\r\nimport { changePfp } from '../../../actions/login';\r\nimport { useLayoutEffect } from 'react';\r\n\r\nconst UserOptions = (props) => {\r\n    const dispatch = useDispatch();\r\n    const [pfpUrl, setPfpUrl] = useState('');\r\n    const user = useSelector(state => state.auth);\r\n\r\n    useLayoutEffect(() => {\r\n        setPfpUrl(user.data.pfpUrl)\r\n    }, [user]);\r\n\r\n    const handlePfpChange = (e) => {\r\n        e.preventDefault();\r\n        dispatch(changePfp({ url: pfpUrl, jwt: user.token }));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={`settings ml-[-72px] ${props.class}`}>\r\n                <div className=\"close\" onClick={() => props.close(false)}>\r\n                    <MdClose size=\"18\" />\r\n                </div>\r\n                <section className='tabs'>\r\n                    <ul className='tab-buttons-container'>\r\n                        <div className=\"tab-section\">\r\n                            <span className=\"font-display section-title\">USER SETTINGS</span>\r\n                            <div className=\"section-items\">\r\n                                <button className=\"section-button text-channel-colour selected\" >My Account</button>\r\n                                {/* <button className=\"section-button text-channel-colour\" >User Profile</button>\r\n                            <button className=\"section-button text-channel-colour\" >Privacy & Safety</button>\r\n                            <button className=\"section-button text-channel-colour\" >Authorised Apps</button>\r\n                            <button className=\"section-button text-channel-colour\" >Connections</button> */}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"divider-options\" />\r\n                        <form className=\"tab-section\" onSubmit={() => { dispatch(logout()) }}>\r\n                            <button type=\"submit\" className=\"section-button logout text-channel-colour\" >Logout</button>\r\n                        </form>\r\n                    </ul>\r\n                </section>\r\n                <section className='options'>\r\n                    <div className=\"header-title-option\">My Account</div>\r\n                    <form className=\"option\" onSubmit={handlePfpChange}>\r\n                        <span className=\"option-title\">Profile Picture URL</span>\r\n                        <input type=\"url\" className=\"modal-form-input-o\" pattern=\"https://.*\" value={pfpUrl} onChange={(e) => setPfpUrl(e.target.value)} placeholder=\"\" />\r\n                        <button type='submit' className='submit-button-save'>Save</button>\r\n                    </form>\r\n                </section>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserOptions;\r\n","import React, { useState } from 'react';\r\nimport { MdMic, MdMicOff } from 'react-icons/md';\r\nimport { HiCog } from 'react-icons/hi';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport UserOptions from '../options/UserOptions';\r\n\r\nconst UserInfo = (props) => {\r\n    const [showSettings, setShowSettings] = useState(false);\r\n    const [muted, setMuted] = useState(false);\r\n    const user = useSelector(state => state.auth.data);\r\n\r\n    return (\r\n        <>\r\n            <UserOptions close={setShowSettings} class={`${showSettings && 'active'}`} />\r\n            <section className={`user-info background-secondary-alt ${props.className}`}>\r\n                <div className=\"profile-container\">\r\n                    <img className=\"profile-image\" src={user.pfpUrl} alt=\"\" />    \r\n                    <div className=\"profile-name-container\">\r\n                        <span className=\"profile-name\">{user.username}</span>\r\n                        <small className=\"profile-tag\">{user.userId}</small>\r\n                    </div>\r\n                </div>\r\n                <div className=\"buttons-container\">\r\n                    <div className=\"button-wrapper\" onClick={() => setMuted(!muted)}>\r\n                        <span className=\"button-tool\">{!muted ? 'Mute' : 'Unmute'}</span>\r\n                        {!muted ? <MdMic className=\"button\" /> : <MdMicOff className=\"button\" />}\r\n                    </div>\r\n                    <div className=\"button-wrapper\" onClick={() => setShowSettings(true)}>\r\n                        <span className=\"button-tool\">Settings</span>\r\n                        <HiCog className=\"button\" />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserInfo;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { FaChevronDown, FaPlus, FaHashtag, FaChevronRight } from 'react-icons/fa';\r\nimport { useParams, Link, useNavigate } from 'react-router-dom';\r\n\r\nimport './ChannelBar.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { getServer, deleteServer, checkReminder, joinInvite } from '../../../actions/servers';\r\nimport { useSocket } from '../../../contexts/socket';\r\n\r\nimport NewCategory from '../../skidapp/modals/newcategory/NewCategory';\r\nimport NewChannel from '../../skidapp/modals/newchannel/NewChannel';\r\n\r\nimport UserInfo from './UserInfo';\r\n\r\nconst ChannelBar = () => {\r\n    const [showContext, setShowContext] = useState(false);\r\n    const [showCategoryModal, setShowCategoryModal] = useState(false);\r\n    const [showChannelModal, setShowChannelModal] = useState([false, '']);\r\n    \r\n    const show = useSelector(state => state.servers.reminder)\r\n    const server = useSelector(state => state.servers.current);\r\n\r\n    const { sId } = useParams();\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const socket = useSocket();\r\n\r\n    const joinServerFromInvite = () => {\r\n        dispatch(joinInvite('1'));\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getServer(sId));\r\n        dispatch(checkReminder());\r\n    }, [dispatch, sId]);\r\n\r\n    const handleDeleteServer = () => {\r\n        socket.emit('deleteServer', sId)\r\n        dispatch(deleteServer(sId));\r\n        navigate('/skid/@me');\r\n    }\r\n\r\n    return (\r\n        server._id ?\r\n            (<>\r\n                {showCategoryModal && <NewCategory close={setShowCategoryModal} />}\r\n                {showChannelModal[0] && <NewChannel categoryId={showChannelModal[1]} close={setShowChannelModal} />}\r\n                <UserInfo />\r\n                <nav className={`channel-bar background-secondary ${show && 'rHeight'}`}>\r\n                    <div className=\"channel-bar-items\" >\r\n                        <section className=\"server-name\" onClick={() => setShowContext(!showContext)}>\r\n                            <h2 className=\"server-name-header font-primary\">{server.serverName}</h2>\r\n                            <FaChevronDown className=\"server-name-chevron\" />\r\n                            {/* {showContext && */}\r\n                                <ul className={`context-menu ${showContext && 'on'}`}>\r\n                                    <li className=\"context-menu-item blue\" onClick={() => setShowCategoryModal(true)}>\r\n                                        <button>Create Category</button>\r\n                                    </li>\r\n                                    <li className=\"context-menu-item blue\" onClick={() => joinServerFromInvite()}>\r\n                                        <button>Join Random Server</button>\r\n                                    </li>\r\n                                    {sId !== '625c7d70df1a464bb9d6d059' ? <>\r\n                                        <li className=\"context-menu-item red\" onClick={() => handleDeleteServer()}>\r\n                                            <button>Delete Server</button>\r\n                                        </li> \r\n                                        <li className=\"context-menu-item red\" onClick={() => joinServerFromInvite()}>\r\n                                            <button>Leave Server</button>\r\n                                        </li>\r\n                                    </>: null}\r\n                                </ul>\r\n                            {/* } */}\r\n                        </section>\r\n                        <div className=\"channels\">\r\n                            {\r\n                                server.allCategorys.map((category, i) => {\r\n                                    return (\r\n                                        <Category key={i} category={category} setShowChannelModal={setShowChannelModal} />\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </>) : null\r\n    )\r\n}\r\n\r\n\r\nconst Category = (props) => {\r\n    const [showItems, setShowItems] = useState(true);\r\n    const { sId, cId } = useParams();\r\n    return (\r\n        <div className=\"category\">\r\n            <div className=\"category-header text-channel-colour-group\">\r\n                {showItems ? <FaChevronDown className={`category-chevron colour-group-item`} onClick={() => setShowItems(!showItems)} /> :\r\n                    <FaChevronRight className=\"category-chevron colour-group-item\" onClick={() => setShowItems(!showItems)} />}\r\n                <span className=\"category-header-text font-display colour-group-item\" onClick={() => setShowItems(!showItems)} >{props.category.categoryName.toUpperCase()}</span>\r\n                <FaPlus className=\"category-add colour-group-item\" onClick={() => props.setShowChannelModal([true, props.category._id])} />\r\n            </div>\r\n            <div className=\"children\">\r\n                {\r\n                    props.category.allChannels.map((channel, i) => {\r\n                        return (showItems &&\r\n                            <Link to={`/skid/${sId}/${channel._id}`} key={i}>\r\n                                <div className={`channel text-channel-colour ${cId === channel._id ? 'selected' : '' }`}>\r\n                                    <FaHashtag className=\"channel-hashtag text-channel-colour\" />\r\n                                    <span className=\"channel-title font-primary\">{channel.channelName}</span>\r\n                                </div>\r\n                            </Link>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ChannelBar\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { getChannel, sendMessage, getMessage } from '../../../actions/servers';\r\nimport { pseudoMessage } from '../../../api/';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSocket } from '../../../contexts/socket';\r\n\r\nimport { notifyChannelAndServer } from '../../../actions/notifications';\r\n\r\nimport './UserContent.css';\r\n\r\nconst UserContent = () => {\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const channel = useSelector(state => state.servers.channel);\r\n    const socket = useSocket();\r\n    const user = useSelector(state => state.auth.data);\r\n    const show = useSelector(state => state.servers.reminder)\r\n\r\n    const { sId, cId } = useParams();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getChannel(cId, sId));\r\n    }, [dispatch, cId, sId]);\r\n\r\n    useEffect(() => {\r\n        setMessages(channel.allMessages);\r\n    }, [channel, setMessages]);\r\n\r\n    useEffect(() => {\r\n        if (!socket) return;\r\n        socket.off('loadMessage'); // all i had to do was move it up 4 lines to be before socket.on :osaka:\r\n\r\n        socket.on('loadMessage', (message) => {\r\n            if (message.messageUserId === user.userId) return;\r\n            if (message.messageServerId === sId && message.messageChannel === cId) dispatch(getMessage(message));\r\n            else {\r\n                dispatch(notifyChannelAndServer(message.messageServerId, message.messageChannel));\r\n            }\r\n        })\r\n\r\n    }, [socket, dispatch, user, cId]);\r\n\r\n    const submitForm = async (e) => {\r\n        e.preventDefault();\r\n        dispatch(sendMessage(cId, sId, message));\r\n        socket.emit('sendMessage', await pseudoMessage(cId, sId, message));\r\n        setMessage('');\r\n    }\r\n\r\n    return (\r\n        <div className={`user-content background-primary ${show && 'reminder-user-content'}`}>\r\n            <div className=\"channel-name background-primary\">\r\n                <span className=\"channel-info-name\">{channel.channelName}</span>\r\n            </div>\r\n            <div className=\"chat\">\r\n                <div className=\"chat-bar-container\">\r\n                    <form className=\"chat-bar background-primary-alt\" onSubmit={submitForm}>\r\n                        <input type=\"text\" placeholder=\"Message #general\" value={message} onChange={(e) => setMessage(e.target.value)} className=\"chat-bar-area\" />\r\n                    </form>\r\n                </div>   \r\n                <div className=\"chat-container\">\r\n                    { \r\n                        messages.map((message, i) => {\r\n                            return (\r\n                                message.isSmall ? <div className=\"chat-item-small\" key={message._id}>\r\n                                    <div className=\"chat-item-content\">\r\n                                        <span className=\"chat-item-text\">{message.messageContent}</span>\r\n                                    </div>\r\n                                </div> :\r\n                                <div className=\"chat-item\" key={i}>\r\n                                    <img  className=\"chat-item-picture\" src={message.profilePicture} alt=\"\" />\r\n                                    <div className=\"chat-item-content\">\r\n                                        <div className=\"chat-user-info\">\r\n                                            <span className=\"chat-item-name\">{message.messageOwner}</span>\r\n                                            <span className=\"chat-item-date\">{new Date(message.messageCreation).toLocaleDateString()}</span>\r\n                                        </div>\r\n                                        <span className=\"chat-item-text\">{message.messageContent}</span>\r\n                                    </div>\r\n                                </div> \r\n                            )\r\n                        })\r\n                    }\r\n                </div>             \r\n            </div>\r\n            <div className=\"member-list background-secondary\">\r\n                <div className=\"member-list-category\">\r\n                    <span className=\"member-list-name text-channel-colour\">ONLINE</span>\r\n                    <div className=\"members\">\r\n                        <div className=\"member\">\r\n                            <div className=\"member-profile-image\" />\r\n                            <span className=\"member-name text-primary\">genericuser</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"member-list-category\">\r\n                    <span className=\"member-list-name text-channel-colour\">OFFLINE</span>\r\n                    <div className=\"members\">\r\n                        <div className=\"member\">\r\n                            <div className=\"member-profile-image\" />\r\n                            <span className=\"member-name text-muted\">Taylor Peters</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserContent\r\n","export const notifyChannelAndServer = (serverId, channelId) => async (dispatch) =>  {\r\n    try {\r\n        dispatch({ type: 'NOTIFY_SERVER_CHANNEL', payload: { serverId, channelId } });\r\n    } catch(e) {\r\n        console.log(e);\r\n    }\r\n}","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { MdClose } from 'react-icons/md';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { checkReminder } from '../../../actions/servers';\r\n\r\nimport './Reminder.css';\r\n\r\nconst Reminder = () => {\r\n    const [show, setShow] = useState(JSON.parse(localStorage.getItem('showReminder')));\r\n    const dispatch = useDispatch();\r\n\r\n    const setFalse = () => {\r\n        setShow(false);\r\n        localStorage.setItem('showReminder', false);\r\n        dispatch(checkReminder(false))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('showReminder') === null) {\r\n            localStorage.setItem('showReminder', true);\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {show && <div className=\"reminder\">\r\n                <div className=\"reminder-title\">\r\n                    Have you heard of shire sounds? Check out their amazing radio station! \r\n                    <a href=\"https://shiresoundsradio.co.uk/\" className=\"reminder-button\">click here!</a>\r\n                </div>\r\n                <MdClose className='reminder-close' onClick={() => setFalse()}/>\r\n            </div>}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Reminder;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../../skidapp/skidapp.css'\r\n\r\n// Main Components\r\nimport ServerNavbar from '../../skidapp/navbar/ServerNavbar';\r\nimport ChannelBar from '../../skidapp/channelbar/ChannelBar';\r\nimport UserContent from '../../skidapp/usercontent/UserContent';\r\nimport Reminder from '../../skidapp/reminder/Reminder';\r\n\r\n// Modals\r\n// import NewChannel from '../../skidapp/modals/newchannel/NewChannel'\r\n// import NewCategory from '../../skidapp/modals/newcategory/NewCategory'\r\n// import NewServer from '../../skidapp/modals/newserver/NewServer'\r\n\r\nconst SkidApp = () => {\r\n    const auth = useSelector((state) => state.auth.data);\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        if (!auth.userId) navigate('/login');\r\n    }, [auth.userId, navigate]);\r\n\r\n    return (\r\n        <div className=\"flex h-screen w-screen overflow-hidden\">\r\n            <ServerNavbar />\r\n            <div className=\"reminder-container\">\r\n                <Reminder />\r\n                <div className=\"flex h-full w-full transition-none user-context-navbar-container\">\r\n                    <ChannelBar />\r\n                    <UserContent />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SkidApp\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport '../../skidapp/skidapp.css';\r\n\r\n// Main Components\r\nimport ServerNavbar from '../../skidapp/navbar/ServerNavbar';\r\nimport UserInfo from '../../skidapp/channelbar/UserInfo';\r\nimport Reminder from '../../skidapp/reminder/Reminder';\r\nconst SkidApp = () => {\r\n    const auth = useSelector((state) => state.auth.data);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (!auth.userId) navigate('/login')\r\n    }, [auth.userId, navigate])\r\n\r\n    return (\r\n        <div className=\"flex h-screen w-screen overflow-hidden\">\r\n            <ServerNavbar />\r\n            <UserInfo className=\"ml-[72px]\" />\r\n            <div className=\"reminder-container\">\r\n                <Reminder />    \r\n                <div className=\"flex transition-none user-context-navbar-container\">\r\n                    <nav className=\"channel-bar background-secondary\"/>\r\n                    <div className=\"user-content background-primary flex flex-grow\"></div> \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SkidApp\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Routes, Route, useNavigate, useParams } from 'react-router-dom';\r\nimport { useSocket } from '../contexts/socket';\r\n\r\n// HomePage Route Elements\r\nimport HomePage from './pages/HomePage/HomePage';\r\nimport Login from './pages/HomePage/Login';\r\nimport RegisterModal from './homepage/modals/RegisterModal';\r\n\r\n// SkidApp Elements\r\nimport SkidApp from './pages/SkidApp/SkidApp';\r\nimport SkidAppMe from './pages/SkidApp/SkidAppMe';\r\n\r\nimport { getServers, removeServer } from '../actions/servers';\r\n\r\nconst App = () => {\r\n    const dispatch = useDispatch();\r\n    const { sId } = useParams();\r\n    const navigate = useNavigate();\r\n    const socket = useSocket();\r\n\r\n    useEffect(() => {\r\n        dispatch(getServers());\r\n        if (!socket) return\r\n        \r\n        socket.emit('userOnline');\r\n        socket.on('deleteServer', (serverId) => {\r\n            dispatch(removeServer(serverId));\r\n            if (sId === serverId) navigate('/skid/@me');\r\n        });\r\n    });\r\n\r\n    return (\r\n        <>  \r\n            <Routes>\r\n                {/* Page Routes */}\r\n                <Route path=\"/\" element={<HomePage />} />\r\n                <Route path=\"/login\" element={<Login />} />\r\n                <Route path=\"/register\" element={<RegisterModal />} />\r\n\r\n                {/* App Routes */}\r\n                <Route path=\"/skid/:sId/:cId\" element={<SkidApp />} />\r\n                <Route path=\"/skid/@me\" element={<SkidAppMe />} />\r\n\r\n                {/* 404 */}\r\n                <Route path=\"*\" element={<Redirect />} />\r\n            </Routes>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Redirect = () => {\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        navigate('/skid/@me');\r\n    }, [navigate])\r\n    return null;\r\n}\r\n\r\nexport default App\r\n","import jwtDecode from 'jwt-decode';\r\n\r\nconst initial = () => {\r\n    const currentToken = localStorage.getItem('token')\r\n\r\n    try {\r\n        return {\r\n            token: localStorage.getItem('token'), \r\n            data: {\r\n                username: jwtDecode(currentToken).data.username || '', \r\n                userId: jwtDecode(currentToken).data.userId || '', \r\n                userRole: jwtDecode(currentToken).data.userRole || '',\r\n                pfpUrl: jwtDecode(currentToken).data.profileUrl || ''\r\n            }\r\n        }\r\n    } catch {\r\n        return {\r\n            token: localStorage.getItem('token'), \r\n            data: {\r\n                username: '', \r\n                userId: '', \r\n                userRole: '',\r\n                pfpUrl: ''\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst setJwt = (action) => {\r\n    const newJwt = action.payload.jwt;\r\n    const userJwt = jwtDecode(newJwt);\r\n    console.log(userJwt)\r\n    localStorage.setItem('token', newJwt)\r\n    return { ...initial(), ...userJwt, token: newJwt };\r\n}\r\n\r\n//eslint-disable-next-line\r\nexport default (state = initial(), action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN':\r\n            return setJwt(action);\r\n        case 'LOGOUT':\r\n            localStorage.setItem('token', null)\r\n            return { ...initial() };\r\n        case 'REGISTER':\r\n            return setJwt(action);\r\n        case 'PROFILEPICTURE':\r\n            return setJwt(action);\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport auth from './auth.js';\r\nimport servers from './servers.js';\r\nimport notify from './notify.js';\r\n\r\nexport default combineReducers({\r\n    auth, servers, notify\r\n})","//eslint-disable-next-line\r\nexport default (state = { all: [], current: {}, channel: { allMessages: [], channelName: '' } }, action) => {\r\n    switch (action.type) {\r\n        case 'GET_ALL_SERVERS':\r\n            return { ...state, all: [...action.payload] };\r\n        case 'GET_CURRENT_SERVER':\r\n            return { ...state, current: action.payload };\r\n        case 'GET_CURRENT_CHANNEL':\r\n            return { ...state, channel: action.payload };\r\n        case 'ADD_SERVER':\r\n            return { ...state, all: [action.payload, ...state.all] };\r\n        case 'JOIN_INVITE':\r\n            return { ...state, all: [action.payload, ...state.all] };\r\n        case 'REMOVE_SERVER':\r\n            return { ...state, all: [...state.all].filter(server => {\r\n                return server._id !== action.payload ? server : null \r\n            }) };\r\n        case 'DELETE_SERVER':\r\n            return { ...state, all: [...state.all].filter(server => {\r\n                return server._id !== action.payload ? server : null \r\n            }) };\r\n        case 'GET_MESSAGE':\r\n            return { ...state, channel: { allMessages: [action.payload, ...state.channel.allMessages] } };\r\n        case 'SEND_MESSAGE':\r\n            return { ...state, channel: { allMessages: [action.payload, ...state.channel.allMessages] } };\r\n        case 'ADD_CATEGORY':\r\n            return { ...state, current: { ...state.current, allCategorys: [...state.current.allCategorys, action.payload] } };\r\n        case 'ADD_CHANNEL':\r\n            return { ...state, current: action.payload };\r\n        case 'REMINDER':\r\n                return { ...state, reminder: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}","//eslint-disable-next-line\r\nexport default (state = { notify: [] }, action) => {\r\n    switch (action.type) {\r\n        case 'NOTIFY_SERVER_CHANNEL':\r\n            console.log(action.payload)\r\n            // return { ...state, notify: [action.payload, ...state.notify] };\r\n            break\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nimport reducers from './reducers';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { SocketProvider } from './contexts/socket';\r\n\r\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <SocketProvider>\r\n        <App />\r\n      </SocketProvider>\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}