{"version":3,"sources":["contexts/socket.js","components/homepage/navbar/HomeNavbar.jsx","components/pages/HomePage/HomePage.jsx","api/index.js","components/homepage/modals/LoginModal.jsx","actions/login.js","components/pages/HomePage/Login.jsx","components/homepage/modals/RegisterModal.jsx","actions/servers.js","components/skidapp/modals/newserver/NewServer.jsx","components/skidapp/modals/joinserver/JoinServer.jsx","components/skidapp/navbar/ServerNavbar.jsx","components/skidapp/modals/newcategory/NewCategory.jsx","components/skidapp/modals/newchannel/NewChannel.jsx","components/skidapp/modals/newserverinvite/NewServerInvite.jsx","components/skidapp/options/UserOptions.jsx","components/skidapp/channelbar/UserInfo.jsx","components/skidapp/channelbar/ChannelBar.jsx","components/skidapp/usercontent/UserContent.jsx","actions/notifications.js","components/skidapp/reminder/Reminder.jsx","components/pages/SkidApp/SkidApp.jsx","components/pages/SkidApp/SkidAppMe.jsx","components/pages/SkidApp/SkidAppInvite.jsx","components/App.jsx","reducers/auth.js","reducers/index.js","reducers/servers.js","reducers/notify.js","reducers/external.js","index.jsx"],"names":["SocketContext","React","createContext","useSocket","useContext","SocketProvider","children","useState","socket","setSocket","auth","useSelector","state","useEffect","newSocket","io","token","close","Provider","value","HomeNavbar","className","href","to","HomePage","messages","used","selectQuote","index","Math","floor","random","length","selectedMsg","includes","push","URI","changePfp","data","axios","post","headers","localStorage","getItem","getServer","sId","get","getChannel","cId","addServer","serverName","addCategory","categoryName","addChannel","categoryId","channelName","joinInvite","invite","inviteCode","hasInvite","serverId","hasInviteFromCode","createInvite","LoginModal","navigate","useNavigate","username","setUsername","password","setPassword","dispatch","useDispatch","userId","onSubmit","e","usercred","preventDefault","a","userLoginData","type","payload","console","log","onChange","target","placeholder","Login","RegisterModal","confPassword","setConfPassword","checkForm","setError","userRegisterData","error","api","removeServer","checkReminder","setter","JSON","parse","sendMessage","message","channelId","messageContent","NewServer","props","setServerName","handleSubmit","handleKeyPress","key","document","getElementById","click","addEventListener","removeEventListener","onClick","join","id","JoinServer","inviteLink","setInviteLink","realInvite","splitInviteLink","split","at","replace","ServerNavbar","showModal","setShowModal","showJoinModal","setShowJoinModal","servers","all","useParams","on","map","server","i","_id","allCategorys","allChannels","NewCategory","setCategoryName","NewChannel","setChannelName","NewServerInvite","timeout","slice","newInvite","setNewInvite","alreadyHasInvite","setAlreadyHasInvite","currentServerInvite","setCurrentServerInvite","copied","setCopied","allInviteCodes","invites","hasServerInviteCode","filter","undefined","readOnly","navigator","clipboard","writeText","clearTimeout","setTimeout","UserOptions","pfpUrl","setPfpUrl","user","useLayoutEffect","class","size","datato","url","jwt","pattern","UserInfo","showSettings","setShowSettings","muted","setMuted","src","alt","Category","showItems","setShowItems","category","toUpperCase","setShowChannelModal","channel","ChannelBar","showContext","setShowContext","showCategoryModal","setShowCategoryModal","showChannelModal","showNewServerInviteModal","setShowNewServerInviteModal","contextRef","useRef","show","reminder","current","handleClick","contains","handleDeleteServer","emit","deleteServer","handleLeaveServer","leaveServer","ref","serverOwner","UserContent","setMessage","setMessages","allMessages","off","messageUserId","messageServerId","messageChannel","getMessage","submitForm","isSmall","profilePicture","messageOwner","Date","messageCreation","toLocaleDateString","Reminder","setShow","setItem","SkidApp","SkidAppInvite","serverFromLink","external","inviteServer","Redirect","App","path","element","SkidAppMe","initial","currentToken","jwtDecode","userRole","profileUrl","setJwt","action","newJwt","userJwt","combineReducers","notify","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render"],"mappings":"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","file":"static/js/main.4ddb262a.chunk.js","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst SocketContext = React.createContext();\r\n\r\nexport const useSocket = () => {\r\n    return useContext(SocketContext);\r\n}\r\n\r\nexport const SocketProvider = ({ children }) => {\r\n    const [socket, setSocket] = useState();\r\n    const auth = useSelector((state) => state.auth);\r\n\r\n    useEffect(() => {\r\n        const newSocket = io(process.env.NODE_ENV  ? 'localhost:5000' : \"https://skid.rocks\", {\r\n            auth: {\r\n                token: auth.token || null\r\n            }\r\n        });\r\n        setSocket(newSocket);\r\n\r\n        return () => newSocket.close();\r\n    }, [auth]);\r\n\r\n    return (\r\n        <SocketContext.Provider value={socket}>\r\n            {children}\r\n        </SocketContext.Provider>\r\n    );\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport './HomeNavbar.css'\r\n\r\nconst HomeNavbar = () => {\r\n    return (\r\n        <div className=\"home-navbar\">\r\n            <div className=\"left-items\">\r\n                <h1 className=\"left-title\"><span className=\"title-color-change\">skid</span>.rocks <span className='smol'>v1.2.4</span></h1>\r\n                <a href=\"https://github.com/ulnk/skid\" className=\"left-item\">Features</a>\r\n                <a href=\"https://github.com/ulnk/skid\" className=\"left-item\">GitHub</a>\r\n                <a href=\"https://github.com/ulnk/skid\" className=\"left-item\">About</a>\r\n            </div>\r\n            <div className=\"right-items\">\r\n                <Link to=\"/login\"><button className=\"login-button\">Login</button></Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeNavbar\r\n","import React from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport '../../homepage/homepage.css'\r\nimport '../../skidapp/skidapp.css'\r\n\r\n// Componenets\r\nimport HomeNavbar from '../../homepage/navbar/HomeNavbar'\r\n\r\n\r\nconst HomePage = () => {\r\n    let messages = [\r\n        'Blasting NBA Youngboy on OBlock, been in the game since \\'02.',\r\n        'P2P Encryption.',\r\n        '14.2 Million Bots Connected.',\r\n        'Pushin\\' P.',\r\n        'Central Cee > OBlock.',\r\n        'OBlock smoking on Tooka.',\r\n        'Built using BQN.',\r\n        'You wouldn\\'t steal a car.',\r\n        'Gunna & Future - pushin P (feat. Young Thug) [Official Video]',\r\n        'I can rhyme Orange and Banana. Bornana.',\r\n        'Miria Botnet < Brixton Botnet.',\r\n        'NOTDS Multitool.',\r\n        'Killer Whales at SeaWorld™️',\r\n        'Osaka > Brush & Cyan > Horion.',\r\n        'skid.rocks oxygen when?',\r\n        'Jesus died for chocolate eggs.',\r\n        'Visual Basic Botnet.',\r\n        'decrypt0r.cs',\r\n    ]\r\n\r\n    let used = [];\r\n\r\n    const selectQuote = () => {\r\n        const index = Math.floor(Math.random() * messages.length);\r\n        let selectedMsg = messages[index];\r\n        if (used.includes(messages[index])) return selectQuote();\r\n        used.push(messages[index]);\r\n        return selectedMsg;\r\n    }\r\n\r\n    return (\r\n        <div className=\"home-body\">\r\n            <HomeNavbar />\r\n            <div className=\"home-header\">\r\n                <h1 className=\"home-header-title\">{selectQuote()}</h1>\r\n                <span className=\"home-header-desc\">{selectQuote()}</span>\r\n                <div className=\"home-buttons-container\">\r\n                    <a href=\"https://github.com/ulnkos/skidcordprod\"><button className=\"home-github-main\">Check out our GitHub!</button></a>\r\n                    <Link to=\"/skid/@me\"><button className=\"home-login-main\">Open skidrocks in your browser</button></Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","import axios from 'axios';\r\n\r\nlet URI = 'https://skid.rocks'\r\nif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\r\n    URI = 'http://localhost:5000';\r\n};\r\n\r\nexport const login = (userLoginData) => axios.post(URI + '/api/login', userLoginData)\r\n\r\nexport const register = (userRegisterData) => axios.post(URI + '/api/register', userRegisterData)\r\n\r\nexport const changePfp = (data) => axios.post(URI + '/api/app/changePfp', data, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n});\r\n\r\nexport const getServers = () => axios.get(URI + '/api/app/getservers', {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n});\r\n\r\nexport const getServer = (sId) => sId ? axios.get(URI + `/api/app/getserver?sid=${sId}`, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n}) : null;\r\n\r\nexport const deleteServer = (serverId) =>  axios.post(URI + `/api/app/deleteServer`, { serverId }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n});\r\n\r\nexport const leaveServer = (serverId) =>  axios.post(URI + `/api/app/leaveServer`, { serverId }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n});\r\n\r\nexport const getChannel = (cId, sId) =>  axios.get(URI + `/api/app/getchannel?sid=${sId}&cid=${cId}`, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n});\r\n\r\nexport const sendMessage = (channelId, serverId, messageContent) =>  axios.post(URI + `/api/app/addmessage`, { serverId, channelId, messageContent }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n});\r\n\r\nexport const pseudoMessage = (channelId, serverId, messageContent) =>  axios.post(URI + `/api/app/pseudomessage`, { serverId, channelId, messageContent }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n});\r\n\r\n\r\nexport const addServer = (serverName) =>  axios.post(URI + `/api/app/addserver`, { serverName }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n});\r\n\r\nexport const addCategory = (categoryName, sId) =>  axios.post(URI + `/api/app/addcategory`, { categoryName, sId }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n});\r\n\r\nexport const addChannel = (sId, categoryId, channelName) =>  axios.post(URI + `/api/app/addchannel`, { sId, categoryId, channelName }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n});\r\n\r\nexport const joinInvite = (invite) =>  axios.post(URI + `/api/app/joinInvite`, { inviteCode: invite }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n});\r\n\r\nexport const hasInvite = (serverId) =>  axios.post(URI + `/api/app/hasInvite`, { serverId }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n});\r\n\r\nexport const hasInviteFromCode = (inviteCode) =>  axios.post(URI + `/api/app/hasInviteFromCode`, { inviteCode }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n});\r\n\r\nexport const createInvite = (serverId, inviteCode) =>  axios.post(URI + `/api/app/createInvite`, { serverId, inviteCode }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n});","import React, { useEffect, useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate , Link } from 'react-router-dom';\r\n\r\nimport './LoginModal.css'\r\n\r\nimport { login } from '../../../actions/login';\r\n\r\nconst LoginModal = () => {\r\n    const auth = useSelector((state) => state.auth.data);\r\n    const navigate = useNavigate();\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault();\r\n        dispatch(login({username, password}));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (auth.userId) navigate('/skid/@me')\r\n    }, [auth.userId, navigate])\r\n\r\n    return (\r\n        <form className=\"login-body\" onSubmit={submitForm} >\r\n            <div className=\"modal-container background-primary\">\r\n                <div className=\"modal-form\">\r\n                    <div className=\"modal-form-header\">\r\n                        <span className=\"modal-header-title\">Welcome Back!</span>\r\n                        <small className=\"modal-header-desc\">We're so glad to see you again!</small>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">USERNAME</span>\r\n                        <input type=\"text\" className=\"modal-form-input\" value={username} onChange={(e) => setUsername(e.target.value)} placeholder=\"\"/>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">PASSWORD</span>\r\n                        <input type=\"password\" className=\"modal-form-input\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"\"/>\r\n                        <span className=\"login-register\"><Link to=\"/recover\" className=\"register-button\">Forgot your password?</Link></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"options-container background-secondary\">\r\n                    <span className=\"login-register\">Need an account? <Link to=\"/register\" className=\"register-button\">Register</Link></span>\r\n                    <button type=\"submit\" className=\"submit-button\">Login</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LoginModal","import * as api from '../api/index'\r\n\r\nexport const login = (usercred) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await api.login(usercred);\r\n        dispatch({ type: 'LOGIN', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) =>  {\r\n    try {\r\n        dispatch({ type: 'LOGOUT', payload: null });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const register = (usercred) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await api.register(usercred);\r\n        dispatch({ type: 'REGISTER', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const changePfp = (datato) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await api.changePfp(datato);\r\n        dispatch({ type: 'PROFILEPICTURE', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}","import React from 'react'\r\n\r\nimport LoginModal from '../../homepage/modals/LoginModal'\r\n\r\nconst Login = () => {\r\n    return (\r\n        <div className=\"body\">\r\n            <LoginModal />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate , Link } from 'react-router-dom';\r\n\r\nimport './RegisterModal.css'\r\n\r\nimport { register } from '../../../actions/login';\r\n\r\nconst RegisterModal = () => {\r\n    const auth = useSelector((state) => state.auth.data);\r\n    const navigate = useNavigate();\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confPassword, setConfPassword] = useState('');\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const checkForm = () => {\r\n        if (username.length < 1 || password.length < 1 || confPassword.length < 1 ) return setError('Invalid form.');\r\n        if (username.includes(' ') || username.includes('#') || username.includes('\"') || \r\n            username.includes(\"'\") || username.includes(\"&\") || username.includes(\"@\") || \r\n            username.includes(\"~\") || username.includes(\"/\") || username.includes(\",\") || \r\n            username.includes(\">\")  ) return setError(`Username must not contain special characters including: # ' \" & @ ~ / > < `);\r\n        if (password.includes(' ')) return setError('Password cannot include spaces.');\r\n        if (username.length < 5) return setError('Username must be larger than 4 characters.');\r\n        if (username.length > 15) return setError('Username must be less than 15 characters.');\r\n        if (password !== confPassword) return setError('Passwords do not match.');\r\n        dispatch(register({ username, password }))\r\n    }\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault();\r\n        checkForm();\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (auth.userId) navigate('/skid/@me')\r\n    }, [auth.userId, navigate])\r\n\r\n    const [error, setError] = useState('')\r\n\r\n    return (\r\n        <form className=\"login-body\" onSubmit={submitForm}>\r\n            <div className=\"modal-container background-primary\">\r\n                <div className=\"modal-form\">\r\n                    <div className=\"modal-form-header\">\r\n                        <span className=\"modal-header-title\">Create an account</span>\r\n                        <small className=\"modal-err-desc\">{error}</small>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">USERNAME</span>\r\n                        <input type=\"text\" className=\"modal-form-input\" value={username} onChange={(e) => setUsername(e.target.value)} placeholder=\"\"/>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">PASSWORD</span>\r\n                        <input type=\"password\" className=\"modal-form-input\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"\"/>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">CONFIRM PASSWORD</span>\r\n                        <input type=\"password\" className=\"modal-form-input\" value={confPassword} onChange={(e) => setConfPassword(e.target.value)} placeholder=\"\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"options-container background-secondary\">\r\n                    <span className=\"login-register\">Already have an account? <Link to=\"/login\" className=\"register-button\">Login</Link></span>\r\n                    <button type=\"submit\" className=\"submit-button\">Register</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default RegisterModal\r\n","import * as api from '../api/index';\r\n\r\nexport const joinInvite = (invite) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await api.joinInvite(invite);\r\n        dispatch({ type: 'JOIN_INVITE', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const hasInvite = (serverId) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await api.hasInvite(serverId);\r\n        if (data.inviteCode === false) return console.log('no invite for server: ', data.serverId);\r\n        dispatch({ type: 'HAS_INVITE', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const hasInviteFromCode = (inviteCode) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await api.hasInviteFromCode(inviteCode);\r\n        dispatch({ type: 'INVITE_SERVER', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const createInvite = (serverId, inviteCode) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await api.createInvite(serverId, inviteCode);\r\n        dispatch({ type: 'HAS_INVITE', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const getServers = () => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await api.getServers();\r\n        dispatch({ type: 'GET_ALL_SERVERS', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const getServer = (sId) => async (dispatch) =>  {\r\n    if (!sId) return\r\n    try {\r\n        const { data } = await api.getServer(sId);\r\n        if (!data) return dispatch({ type: 'GET_CURRENT_SERVER', payload: null });\r\n        dispatch({ type: 'GET_CURRENT_SERVER', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const removeServer = (sId) => async (dispatch) =>  {\r\n    if (!sId) return\r\n    try {\r\n        dispatch({ type: 'REMOVE_SERVER', payload: sId });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const checkReminder = (setter) => async (dispatch) =>  {\r\n    try {\r\n        dispatch({ type: 'REMINDER', payload: setter ? setter : JSON.parse(localStorage.getItem('showReminder'))});\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\n\r\nexport const deleteServer = (sId) => async (dispatch) =>  {\r\n    if (!sId) return\r\n    try {\r\n        const { data } = await api.deleteServer(sId);\r\n        if (!data) return;\r\n        dispatch({ type: 'DELETE_SERVER', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const leaveServer = (sId) => async (dispatch) =>  {\r\n    if (!sId) return\r\n    try {\r\n        const { data } = await api.leaveServer(sId);\r\n        \r\n        if (!data) return;\r\n        dispatch({ type: 'LEAVE_SERVER', payload: sId });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\n\r\nexport const getChannel = (cId, sId) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await api.getChannel(cId, sId);\r\n        if (!data) return;\r\n        dispatch({ type: 'GET_CURRENT_CHANNEL', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const getMessage = (message) => async (dispatch) =>  {\r\n    try {\r\n        dispatch({ type: 'GET_MESSAGE', payload: message });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const sendMessage = (cId, sId, message) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await api.sendMessage(cId, sId, message);\r\n        if (!data) return;\r\n        dispatch({ type: 'SEND_MESSAGE', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const addServer = (serverName) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await api.addServer(serverName);\r\n        if (!data) return;\r\n        dispatch({ type: 'ADD_SERVER', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const addServer2 = async (serverName) => {\r\n    try {\r\n        const { data } = await api.addServer(serverName);\r\n        if (!data) return;\r\n        return data\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const addCategory = (categoryName, sId) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await api.addCategory(categoryName, sId);\r\n        if (!data) return;\r\n        // dispatch({ type: 'ADD_CATEGORY', payload: data });//GET_CURRENT_SERVER\r\n        dispatch({ type: 'GET_CURRENT_SERVER', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const addChannel = (sId, categoryId, channelName) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await api.addChannel(sId, categoryId, channelName);\r\n        if (!data) return;\r\n        dispatch({ type: 'ADD_CHANNEL', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}","import React, { useEffect, useRef, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { addServer } from '../../../../actions/servers'\r\nimport { useSocket } from '../../../../contexts/socket.js';\r\n\r\nimport './NewServer.css'\r\n\r\nconst NewServer = (props) => {\r\n    const [serverName, setServerName] = useState('');\r\n    const dispatch = useDispatch();\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        dispatch(addServer(serverName));\r\n        setServerName('');\r\n        props.close(false);\r\n    }\r\n    \r\n    const handleKeyPress = (e) => {\r\n        if (e.key === \"Escape\") props.close(false)\r\n        if (e.key === \"Enter\") document.getElementById('submit-new-server').click();\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('keydown', handleKeyPress, false);\r\n        return () => document.removeEventListener('keydown', handleKeyPress, false);\r\n    }, [])\r\n\r\n    return (\r\n        <form className=\"modal-underbody\" onSubmit={handleSubmit}>\r\n            <div className=\"modal-container background-primary\">\r\n                <div className=\"modal-form\">\r\n                    <div className=\"modal-form-header\">\r\n                        <span className=\"modal-header-title\">Create server</span>\r\n                        <small className=\"modal-header-desc\">Give your new server a personality with a name. You can always change it later.</small>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">SERVER NAME</span>\r\n                        <input type=\"text\" className=\"modal-form-input\" value={serverName} onChange={(e) => setServerName(e.target.value)} placeholder=\"genericuser's server\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"options-container background-secondary\">\r\n                    <button className=\"cancel-button\" onClick={() => props.close(false)}>Cancel</button>\r\n                    <button className=\"cancel-button\" onClick={() => {\r\n                        props.join(true);\r\n                        props.close(false);\r\n                    }}>Join a Server</button>\r\n                    <button type=\"submit\" id=\"submit-new-server\" className=\"submit-button\">Create server</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NewServer","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport './JoinServer.css';\r\n\r\nimport { joinInvite } from '../../../../actions/servers';\r\n\r\n\r\nconst JoinServer = (props) => {\r\n    const [inviteLink, setInviteLink] = useState('');\r\n    const [error, setError] = useState('')\r\n    const dispatch = useDispatch();\r\n    let realInvite = '';\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        splitInviteLink(inviteLink)\r\n        dispatch(joinInvite(realInvite));\r\n        props.close(false);\r\n    }\r\n\r\n    const splitInviteLink = (inviteLink) => {\r\n        inviteLink = inviteLink.split(`:`).at(-1).split(`//`).at(-1).split(`skid.rocks`).at(-1);\r\n        inviteLink = inviteLink.split(`/`)[1] || inviteLink.split(`/`).at(-1);\r\n        inviteLink = inviteLink.replace(/\\s+/g, '') // remove whitespace\r\n        if (inviteLink === '') return setError('Invite is invalid or expired.');\r\n        setError('');\r\n        realInvite = inviteLink;\r\n    }\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === \"Escape\") props.close(false)\r\n        if (e.key === \"Enter\") document.getElementById('submit-join-channel').click();\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('keydown', handleKeyPress, false);\r\n        return () => document.removeEventListener('keydown', handleKeyPress, false);\r\n    }, [])\r\n\r\n    return (\r\n        <form className=\"modal-underbody\" onSubmit={handleSubmit}>\r\n            <div className=\"modal-container background-primary\">\r\n                <div className=\"modal-form\">\r\n                    <div className=\"modal-form-header\">\r\n                        <span className=\"modal-header-title\">Join server</span>\r\n                        <small className=\"modal-header-desc\">Enter an invite below to join an existing server</small>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className={`modal-form-input-header ${error !== '' && 'error-invite'}`}>Invite Link {error !== '' && `- ${error}`}</span>\r\n                        <input type=\"text\" className=\"modal-form-input\" value={inviteLink} onChange={(e) => setInviteLink(e.target.value)} placeholder=\"skid.rocks/aO9yuf\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"options-container background-secondary\">\r\n                    <button className=\"cancel-button\" onClick={() => props.close(false)}>Cancel</button>\r\n                    <button type=\"submit\" id=\"submit-join-channel\" className=\"submit-button\">Join server</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default JoinServer;","import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams, useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport './ServerNavbar.css';\r\nimport { getServer, removeServer, getServers } from '../../../actions/servers';\r\nimport { useSocket } from '../../../contexts/socket';\r\n\r\nimport NewServer from '../modals/newserver/NewServer';\r\nimport JoinServer from '../modals/joinserver/JoinServer';\r\n\r\nconst ServerNavbar = () => {\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [showJoinModal, setShowJoinModal] = useState(false);\r\n    const servers = useSelector((state) => state.servers.all);\r\n\r\n    const { sId } = useParams();\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const socket = useSocket();\r\n\r\n    useEffect(() => {\r\n        if (!socket) return\r\n\r\n        socket.on('deleteServer', (serverId) => {\r\n            dispatch(removeServer(serverId));\r\n            if (sId === serverId) navigate('/skid/@me');\r\n        })\r\n\r\n    }, [socket, dispatch, navigate])\r\n\r\n    return (\r\n        <>\r\n            { showModal && <NewServer close={setShowModal} join={setShowJoinModal} /> }\r\n            { showJoinModal && <JoinServer close={setShowJoinModal} /> }\r\n            {/* <JoinServer /> */}\r\n            <div className=\"navbar background-tertiary\">\r\n                <Link to=\"/skid/@me\">\r\n                    <div className={`selected-noti ${!sId ? 'active' : null}`}></div>\r\n                    <div className={`navbar-server hover-skid background-primary ${!sId ? 'home-selected' : null}`}>\r\n                        <span className=\"tool\">Home</span>\r\n                    </div>\r\n                </Link>\r\n\r\n                { servers[0] && <div className=\"divider background-primary\" /> }\r\n\r\n                {\r\n                    servers.map((server, i) => {\r\n                        if (!server) return null\r\n                        return (\r\n                            <Link key={i} to={`/skid/${server._id}/${server.allCategorys[0].allChannels[0]._id}`}>\r\n                                <div className={`selected-noti ${server._id === sId ? 'active' : null}`}></div>\r\n                                <div className={`navbar-server hover-server background-primary ${server._id === sId ? 'server-selected' : null}`} onClick={() => {\r\n                                    dispatch(getServer());\r\n                                }}>\r\n                                    <span className=\"tool\">{server.serverName}</span>\r\n                                </div>\r\n                            </Link>\r\n                        )\r\n                    })\r\n                }\r\n\r\n                <div className=\"divider background-primary\" />\r\n\r\n                <div className=\"navbar-server hover-server background-primary\" onClick={() => setShowModal(true)}>\r\n                    <span className=\"tool\">Add a server</span>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ServerNavbar\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport { addCategory } from '../../../../actions/servers'\r\n\r\nimport './NewCategory.css'\r\n\r\nconst NewCategory = (props) => {\r\n    const [categoryName, setCategoryName] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const { sId } = useParams();\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(addCategory(categoryName, sId))\r\n        setCategoryName('')\r\n        props.close(false)\r\n    }\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === \"Escape\") props.close(false)\r\n        if (e.key === \"Enter\") document.getElementById('submit-new-category').click();\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('keydown', handleKeyPress, false);\r\n        return () => document.removeEventListener('keydown', handleKeyPress, false);\r\n    }, [])\r\n\r\n    return (\r\n        <form className=\"modal-underbody\" onSubmit={handleSubmit}>\r\n            <div className=\"modal-container background-primary\">\r\n                <div className=\"modal-form\">\r\n                    <div className=\"modal-form-header\">\r\n                        <span className=\"modal-header-title\">Create category</span>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">CATEGORY NAME</span>\r\n                        <input type=\"text\" className=\"modal-form-input\" value={categoryName} onChange={(e) => setCategoryName(e.target.value)} placeholder=\"New category\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"options-container background-secondary\">\r\n                    <button onClick={() => props.close(false)} className=\"cancel-button\">Cancel</button>\r\n                    <button type=\"submit\" id=\"submit-new-category\" className=\"submit-button\">Create category</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NewCategory\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport { addChannel } from '../../../../actions/servers'\r\n\r\n// eslint-disable-next-line\r\nimport { FaHashtag } from 'react-icons/fa'\r\n// eslint-disable-next-line\r\nimport { ImVolumeMedium } from 'react-icons/im'\r\n\r\nimport './NewChannel.css'\r\n\r\nconst NewChannel = (props) => {\r\n    const [channelName, setChannelName] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const { sId } = useParams();\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(addChannel(sId, props.categoryId, channelName));\r\n        setChannelName('');\r\n        props.close([false, '']);\r\n    }\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === \"Escape\") props.close(false)\r\n        if (e.key === \"Enter\") document.getElementById('submit-new-channel').click();\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('keydown', handleKeyPress, false);\r\n        return () => document.removeEventListener('keydown', handleKeyPress, false);\r\n    }, [])\r\n\r\n    return (\r\n        <form className=\"modal-underbody\" onSubmit={handleSubmit}>\r\n            <div className=\"modal-container background-primary\">\r\n                <div className=\"modal-form\">\r\n                    <div className=\"modal-form-header\">\r\n                        <span className=\"modal-header-title\">Create text channel</span>\r\n                        <small className=\"modal-header-desc\">in {props.categoryId}</small>\r\n                    </div>\r\n                    <div className=\"modal-select-container\">\r\n                        <span className=\"modal-select-header\">CHANNEL TYPE</span>\r\n                        <div className=\"modal-type-container\">\r\n                            <div className=\"modal-select-type modal-selected-type\">\r\n                                <div className=\"select-check-wrapper\"><div className=\"select-check\"/></div>\r\n                                <FaHashtag className=\"select-type-icon\" />\r\n                                <div className=\"select-type-info\">\r\n                                    <span className=\"select-type-name\">Text Channel</span>\r\n                                    <small className=\"select-type-desc\">Post images, GIFs, opinions and puns</small>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-select-type modal-select-hover\">\r\n                                <div className=\"unselect-check-wrapper\"><div className=\"unselect-check\"/></div>\r\n                                <ImVolumeMedium className=\"select-type-icon\" />\r\n                                <div className=\"select-type-info\">\r\n                                    <span className=\"select-type-name\">Voice Channel</span>\r\n                                    <small className=\"select-type-desc\">Hang out with voice, video and screen sharing</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">CHANNEL NAME</span>\r\n                        <input type=\"text\" className=\"modal-form-input\" value={channelName} onChange={(e) => {setChannelName(e.target.value)}} placeholder=\"new-channel\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"options-container background-secondary\">\r\n                    <button onClick={() => props.close([false, ''])} className=\"cancel-button\">Cancel</button>\r\n                    <button type=\"submit\" id=\"submit-new-channel\" className=\"submit-button\">Create channel</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NewChannel\r\n","import React, { useState, useEffect } from 'react'\r\nimport './NewServerInvite.css';\r\n\r\nimport { createInvite, hasInvite } from '../../../../actions/servers';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst NewServerInvite = (props) => {\r\n    const { sId } = useParams();\r\n    const [newInvite, setNewInvite] = useState(sId.slice(-6, -1));\r\n    const [alreadyHasInvite, setAlreadyHasInvite] = useState(false);\r\n    const [currentServerInvite, setCurrentServerInvite] = useState('');\r\n    const [copied, setCopied] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const allInviteCodes = useSelector(state => state.servers.invites)\r\n    let timeout;\r\n\r\n\r\n    useEffect(() => {\r\n        let hasServerInviteCode = allInviteCodes.filter(inviteCode => inviteCode.serverId === sId)\r\n        setAlreadyHasInvite(hasServerInviteCode[0] !== undefined);\r\n        if (hasServerInviteCode[0]) setCurrentServerInvite(hasServerInviteCode[0].inviteCode)\r\n    }, [allInviteCodes])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(createInvite(sId, newInvite))\r\n    }\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === \"Escape\") props.close(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('keydown', handleKeyPress, false);\r\n        return () => document.removeEventListener('keydown', handleKeyPress, false);\r\n    }, [])\r\n\r\n    return (\r\n        !alreadyHasInvite ? <form className=\"modal-underbody\" onSubmit={handleSubmit}>\r\n            <div className=\"modal-container background-primary\">\r\n                <div className=\"modal-form\">\r\n                    <div className=\"modal-form-header\">\r\n                        <span className=\"modal-header-title\">Create Server Invite</span>\r\n                        <small className=\"modal-header-desc\">Give your server personality with a custom invite.</small>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">SERVER INVITE</span>\r\n                        <input type=\"text\" className=\"modal-form-input\" value={newInvite} onChange={(e) => setNewInvite(e.target.value)} placeholder=\"fun-server\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"options-container background-secondary\">\r\n                    <button onClick={() => props.close(false)} className=\"cancel-button\">Cancel</button>\r\n                    <button type=\"submit\" id=\"submit-new-category\" className=\"submit-button\">Create Server Invite</button>\r\n                </div>\r\n            </div>\r\n        </form> : <div className=\"modal-underbody\">\r\n            <div className=\"modal-container-invite background-primary\">\r\n                <div className=\"modal-form\">\r\n                    <div className=\"modal-form-header-invite\">\r\n                        <span className=\"modal-header-title-invite\">Invite friends to the server!</span>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container-invite\">\r\n                        <span className=\"modal-form-input-header\">SERVER INVITE</span>\r\n                        <div className=\"modal-form-input-readonly-container\">\r\n                            <input type=\"text\" className=\"modal-form-input-readonly\" value={currentServerInvite} readOnly />\r\n                            <button className={`modal-form-button-readonly-copy ${copied && 'green'}`} onClick={() => {\r\n                                setCopied(true);\r\n                                navigator.clipboard.writeText(currentServerInvite);\r\n                                clearTimeout(timeout);\r\n                                timeout = setTimeout(() => {\r\n                                    setCopied(false);\r\n                                }, 1000)\r\n                            }}>{copied ? 'Copied' : 'Copy'}</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewServerInvite","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logout } from '../../../actions/login';\r\nimport { MdClose } from 'react-icons/md';\r\n\r\nimport './UserOptions.css';\r\nimport { useState } from 'react';\r\nimport { changePfp } from '../../../actions/login';\r\nimport { useLayoutEffect } from 'react';\r\n\r\nconst UserOptions = (props) => {\r\n    const dispatch = useDispatch();\r\n    const [pfpUrl, setPfpUrl] = useState('');\r\n    const user = useSelector(state => state.auth);\r\n\r\n    useLayoutEffect(() => {\r\n        setPfpUrl(user.data.pfpUrl)\r\n    }, [user]);\r\n\r\n    const handlePfpChange = (e) => {\r\n        e.preventDefault();\r\n        dispatch(changePfp({ url: pfpUrl, jwt: user.token }));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={`settings ${props.class}`}>\r\n                <div className=\"close\" onClick={() => props.close(false)}>\r\n                    <MdClose size=\"18\" />\r\n                </div>\r\n                <section className='tabs'>\r\n                    <ul className='tab-buttons-container'>\r\n                        <div className=\"tab-section\">\r\n                            <span className=\"font-display section-title\">USER SETTINGS</span>\r\n                            <div className=\"section-items\">\r\n                                <button className=\"section-button text-channel-colour selected\" >My Account</button>\r\n                                {/* <button className=\"section-button text-channel-colour\" >User Profile</button>\r\n                                <button className=\"section-button text-channel-colour\" >Privacy & Safety</button>\r\n                                <button className=\"section-button text-channel-colour\" >Authorised Apps</button>\r\n                                <button className=\"section-button text-channel-colour\" >Connections</button> */}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"divider-options\" />\r\n                        <form className=\"tab-section\" onSubmit={() => { dispatch(logout()) }}>\r\n                            <button type=\"submit\" className=\"section-button logout text-channel-colour\" >Logout</button>\r\n                        </form>\r\n                    </ul>\r\n                </section>\r\n                <section className='options'>\r\n                    <div className=\"header-title-option\">My Account</div>\r\n                    <form className=\"option\" onSubmit={handlePfpChange}>\r\n                        <span className=\"option-title\">Profile Picture URL</span>\r\n                        <input type=\"url\" className=\"modal-form-input-o\" pattern=\"https://.*\" value={pfpUrl||'https://cdn.skid.rocks/img/1f0bfc0865d324c2587920a7d80c609b.png'} onChange={(e) => setPfpUrl(e.target.value)} placeholder=\"\" />\r\n                        <button type='submit' className='submit-button-save'>Save</button>\r\n                    </form>\r\n                </section>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserOptions;\r\n","import React, { useState } from 'react';\r\nimport { MdMic, MdMicOff } from 'react-icons/md';\r\nimport { HiCog } from 'react-icons/hi';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport UserOptions from '../options/UserOptions';\r\n\r\nconst UserInfo = (props) => {\r\n    const [showSettings, setShowSettings] = useState(false);\r\n    const [muted, setMuted] = useState(false);\r\n    const user = useSelector(state => state.auth.data);\r\n\r\n    return (\r\n        <>\r\n            <UserOptions close={setShowSettings} class={`${showSettings && 'active'}`} />\r\n            <section className={`user-info background-secondary-alt ${props.className}`}>\r\n                <div className=\"profile-container\">\r\n                    <img className=\"profile-image\" src={user.pfpUrl||'https://cdn.skid.rocks/img/1f0bfc0865d324c2587920a7d80c609b.png'} alt=\"\" />    \r\n                    <div className=\"profile-name-container\">\r\n                        <span className=\"profile-name\">{user.username}</span>\r\n                        <small className=\"profile-tag\">{user.userId}</small>\r\n                    </div>\r\n                </div>\r\n                <div className=\"buttons-container\">\r\n                    <div className=\"button-wrapper\" onClick={() => setMuted(!muted)}>\r\n                        <span className=\"button-tool\">{!muted ? 'Mute' : 'Unmute'}</span>\r\n                        {!muted ? <MdMic className=\"button\" /> : <MdMicOff className=\"button\" />}\r\n                    </div>\r\n                    <div className=\"button-wrapper\" onClick={() => setShowSettings(true)}>\r\n                        <span className=\"button-tool\">Settings</span>\r\n                        <HiCog className=\"button\" />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserInfo;\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { FaChevronDown, FaPlus, FaHashtag, FaChevronRight } from 'react-icons/fa';\r\nimport { useParams, Link, useNavigate } from 'react-router-dom';\r\n\r\nimport './ChannelBar.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { getServer, deleteServer, leaveServer, checkReminder, hasInvite } from '../../../actions/servers';\r\nimport { useSocket } from '../../../contexts/socket';\r\n\r\nimport NewCategory from '../../skidapp/modals/newcategory/NewCategory';\r\nimport NewChannel from '../../skidapp/modals/newchannel/NewChannel';\r\nimport NewServerInvite from '../modals/newserverinvite/NewServerInvite';\r\n\r\nimport UserInfo from './UserInfo';\r\n\r\nconst ChannelBar = () => {\r\n    const [showContext, setShowContext] = useState(false);\r\n    const [showCategoryModal, setShowCategoryModal] = useState(false);\r\n    const [showChannelModal, setShowChannelModal] = useState([false, '']);\r\n    const [showNewServerInviteModal, setShowNewServerInviteModal] = useState(false);\r\n    const contextRef = useRef();\r\n    \r\n    const show = useSelector(state => state.servers.reminder)\r\n    const server = useSelector(state => state.servers.current);\r\n    const auth = useSelector(state => state.auth.data);\r\n\r\n    const { sId } = useParams();\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const socket = useSocket();\r\n\r\n    useEffect(() => {\r\n        dispatch(hasInvite(sId));\r\n        dispatch(getServer(sId));\r\n        dispatch(checkReminder());\r\n    }, [dispatch, sId]);\r\n    \r\n    useEffect(() => {\r\n        document.addEventListener('click', handleClick)\r\n        return () => document.removeEventListener('click', handleClick)\r\n    }, [showContext])\r\n    \r\n    const handleClick = (e) => {\r\n        if (!showContext) return;\r\n        if (!contextRef.current.contains(e.target)) return setShowContext(false);\r\n    }\r\n\r\n    const handleDeleteServer = () => {\r\n        socket.emit('deleteServer', sId);\r\n        dispatch(deleteServer(sId));\r\n        navigate('/skid/@me');\r\n    }\r\n\r\n    const handleLeaveServer = () => {\r\n        dispatch(leaveServer(sId));\r\n        navigate('/skid/@me');\r\n    }\r\n\r\n    return (\r\n        server._id ?\r\n            (<>\r\n                {showNewServerInviteModal && <NewServerInvite close={setShowNewServerInviteModal} />}\r\n                {showCategoryModal && <NewCategory close={setShowCategoryModal} />}\r\n                {showChannelModal[0] && <NewChannel categoryId={showChannelModal[1]} close={setShowChannelModal} />}\r\n                <UserInfo />\r\n                <nav className={`channel-bar background-secondary noselect ${show && 'rHeight'}`}>\r\n                    <div className=\"channel-bar-items\" >\r\n                        <section className=\"server-name\" onClick={() => setShowContext(!showContext)}>\r\n                            <h2 className=\"server-name-header font-primary\">{server.serverName}</h2>\r\n                            <FaChevronDown className=\"server-name-chevron\" />\r\n                            {/* {showContext && */}\r\n                                <ul ref={contextRef} className={`context-menu ${showContext && 'on'}`}>\r\n                                    <li className=\"context-menu-item blue\" onClick={() => setShowCategoryModal(true)}>\r\n                                        <button>Create Category</button>\r\n                                    </li>\r\n                                    {sId !== '625c7d70df1a464bb9d6d059' ? <>\r\n                                        <li className=\"context-menu-item blue\" onClick={() => setShowNewServerInviteModal(true)}>\r\n                                            <button>Create Server Invite</button>\r\n                                        </li>\r\n                                        {auth.userId !== server.serverOwner && <li className=\"context-menu-item red\" onClick={() => handleLeaveServer()}>\r\n                                            <button>Leave Server</button>\r\n                                        </li>}\r\n                                        {auth.userId === server.serverOwner && <li className=\"context-menu-item red\" onClick={() => handleDeleteServer()}>\r\n                                            <button>Delete Server</button>\r\n                                        </li>}\r\n                                    </>: null}\r\n                                </ul>\r\n                            {/* } */}\r\n                        </section>\r\n                        <div className=\"channels\">\r\n                            {\r\n                                server.allCategorys.map((category, i) => {\r\n                                    return (\r\n                                        <Category key={i} category={category} setShowChannelModal={setShowChannelModal} />\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </>) : null\r\n    )\r\n}\r\n\r\n\r\nconst Category = (props) => {\r\n    const [showItems, setShowItems] = useState(true);\r\n    const { sId, cId } = useParams();\r\n    return (\r\n        <div className=\"category\">\r\n            <div className=\"category-header text-channel-colour-group\">\r\n                {showItems ? <FaChevronDown className={`category-chevron colour-group-item`} onClick={() => setShowItems(!showItems)} /> :\r\n                    <FaChevronRight className=\"category-chevron colour-group-item\" onClick={() => setShowItems(!showItems)} />}\r\n                <span className=\"category-header-text font-display colour-group-item\" onClick={() => setShowItems(!showItems)} >{props.category.categoryName.toUpperCase()}</span>\r\n                <FaPlus className=\"category-add colour-group-item\" onClick={() => props.setShowChannelModal([true, props.category._id])} />\r\n            </div>\r\n            <div className=\"children\">\r\n                {\r\n                    props.category.allChannels.map((channel, i) => {\r\n                        return (showItems &&\r\n                            <Link to={`/skid/${sId}/${channel._id}`} key={i}>\r\n                                <div className={`channel text-channel-colour ${cId === channel._id ? 'selected' : '' }`}>\r\n                                    <FaHashtag className=\"channel-hashtag text-channel-colour\" />\r\n                                    <span className=\"channel-title font-primary\">{channel.channelName}</span>\r\n                                </div>\r\n                            </Link>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ChannelBar\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { getChannel, sendMessage, getMessage } from '../../../actions/servers';\r\nimport { pseudoMessage } from '../../../api/';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSocket } from '../../../contexts/socket';\r\n\r\nimport { notifyChannelAndServer } from '../../../actions/notifications';\r\n\r\nimport './UserContent.css';\r\n\r\nconst UserContent = () => {\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const channel = useSelector(state => state.servers.channel);\r\n    const socket = useSocket();\r\n    const user = useSelector(state => state.auth.data);\r\n    const show = useSelector(state => state.servers.reminder)\r\n\r\n    const { sId, cId } = useParams();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getChannel(cId, sId));\r\n    }, [dispatch, cId, sId]);\r\n\r\n    useEffect(() => {\r\n        setMessages(channel.allMessages);\r\n    }, [channel, setMessages]);\r\n\r\n    useEffect(() => {\r\n        if (!socket) return;\r\n        socket.off('loadMessage'); // all i had to do was move it up 4 lines to be before socket.on :osaka:\r\n\r\n        socket.on('loadMessage', (message) => {\r\n            if (message.messageUserId === user.userId) return;\r\n            if (message.messageServerId === sId && message.messageChannel === cId) dispatch(getMessage(message));\r\n            else {\r\n                dispatch(notifyChannelAndServer(message.messageServerId, message.messageChannel));\r\n            }\r\n        })\r\n\r\n    }, [socket, dispatch, user, cId]);\r\n\r\n    const submitForm = async (e) => {\r\n        e.preventDefault();\r\n        dispatch(sendMessage(cId, sId, message));\r\n        socket.emit('sendMessage', await pseudoMessage(cId, sId, message));\r\n        setMessage('');\r\n    }\r\n\r\n    return (\r\n        <div className={`user-content background-primary ${show && 'reminder-user-content'}`}>\r\n            <div className=\"channel-name background-primary\">\r\n                <span className=\"channel-info-name\">{channel.channelName}</span>\r\n            </div>\r\n            <div className=\"chat\">\r\n                <div className=\"chat-bar-container\">\r\n                    <form className=\"chat-bar background-primary-alt\" onSubmit={submitForm}>\r\n                        <input type=\"text\" placeholder=\"Message #general\" value={message} onChange={(e) => setMessage(e.target.value)} className=\"chat-bar-area\" />\r\n                    </form>\r\n                </div>   \r\n                <div className=\"chat-container\">\r\n                    { \r\n                        messages.map((message, i) => {\r\n                            return (\r\n                                message.isSmall ? <div className=\"chat-item-small\" key={message._id}>\r\n                                    <div className=\"chat-item-content\">\r\n                                        <span className=\"chat-item-text\">{message.messageContent}</span>\r\n                                    </div>\r\n                                </div> :\r\n                                <div className=\"chat-item\" key={i}>\r\n                                    <img  className=\"chat-item-picture\" src={message.profilePicture} alt=\"\" />\r\n                                    <div className=\"chat-item-content\">\r\n                                        <div className=\"chat-user-info\">\r\n                                            <span className=\"chat-item-name\">{message.messageOwner}</span>\r\n                                            <span className=\"chat-item-date\">{new Date(message.messageCreation).toLocaleDateString()}</span>\r\n                                        </div>\r\n                                        <span className=\"chat-item-text\">{message.messageContent}</span>\r\n                                    </div>\r\n                                </div> \r\n                            )\r\n                        })\r\n                    }\r\n                </div>             \r\n            </div>\r\n            <div className=\"member-list background-secondary\">\r\n                <div className=\"member-list-category\">\r\n                    <span className=\"member-list-name text-channel-colour\">ONLINE</span>\r\n                    <div className=\"members\">\r\n                        <div className=\"member\">\r\n                            <div className=\"member-profile-image\" />\r\n                            <span className=\"member-name text-primary\">genericuser</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"member-list-category\">\r\n                    <span className=\"member-list-name text-channel-colour\">OFFLINE</span>\r\n                    <div className=\"members\">\r\n                        <div className=\"member\">\r\n                            <div className=\"member-profile-image\" />\r\n                            <span className=\"member-name text-muted\">Taylor Peters</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserContent\r\n","export const notifyChannelAndServer = (serverId, channelId) => async (dispatch) =>  {\r\n    try {\r\n        dispatch({ type: 'NOTIFY_SERVER_CHANNEL', payload: { serverId, channelId } });\r\n    } catch(e) {\r\n        console.log(e);\r\n    }\r\n}","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { MdClose } from 'react-icons/md';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { checkReminder } from '../../../actions/servers';\r\n\r\nimport './Reminder.css';\r\n\r\nconst Reminder = () => {\r\n    const [show, setShow] = useState(JSON.parse(localStorage.getItem('showReminder')));\r\n    const dispatch = useDispatch();\r\n\r\n    const setFalse = () => {\r\n        setShow(false);\r\n        localStorage.setItem('showReminder', false);\r\n        dispatch(checkReminder(false))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('showReminder') === null) {\r\n            localStorage.setItem('showReminder', true);\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {show && <div className=\"reminder\">\r\n                <div className=\"reminder-title\">\r\n                    Have you heard of shire sounds? Check out their amazing radio station! \r\n                    <a href=\"https://shiresoundsradio.co.uk/\" className=\"reminder-button\">click here!</a>\r\n                </div>\r\n                <MdClose className='reminder-close' onClick={() => setFalse()}/>\r\n            </div>}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Reminder;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../../skidapp/skidapp.css'\r\n\r\n// Main Components\r\nimport ServerNavbar from '../../skidapp/navbar/ServerNavbar';\r\nimport ChannelBar from '../../skidapp/channelbar/ChannelBar';\r\nimport UserContent from '../../skidapp/usercontent/UserContent';\r\nimport Reminder from '../../skidapp/reminder/Reminder';\r\n\r\n// Modals\r\n// import NewChannel from '../../skidapp/modals/newchannel/NewChannel'\r\n// import NewCategory from '../../skidapp/modals/newcategory/NewCategory'\r\n// import NewServer from '../../skidapp/modals/newserver/NewServer'\r\n\r\nconst SkidApp = () => {\r\n    const auth = useSelector((state) => state.auth.data);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (!auth.userId) navigate('/login');\r\n    }, [auth.userId, navigate]);\r\n\r\n    return (\r\n        <div className=\"flex h-screen w-screen overflow-hidden\">\r\n            <ServerNavbar />\r\n            <div className=\"reminder-container\">\r\n                <Reminder />\r\n                <div className=\"flex h-full w-full transition-none user-context-navbar-container\">\r\n                    <ChannelBar />\r\n                    <UserContent />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SkidApp\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport '../../skidapp/skidapp.css';\r\n\r\n// Main Components\r\nimport ServerNavbar from '../../skidapp/navbar/ServerNavbar';\r\nimport UserInfo from '../../skidapp/channelbar/UserInfo';\r\nimport Reminder from '../../skidapp/reminder/Reminder';\r\nconst SkidApp = () => {\r\n    const auth = useSelector((state) => state.auth.data);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (!auth.userId) navigate('/login')\r\n    }, [auth.userId, navigate])\r\n\r\n    return (\r\n        <div className=\"flex h-screen w-screen overflow-hidden\">\r\n            <ServerNavbar />\r\n            <UserInfo className=\"ml-[72px]\" />\r\n            <div className=\"reminder-container\">\r\n                <Reminder />    \r\n                <div className=\"flex transition-none user-context-navbar-container\">\r\n                    <nav className=\"channel-bar background-secondary\"/>\r\n                    <div className=\"user-content background-primary flex flex-grow\"></div> \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SkidApp\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport '../../skidapp/skidapp.css'\r\nimport './SkidAppInvite.css';\r\n\r\n// Main Components\r\nimport { joinInvite, hasInviteFromCode } from '../../../actions/servers';\r\n\r\n// Modals\r\n// import NewChannel from '../../skidapp/modals/newchannel/NewChannel'\r\n// import NewCategory from '../../skidapp/modals/newcategory/NewCategory'\r\n// import NewServer from '../../skidapp/modals/newserver/NewServer'\r\n\r\nconst SkidAppInvite = () => {\r\n    const auth = useSelector((state) => state.auth.data);\r\n    const serverFromLink = useSelector((state) => state.external.inviteServer);\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const { inviteLink } = useParams();\r\n\r\n    useEffect(() => {\r\n        dispatch(hasInviteFromCode(inviteLink))\r\n    }, [])\r\n\r\n    const onClick = () => {\r\n        if (!auth.userId) return navigate('/login');\r\n        dispatch(joinInvite(inviteLink));\r\n        navigate(`/skid/${serverFromLink._id}/${serverFromLink.allCategorys[0].allChannels[0]._id}`);\r\n    }\r\n\r\n    const redirect = () => {\r\n        if (!auth.userId) return navigate('/login');\r\n        navigate(`/skid/@me`);\r\n    }\r\n\r\n    return (\r\n        serverFromLink._id ? <div className=\"invite-body\">\r\n            <div className=\"modal-container-inv background-primary\">\r\n                <div className=\"modal-form-inv\">\r\n                    <div className=\"modal-form-header-inv\">\r\n                        <small className=\"modal-header-desc-inv\">You have been invited to join</small>\r\n                        <span className=\"modal-header-title-inv\">{serverFromLink.serverName}!</span>\r\n                    </div>\r\n                </div>\r\n                <button type=\"submit\" onClick={onClick} className=\"submit-button-inv\">Accept Invite</button>\r\n            </div>\r\n        </div> : <div className=\"invite-body\">\r\n            <div className=\"modal-container background-primary\">\r\n                <div className=\"modal-form\">\r\n                    <div className=\"modal-form-header\">\r\n                        <span className=\"modal-header-title\">Invite Invalid</span>\r\n                        <small className=\"modal-header-desc\">This invite may be expired or you might not have permission to join.</small>\r\n                    </div>\r\n                </div>\r\n                <button type=\"submit\" onClick={redirect} className=\"submit-button-inv\">Continue to Site</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SkidAppInvite\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Routes, Route, useNavigate, useParams } from 'react-router-dom';\r\nimport { useSocket } from '../contexts/socket';\r\n\r\n// HomePage Route Elements\r\nimport HomePage from './pages/HomePage/HomePage';\r\nimport Login from './pages/HomePage/Login';\r\nimport RegisterModal from './homepage/modals/RegisterModal';\r\n\r\n// SkidApp Elements\r\nimport SkidApp from './pages/SkidApp/SkidApp';\r\nimport SkidAppMe from './pages/SkidApp/SkidAppMe';\r\nimport SkidAppInvite from './pages/SkidApp/SkidAppInvite';\r\n\r\nimport { getServers, removeServer, hasInvite } from '../actions/servers';\r\n\r\nconst App = () => {\r\n    const dispatch = useDispatch();\r\n    const { sId } = useParams();\r\n    const navigate = useNavigate();\r\n    const socket = useSocket();\r\n\r\n    useEffect(() => {\r\n        dispatch(getServers());\r\n        if (!socket) return\r\n        \r\n        socket.emit('userOnline');\r\n        socket.on('deleteServer', (serverId) => {\r\n            dispatch(removeServer(serverId));\r\n            if (sId === serverId) navigate('/skid/@me');\r\n        });\r\n    });\r\n\r\n    return (\r\n        <>  \r\n            <Routes>\r\n                {/* Page Routes */}\r\n                <Route path=\"/\" element={<HomePage />} />\r\n                <Route path=\"/login\" element={<Login />} />\r\n                <Route path=\"/register\" element={<RegisterModal />} />\r\n\r\n                {/* Invites */}\r\n                <Route path=\"/:inviteLink\" element={<SkidAppInvite />} />\r\n                \r\n                {/* App Routes */}\r\n                <Route path=\"/skid/:sId/:cId\" element={<SkidApp />} />\r\n                <Route path=\"/skid/@me\" element={<SkidAppMe />} />\r\n\r\n                {/* 404 */}\r\n                <Route path=\"*\" element={<Redirect />} />\r\n            </Routes>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Redirect = () => {\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        navigate('/skid/@me');\r\n    }, [navigate])\r\n    return null;\r\n}\r\n\r\nexport default App\r\n","import jwtDecode from 'jwt-decode';\r\n\r\nconst initial = () => {\r\n    const currentToken = localStorage.getItem('token')\r\n\r\n    try {\r\n        return {\r\n            token: localStorage.getItem('token'), \r\n            data: {\r\n                username: jwtDecode(currentToken).data.username || '', \r\n                userId: jwtDecode(currentToken).data.userId || '', \r\n                userRole: jwtDecode(currentToken).data.userRole || '',\r\n                pfpUrl: jwtDecode(currentToken).data.profileUrl || ''\r\n            }\r\n        }\r\n    } catch {\r\n        return {\r\n            token: localStorage.getItem('token'), \r\n            data: {\r\n                username: '', \r\n                userId: '', \r\n                userRole: '',\r\n                pfpUrl: ''\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst setJwt = (action) => {\r\n    const newJwt = action.payload.jwt;\r\n    const userJwt = jwtDecode(newJwt);\r\n    console.log(userJwt)\r\n    localStorage.setItem('token', newJwt)\r\n    return { ...initial(), ...userJwt, token: newJwt };\r\n}\r\n\r\n//eslint-disable-next-line\r\nexport default (state = initial(), action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN':\r\n            return setJwt(action);\r\n        case 'LOGOUT':\r\n            localStorage.setItem('token', null)\r\n            return { ...initial() };\r\n        case 'REGISTER':\r\n            return setJwt(action);\r\n        case 'PROFILEPICTURE':\r\n            return setJwt(action);\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport auth from './auth.js';\r\nimport servers from './servers.js';\r\nimport notify from './notify.js';\r\nimport external from './external.js'\r\n\r\nexport default combineReducers({\r\n    auth, servers, notify, external\r\n})","//eslint-disable-next-line\r\nexport default (state = { invites: [], all: [], current: {}, channel: { allMessages: [], channelName: '' } }, action) => {\r\n    switch (action.type) {\r\n        case 'GET_ALL_SERVERS':\r\n            return { ...state, all: [...action.payload] };\r\n        case 'GET_CURRENT_SERVER':\r\n            if (!action.payload) return { ...state, current: {}};\r\n            return { ...state, current: action.payload };\r\n        case 'GET_CURRENT_CHANNEL':\r\n            return { ...state, channel: action.payload };\r\n        case 'ADD_SERVER':\r\n            return { ...state, all: [...state.all, action.payload] };\r\n        case 'JOIN_INVITE':\r\n            return { ...state, all: [...state.all, action.payload] };\r\n        case 'HAS_INVITE':\r\n            return { ...state, invites: [...state.invites, { ...action.payload }] };\r\n        case 'REMOVE_SERVER':\r\n            return { ...state, current: {}, all: [...state.all].filter(server => {\r\n                return server._id !== action.payload ? server : null \r\n            }) };\r\n        case 'DELETE_SERVER':\r\n            return { ...state, current: {}, all: [...action.payload] };\r\n        case 'LEAVE_SERVER':\r\n            return { ...state, current: {}, all: [...state.all].filter(server => {\r\n                return server._id !== action.payload ? server : null \r\n            }) };\r\n        case 'GET_MESSAGE':\r\n            return { ...state, channel: { allMessages: [action.payload, ...state.channel.allMessages] } };\r\n        case 'SEND_MESSAGE':\r\n            return { ...state, channel: { allMessages: [action.payload, ...state.channel.allMessages] } };\r\n        case 'ADD_CATEGORY':\r\n            return { ...state, current: { ...state.current, allCategorys: [...state.current.allCategorys, action.payload] } };\r\n        case 'ADD_CHANNEL':\r\n            return { ...state, current: action.payload };\r\n        case 'REMINDER':\r\n                return { ...state, reminder: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}","//eslint-disable-next-line\r\nexport default (state = { notify: [] }, action) => {\r\n    switch (action.type) {\r\n        case 'NOTIFY_SERVER_CHANNEL':\r\n            console.log(action.payload)\r\n            // return { ...state, notify: [action.payload, ...state.notify] };\r\n            break\r\n        default:\r\n            return state;\r\n    }\r\n}","//INVITE_SERVER\r\n//eslint-disable-next-line\r\nexport default (state = { inviteServer: {} }, action) => {\r\n    switch (action.type) {\r\n        case 'INVITE_SERVER':\r\n            return { ...state, inviteServer: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nimport reducers from './reducers';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { SocketProvider } from './contexts/socket';\r\n\r\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <SocketProvider>\r\n        <App />\r\n      </SocketProvider>\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}