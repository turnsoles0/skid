{"version":3,"sources":["components/homepage/navbar/HomeNavbar.jsx","components/pages/HomePage/HomePage.jsx","api/index.js","components/homepage/modals/LoginModal.jsx","actions/login.js","components/pages/HomePage/Login.jsx","components/homepage/modals/RegisterModal.jsx","actions/servers.js","contexts/socket.js","components/skidapp/modals/newserver/NewServer.jsx","components/skidapp/navbar/ServerNavbar.jsx","components/skidapp/modals/newcategory/NewCategory.jsx","components/skidapp/modals/newchannel/NewChannel.jsx","components/skidapp/options/UserOptions.jsx","components/skidapp/channelbar/UserInfo.jsx","components/skidapp/channelbar/ChannelBar.jsx","components/skidapp/usercontent/UserContent.jsx","components/skidapp/reminder/Reminder.jsx","components/pages/SkidApp/SkidApp.jsx","components/pages/SkidApp/SkidAppMe.jsx","components/App.jsx","reducers/auth.js","reducers/index.js","reducers/servers.js","index.jsx"],"names":["HomeNavbar","className","href","to","HomePage","messages","r1","Math","floor","random","length","r2","t1","t2","filter","item","URI","changePfp","data","axios","post","headers","localStorage","getItem","getServer","sId","get","getChannel","cId","addServer","serverName","addCategory","categoryName","addChannel","categoryId","channelName","LoginModal","auth","useSelector","state","navigate","useNavigate","useState","username","setUsername","password","setPassword","dispatch","useDispatch","useEffect","userId","onSubmit","e","usercred","preventDefault","a","userLoginData","type","payload","console","log","value","onChange","target","placeholder","Login","RegisterModal","confPassword","setConfPassword","checkForm","setError","includes","userRegisterData","error","api","sendMessage","message","channelId","serverId","messageContent","SocketContext","React","createContext","useSocket","useContext","SocketProvider","children","socket","setSocket","newSocket","io","token","close","Provider","NewServer","props","setServerName","onClick","ServerNavbar","showModal","setShowModal","servers","all","useParams","map","server","i","_id","allCategorys","allChannels","emit","NewCategory","setCategoryName","NewChannel","setChannelName","UserOptions","pfpUrl","setPfpUrl","user","size","datato","url","jwt","pattern","UserInfo","showSettings","setShowSettings","muted","setMuted","class","src","alt","Category","showItems","setShowItems","category","toUpperCase","setShowChannelModal","channel","ChannelBar","showContext","setShowContext","showCategoryModal","setShowCategoryModal","showChannelModal","JSON","parse","show","current","handleClick","useCallback","document","addEventListener","removeEventListener","handleDeleteServer","deleteServer","UserContent","setMessage","setMessages","allMessages","on","messageUserId","messageChannel","getMessage","off","submitForm","isSmall","profilePicture","messageOwner","Date","messageCreation","toLocaleDateString","Reminder","setShow","setItem","SkidApp","Redirect","App","path","element","SkidAppMe","initial","currentToken","jwtDecode","userRole","profileUrl","setJwt","action","newJwt","userJwt","combineReducers","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.caf6427a.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport './HomeNavbar.css'\r\n\r\nconst HomeNavbar = () => {\r\n    return (\r\n        <div className=\"home-navbar\">\r\n            <div className=\"left-items\">\r\n                <h1 className=\"left-title\"><span className=\"title-color-change\">skid</span>.rocks</h1>\r\n                <a href=\"https://github.com/ulnkos/skidcordprod\" className=\"left-item\">Features</a>\r\n                <a href=\"https://github.com/ulnkos/skidcordprod\" className=\"left-item\">GitHub</a>\r\n                <a href=\"https://github.com/ulnkos/skidcordprod\" className=\"left-item\">About</a>\r\n            </div>\r\n            <div className=\"right-items\">\r\n                <Link to=\"/login\"><button className=\"login-button\">Login</button></Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeNavbar\r\n","import React from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport '../../homepage/homepage.css'\r\nimport '../../skidapp/skidapp.css'\r\n\r\n// Componenets\r\nimport HomeNavbar from '../../homepage/navbar/HomeNavbar'\r\n\r\n\r\nconst HomePage = () => {\r\n    let messages = [\r\n        'Blasting NBA Youngboy on OBlock, been in the game since \\'02.',\r\n        'P2P Encryption.',\r\n        '14.2 Million Bots Connected.',\r\n        'Pushin\\' P.',\r\n        'Central Cee > OBlock.',\r\n        'OBlock smoking on Tooka.',\r\n        'Build using BQN.',\r\n        'You wouldn\\'t steal a car.',\r\n        'Gunna & Future - pushin P (feat. Young Thug) [Official Video]',\r\n        'I can rhyme Orange and Banana. Bornana.',\r\n        'Miria Botnet < Brixton Botnet.',\r\n        'NOTDS Multitool.'\r\n    ]\r\n\r\n    const r1 = Math.floor(Math.random() * messages.length)\r\n    const r2 = Math.floor(Math.random() * messages.length)\r\n\r\n    const t1 = messages[r1]\r\n    messages = messages.filter((item) => {\r\n        return item !== t1\r\n    })\r\n    \r\n    const t2 = messages[r2]\r\n    messages = messages.filter((item) => {\r\n        return item !== t2\r\n    })\r\n\r\n    return (\r\n        <div className=\"home-body\">\r\n            <HomeNavbar />\r\n            <div className=\"home-header\">\r\n                <h1 className=\"home-header-title\">{t1}</h1>\r\n                <span className=\"home-header-desc\">{t2}</span>\r\n                <div className=\"home-buttons-container\">\r\n                    <a href=\"https://github.com/ulnkos/skidcordprod\"><button className=\"home-github-main\">Check out our GitHub!</button></a>\r\n                    <Link to=\"/skid/@me\"><button className=\"home-login-main\">Open skidrocks in your browser</button></Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","import axios from 'axios';\r\n\r\nlet URI = 'https://skid.rocks'\r\nif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\r\n    URI = 'http://localhost:5000';\r\n};\r\n\r\nexport const login = (userLoginData) => axios.post(URI + '/api/login', userLoginData)\r\n\r\nexport const register = (userRegisterData) => axios.post(URI + '/api/register', userRegisterData)\r\n\r\nexport const changePfp = (data) => axios.post(URI + '/api/app/changePfp', data, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n});\r\n\r\nexport const getServers = () => axios.get(URI + '/api/app/getservers', {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n});\r\n\r\nexport const getServer = (sId) => sId ? axios.get(URI + `/api/app/getserver?sid=${sId}`, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n}) : null;\r\n\r\nexport const deleteServer = (serverId) =>  axios.post(URI + `/api/app/deleteserver`, { serverId }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n});\r\n\r\nexport const getChannel = (cId, sId) =>  axios.get(URI + `/api/app/getchannel?sid=${sId}&cid=${cId}`, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n});\r\n\r\nexport const sendMessage = (channelId, serverId, messageContent) =>  axios.post(URI + `/api/app/addmessage`, { serverId, channelId, messageContent }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n});\r\n\r\nexport const pseudoMessage = (channelId, serverId, messageContent) =>  axios.post(URI + `/api/app/pseudomessage`, { serverId, channelId, messageContent }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n});\r\n\r\n\r\nexport const addServer = (serverName) =>  axios.post(URI + `/api/app/addserver`, { serverName }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n});\r\n\r\nexport const addCategory = (categoryName, sId) =>  axios.post(URI + `/api/app/addcategory`, { categoryName, sId }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n});\r\n\r\nexport const addChannel = (sId, categoryId, channelName) =>  axios.post(URI + `/api/app/addchannel`, { sId, categoryId, channelName }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n});","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate , Link } from 'react-router-dom';\r\n\r\nimport './LoginModal.css'\r\n\r\nimport { login } from '../../../actions/login';\r\n\r\nconst LoginModal = () => {\r\n    const auth = useSelector((state) => state.auth.data);\r\n    const navigate = useNavigate();\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault();\r\n        dispatch(login({username, password}));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (auth.userId) navigate('/skid/@me')\r\n    }, [auth.userId, navigate])\r\n\r\n    return (\r\n        <form className=\"login-body\" onSubmit={submitForm} >\r\n            <div className=\"modal-container background-primary\">\r\n                <div className=\"modal-form\">\r\n                    <div className=\"modal-form-header\">\r\n                        <span className=\"modal-header-title\">Welcome Back!</span>\r\n                        <small className=\"modal-header-desc\">We're so glad to see you again!</small>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">USERNAME</span>\r\n                        <input type=\"text\" className=\"modal-form-input\" value={username} onChange={(e) => setUsername(e.target.value)} placeholder=\"\"/>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">PASSWORD</span>\r\n                        <input type=\"password\" className=\"modal-form-input\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"\"/>\r\n                        <span className=\"login-register\"><Link to=\"/recover\" className=\"register-button\">Forgot your password?</Link></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"options-container background-secondary\">\r\n                    <span className=\"login-register\">Need an account? <Link to=\"/register\" className=\"register-button\">Register</Link></span>\r\n                    <button type=\"submit\" className=\"submit-button\">Login</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LoginModal\r\n","import * as api from '../api/index'\r\n\r\nexport const login = (usercred) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await api.login(usercred);\r\n        dispatch({ type: 'LOGIN', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) =>  {\r\n    try {\r\n        dispatch({ type: 'LOGOUT', payload: null });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const register = (usercred) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await api.register(usercred);\r\n        dispatch({ type: 'REGISTER', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const changePfp = (datato) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await api.changePfp(datato);\r\n        dispatch({ type: 'PROFILEPICTURE', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}","import React from 'react'\r\n\r\nimport LoginModal from '../../homepage/modals/LoginModal'\r\n\r\nconst Login = () => {\r\n    return (\r\n        <div className=\"body\">\r\n            <LoginModal />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate , Link } from 'react-router-dom';\r\n\r\nimport './RegisterModal.css'\r\n\r\nimport { register } from '../../../actions/login';\r\n\r\nconst RegisterModal = () => {\r\n    const auth = useSelector((state) => state.auth.data);\r\n    const navigate = useNavigate();\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confPassword, setConfPassword] = useState('');\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const checkForm = () => {\r\n        if (username.length < 1 || password.length < 1 || confPassword.length < 1 ) return setError('Invalid form.');\r\n        if (username.includes(' ') || username.includes('#') || username.includes('\"') || \r\n            username.includes(\"'\") || username.includes(\"&\") || username.includes(\"@\") || \r\n            username.includes(\"~\") || username.includes(\"/\") || username.includes(\",\") || \r\n            username.includes(\">\")  ) return setError(`Username must not contain special characters including: # ' \" & @ ~ / > < `);\r\n        if (password.includes(' ')) return setError('Password cannot include spaces.');\r\n        if (username.length < 5) return setError('Username must be larger than 4 characters.');\r\n        if (username.length > 15) return setError('Username must be less than 15 characters.');\r\n        if (password !== confPassword) return setError('Passwords do not match.');\r\n        dispatch(register({ username, password }))\r\n    }\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault();\r\n        checkForm();\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (auth.userId) navigate('/skid/@me')\r\n    }, [auth.userId, navigate])\r\n\r\n    const [error, setError] = useState('')\r\n\r\n    return (\r\n        <form className=\"login-body\" onSubmit={submitForm}>\r\n            <div className=\"modal-container background-primary\">\r\n                <div className=\"modal-form\">\r\n                    <div className=\"modal-form-header\">\r\n                        <span className=\"modal-header-title\">Create an account</span>\r\n                        <small className=\"modal-err-desc\">{error}</small>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">USERNAME</span>\r\n                        <input type=\"text\" className=\"modal-form-input\" value={username} onChange={(e) => setUsername(e.target.value)} placeholder=\"\"/>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">PASSWORD</span>\r\n                        <input type=\"password\" className=\"modal-form-input\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"\"/>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">CONFIRM PASSWORD</span>\r\n                        <input type=\"password\" className=\"modal-form-input\" value={confPassword} onChange={(e) => setConfPassword(e.target.value)} placeholder=\"\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"options-container background-secondary\">\r\n                    <span className=\"login-register\">Already have an account? <Link to=\"/login\" className=\"register-button\">Login</Link></span>\r\n                    <button type=\"submit\" className=\"submit-button\">Register</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default RegisterModal\r\n","import * as api from '../api/index';\r\n\r\nexport const getServers = () => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await api.getServers();\r\n        dispatch({ type: 'GET_ALL_SERVERS', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const getServer = (sId) => async (dispatch) =>  {\r\n    if (!sId) return\r\n    try {\r\n        const { data } = await api.getServer(sId);\r\n        if (!data) return;\r\n        dispatch({ type: 'GET_CURRENT_SERVER', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const deleteServer = (sId) => async (dispatch) =>  {\r\n    if (!sId) return\r\n    try {\r\n        const { data } = await api.deleteServer(sId);\r\n        if (!data) return;\r\n        dispatch({ type: 'DELETE_SERVER', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const getChannel = (cId, sId) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await api.getChannel(cId, sId);\r\n        if (!data) return;\r\n        dispatch({ type: 'GET_CURRENT_CHANNEL', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const getMessage = (message) => async (dispatch) =>  {\r\n    try {\r\n        dispatch({ type: 'GET_MESSAGE', payload: message });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const sendMessage = (cId, sId, message) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await api.sendMessage(cId, sId, message);\r\n        if (!data) return;\r\n        dispatch({ type: 'SEND_MESSAGE', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const addServer = (serverName) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await api.addServer(serverName);\r\n        if (!data) return;\r\n        dispatch({ type: 'ADD_SERVER', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const addCategory = (categoryName, sId) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await api.addCategory(categoryName, sId);\r\n        if (!data) return;\r\n        dispatch({ type: 'ADD_CATEGORY', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const addChannel = (sId, categoryId, channelName) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await api.addChannel(sId, categoryId, channelName);\r\n        if (!data) return;\r\n        dispatch({ type: 'ADD_CHANNEL', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}","import React, { useContext, useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst SocketContext = React.createContext();\r\n\r\nexport const useSocket = () => {\r\n    return useContext(SocketContext);\r\n}\r\n\r\nexport const SocketProvider = ({ children }) => {\r\n    const [socket, setSocket] = useState();\r\n    const auth = useSelector((state) => state.auth);\r\n\r\n    useEffect(() => {\r\n        const newSocket = io('https://skid.rocks', {\r\n            auth: {\r\n                token: auth.token || null\r\n            }\r\n        });\r\n        setSocket(newSocket);\r\n\r\n        return () => newSocket.close();\r\n    }, [auth]);\r\n\r\n    return (\r\n        <SocketContext.Provider value={socket}>\r\n            {children}\r\n        </SocketContext.Provider>\r\n    );\r\n}","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { addServer } from '../../../../actions/servers'\r\n\r\nimport './NewServer.css'\r\n\r\nconst NewServer = (props) => {\r\n    const [serverName, setServerName] = useState('')\r\n    const dispatch = useDispatch()\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(addServer(serverName))\r\n        setServerName('')\r\n        props.close(false)\r\n    }\r\n\r\n    return (\r\n        <form className=\"modal-underbody\" onSubmit={handleSubmit}>\r\n            <div className=\"modal-container background-primary\">\r\n                <div className=\"modal-form\">\r\n                    <div className=\"modal-form-header\">\r\n                        <span className=\"modal-header-title\">Create server</span>\r\n                        <small className=\"modal-header-desc\">Give your new server a personality with a name. You can always change it later.</small>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">SERVER NAME</span>\r\n                        <input type=\"text\" className=\"modal-form-input\" value={serverName} onChange={(e) => setServerName(e.target.value)} placeholder=\"genericuser's server\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"options-container background-secondary\">\r\n                    <button className=\"cancel-button\" onClick={() => props.close(false)}>Cancel</button>\r\n                    <button type=\"submit\" className=\"submit-button\">Create server</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NewServer","import React, { useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport './ServerNavbar.css';\r\nimport { getServer } from '../../../actions/servers';\r\nimport { useSocket } from '../../../contexts/socket';\r\n\r\nimport NewServer from '../modals/newserver/NewServer'\r\n\r\nconst ServerNavbar = () => {\r\n    const [showModal, setShowModal] = useState(false);\r\n    const servers = useSelector((state) => state.servers.all);\r\n    const dispatch = useDispatch();\r\n    const socket = useSocket();\r\n    const { sId } = useParams();\r\n\r\n    return (\r\n        <>\r\n            { showModal && <NewServer close={setShowModal} /> }\r\n            <div className=\"navbar background-tertiary\">\r\n                <Link to=\"/skid/@me\">\r\n                    <div className={`selected-noti ${!sId ? 'active' : null}`}></div>\r\n                    <div className={`navbar-server hover-skid background-primary ${!sId ? 'home-selected' : null}`}>\r\n                        <span className=\"tool\">Home</span>\r\n                    </div>\r\n                </Link>\r\n\r\n                { servers[0] && <div className=\"divider background-primary\" /> }\r\n\r\n                {\r\n                    servers.map((server, i) => {\r\n                        return (\r\n                            <Link key={i} to={`/skid/${server._id}/${server.allCategorys[0].allChannels[0]._id}`}>\r\n                                <div className={`selected-noti ${server._id === sId ? 'active' : null}`}></div>\r\n                                <div className={`navbar-server hover-server background-primary ${server._id === sId ? 'server-selected' : null}`} onClick={() => {\r\n                                    dispatch(getServer());\r\n                                    socket.emit(`joinChannel`, server.allCategorys[0].allChannels[0]._id);\r\n                                }}>\r\n                                    <span className=\"tool\">{server.serverName}</span>\r\n                                </div>\r\n                            </Link>\r\n                        )\r\n                    })\r\n                }\r\n\r\n                <div className=\"divider background-primary\" />\r\n\r\n                <div className=\"navbar-server hover-server background-primary\" onClick={() => setShowModal(true)}>\r\n                    <span className=\"tool\">Add a server</span>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ServerNavbar\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport { addCategory } from '../../../../actions/servers'\r\n\r\nimport './NewCategory.css'\r\n\r\nconst NewCategory = (props) => {\r\n    const [categoryName, setCategoryName] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const { sId } = useParams();\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(addCategory(categoryName, sId))\r\n        setCategoryName('')\r\n        props.close(false)\r\n    }\r\n\r\n    return (\r\n        <form className=\"modal-underbody\" onSubmit={handleSubmit}>\r\n            <div className=\"modal-container background-primary\">\r\n                <div className=\"modal-form\">\r\n                    <div className=\"modal-form-header\">\r\n                        <span className=\"modal-header-title\">Create category</span>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">CATEGORY NAME</span>\r\n                        <input type=\"text\" className=\"modal-form-input\" value={categoryName} onChange={(e) => setCategoryName(e.target.value)} placeholder=\"New category\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"options-container background-secondary\">\r\n                    <button onClick={() => props.close(false)} className=\"cancel-button\">Cancel</button>\r\n                    <button type=\"submit\" className=\"submit-button\">Create category</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NewCategory\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport { addChannel } from '../../../../actions/servers'\r\n\r\n// eslint-disable-next-line\r\nimport { FaHashtag } from 'react-icons/fa'\r\n// eslint-disable-next-line\r\nimport { ImVolumeMedium } from 'react-icons/im'\r\n\r\nimport './NewChannel.css'\r\n\r\nconst NewChannel = (props) => {\r\n    const [channelName, setChannelName] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const { sId } = useParams();\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(addChannel(sId, props.categoryId, channelName));\r\n        setChannelName('');\r\n        props.close([false, '']);\r\n    }\r\n\r\n    return (\r\n        <form className=\"modal-underbody\" onSubmit={handleSubmit}>\r\n            <div className=\"modal-container background-primary\">\r\n                <div className=\"modal-form\">\r\n                    <div className=\"modal-form-header\">\r\n                        <span className=\"modal-header-title\">Create text channel</span>\r\n                        <small className=\"modal-header-desc\">in {props.categoryId}</small>\r\n                    </div>\r\n                    <div className=\"modal-select-container\">\r\n                        <span className=\"modal-select-header\">CHANNEL TYPE</span>\r\n                        <div className=\"modal-type-container\">\r\n                            <div className=\"modal-select-type modal-selected-type\">\r\n                                <div className=\"select-check-wrapper\"><div className=\"select-check\"/></div>\r\n                                <FaHashtag className=\"select-type-icon\" />\r\n                                <div className=\"select-type-info\">\r\n                                    <span className=\"select-type-name\">Text Channel</span>\r\n                                    <small className=\"select-type-desc\">Post images, GIFs, opinions and puns</small>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-select-type modal-select-hover\">\r\n                                <div className=\"unselect-check-wrapper\"><div className=\"unselect-check\"/></div>\r\n                                <ImVolumeMedium className=\"select-type-icon\" />\r\n                                <div className=\"select-type-info\">\r\n                                    <span className=\"select-type-name\">Voice Channel</span>\r\n                                    <small className=\"select-type-desc\">Hang out with voice, video and screen sharing</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">CHANNEL NAME</span>\r\n                        <input type=\"text\" className=\"modal-form-input\" value={channelName} onChange={(e) => {setChannelName(e.target.value)}} placeholder=\"new-channel\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"options-container background-secondary\">\r\n                    <button onClick={() => props.close([false, ''])} className=\"cancel-button\">Cancel</button>\r\n                    <button type=\"submit\" className=\"submit-button\">Create channel</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NewChannel\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logout } from '../../../actions/login';\r\nimport { MdClose } from 'react-icons/md';\r\n\r\nimport './UserOptions.css';\r\nimport { useState } from 'react';\r\nimport { changePfp } from '../../../actions/login';\r\nimport { useEffect } from 'react';\r\n\r\nconst UserOptions = (props) => {\r\n    const dispatch = useDispatch();\r\n    const [pfpUrl, setPfpUrl] = useState('');\r\n    const user = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        setPfpUrl(user.data.pfpUrl)\r\n    }, [user]);\r\n\r\n    const handlePfpChange = (e) => {\r\n        e.preventDefault();\r\n        dispatch(changePfp({ url: pfpUrl, jwt: user.token }));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={`settings ml-[-72px]`}>\r\n                <div className=\"close\" onClick={() => props.close(false)}>\r\n                    <MdClose size=\"18\" />\r\n                </div>\r\n                <section className='tabs'>\r\n                    <ul className='tab-buttons-container'>\r\n                        <div className=\"tab-section\">\r\n                            <span className=\"font-display section-title\">USER SETTINGS</span>\r\n                            <div className=\"section-items\">\r\n                                <button className=\"section-button text-channel-colour selected\" >My Account</button>\r\n                                {/* <button className=\"section-button text-channel-colour\" >User Profile</button>\r\n                            <button className=\"section-button text-channel-colour\" >Privacy & Safety</button>\r\n                            <button className=\"section-button text-channel-colour\" >Authorised Apps</button>\r\n                            <button className=\"section-button text-channel-colour\" >Connections</button> */}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"divider-options\" />\r\n                        <form className=\"tab-section\" onSubmit={() => { dispatch(logout()) }}>\r\n                            <button type=\"submit\" className=\"section-button logout text-channel-colour\" >Logout</button>\r\n                        </form>\r\n                    </ul>\r\n                </section>\r\n                <section className='options'>\r\n                    <div className=\"header-title-option\">My Account</div>\r\n                    <form className=\"option\" onSubmit={handlePfpChange}>\r\n                        <span className=\"option-title\">Profile Picture URL</span>\r\n                        <input type=\"url\" className=\"modal-form-input-o\" pattern=\"https://.*\" value={pfpUrl} onChange={(e) => setPfpUrl(e.target.value)} placeholder=\"\" />\r\n                        <button type='submit' className='submit-button-save'>Save</button>\r\n                    </form>\r\n                </section>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserOptions;\r\n","import React, { useState } from 'react';\r\nimport { MdMic, MdMicOff } from 'react-icons/md';\r\nimport { HiCog } from 'react-icons/hi';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport UserOptions from '../options/UserOptions';\r\nimport { useEffect } from 'react';\r\n\r\nconst UserInfo = (props) => {\r\n    const [showSettings, setShowSettings] = useState(false);\r\n    const [muted, setMuted] = useState(false);\r\n    const user = useSelector(state => state.auth.data);\r\n\r\n    useEffect(() => {\r\n        console.log(user)\r\n    }, [user])\r\n    \r\n    return (\r\n        <>\r\n            <UserOptions close={setShowSettings} class={`${props.className} ${showSettings && 'active'}`} />\r\n            <section className={`user-info background-secondary-alt ${props.className}`}>\r\n                <div className=\"profile-container\">\r\n                    <img className=\"profile-image\" src={user.pfpUrl} alt=\"\" />    \r\n                    <div className=\"profile-name-container\">\r\n                        <span className=\"profile-name\">{user.username}</span>\r\n                        <small className=\"profile-tag\">{user.userId}</small>\r\n                    </div>\r\n                </div>\r\n                <div className=\"buttons-container\">\r\n                    <div className=\"button-wrapper\" onClick={() => setMuted(!muted)}>\r\n                        <span className=\"button-tool\">{!muted ? 'Mute' : 'Unmute'}</span>\r\n                        {!muted ? <MdMic className=\"button\" /> : <MdMicOff className=\"button\" />}\r\n                    </div>\r\n                    <div className=\"button-wrapper\" onClick={() => setShowSettings(true)}>\r\n                        <span className=\"button-tool\">Settings</span>\r\n                        <HiCog className=\"button\" />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserInfo;\r\n","import React, { useState, useEffect, useCallback } from 'react'\r\nimport { FaChevronDown, FaPlus, FaHashtag, FaChevronRight } from 'react-icons/fa';\r\nimport { useParams, Link, useNavigate } from 'react-router-dom';\r\n\r\nimport './ChannelBar.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { getServer, deleteServer } from '../../../actions/servers';\r\n\r\nimport NewCategory from '../../skidapp/modals/newcategory/NewCategory';\r\nimport NewChannel from '../../skidapp/modals/newchannel/NewChannel';\r\n\r\nimport UserInfo from './UserInfo';\r\n\r\nconst ChannelBar = () => {\r\n    const [showContext, setShowContext] = useState(false);\r\n    const [showCategoryModal, setShowCategoryModal] = useState(false);\r\n    const [showChannelModal, setShowChannelModal] = useState([false, '']);\r\n    const [show] = useState(JSON.parse(localStorage.getItem('showReminder')));\r\n\r\n    const { sId } = useParams();\r\n    const server = useSelector(state => state.servers.current);\r\n    const navigate = useNavigate();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getServer(sId));\r\n    }, [dispatch, sId]);\r\n\r\n    const handleClick = useCallback(() => (showContext ? setShowContext(false) : null), [showContext]);\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"click\", handleClick);\r\n        return () => document.removeEventListener(\"click\", handleClick);\r\n    });\r\n\r\n    const handleDeleteServer = () => {\r\n        dispatch(deleteServer(sId));\r\n        navigate('/skid/@me');\r\n    }\r\n\r\n    return (\r\n        server._id ?\r\n            (<>\r\n                {showCategoryModal && <NewCategory close={setShowCategoryModal} />}\r\n                {showChannelModal[0] && <NewChannel categoryId={showChannelModal[1]} close={setShowChannelModal} />}\r\n                <UserInfo />\r\n                <nav className={`channel-bar background-secondary ${show && 'rHeight'}`}>\r\n                    <div className=\"channel-bar-items\" >\r\n                        <section className=\"server-name\" onClick={() => setShowContext(true)}>\r\n                            <h2 className=\"server-name-header font-primary\">{server.serverName}</h2>\r\n                            <FaChevronDown className=\"server-name-chevron\" />\r\n                            {showContext &&\r\n                                <ul className=\"context-menu\">\r\n                                    <li className=\"context-menu-item blue\" onClick={() => setShowCategoryModal(true)}>\r\n                                        <button>Create Category</button>\r\n                                    </li>\r\n                                    <li className=\"context-menu-item red\" onClick={() => handleDeleteServer()}>\r\n                                        <button>Delete Server</button>\r\n                                    </li>\r\n                                </ul>\r\n                            }\r\n                        </section>\r\n                        <div className=\"channels\">\r\n                            {\r\n                                server.allCategorys.map((category, i) => {\r\n                                    return (\r\n                                        <Category i={i} category={category} setShowChannelModal={setShowChannelModal} />\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </>) : null\r\n    )\r\n}\r\n\r\n\r\nconst Category = (props) => {\r\n    const [showItems, setShowItems] = useState(true);\r\n    const { sId, cId } = useParams();\r\n    return (\r\n        <div className=\"category\" key={props.category._id}>\r\n            <div className=\"category-header text-channel-colour-group\">\r\n                {showItems ? <FaChevronDown className={`category-chevron colour-group-item`} onClick={() => setShowItems(!showItems)} /> :\r\n                    <FaChevronRight className=\"category-chevron colour-group-item\" onClick={() => setShowItems(!showItems)} />}\r\n                <span className=\"category-header-text font-display colour-group-item\" onClick={() => setShowItems(!showItems)} >{props.category.categoryName.toUpperCase()}</span>\r\n                <FaPlus className=\"category-add colour-group-item\" onClick={() => props.setShowChannelModal([true, props.category._id])} />\r\n            </div>\r\n            <div className=\"children\">\r\n                {\r\n                    props.category.allChannels.map((channel, i) => {\r\n                        return (showItems &&\r\n                            <Link to={`/skid/${sId}/${channel._id}`}>\r\n                                <div className={`channel text-channel-colour ${cId === channel._id ? 'selected' : '' }`} key={i}>\r\n                                    <FaHashtag className=\"channel-hashtag text-channel-colour\" />\r\n                                    <span className=\"channel-title font-primary\">{channel.channelName}</span>\r\n                                </div>\r\n                            </Link>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ChannelBar\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { getChannel, sendMessage, getMessage } from '../../../actions/servers';\r\nimport { pseudoMessage } from '../../../api/';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { useSocket } from '../../../contexts/socket';\r\n\r\nimport './UserContent.css';\r\n\r\nconst UserContent = () => {\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const channel = useSelector(state => state.servers.channel);\r\n    const socket = useSocket();\r\n    const user = useSelector(state => state.auth.data);\r\n\r\n    const [show] = useState(JSON.parse(localStorage.getItem('showReminder')));\r\n\r\n    const { sId, cId } = useParams();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getChannel(cId, sId));\r\n    }, [dispatch, cId, sId]);\r\n\r\n    useEffect(() => {\r\n        setMessages(channel.allMessages);\r\n    }, [channel, setMessages]);\r\n\r\n    useEffect(() => {\r\n        if (!socket) return;\r\n\r\n        socket.on('loadMessage', (message) => {\r\n            if (message.messageUserId === user.userId) return;\r\n            if (message.messageChannel !== cId) return;\r\n            dispatch(getMessage(message));\r\n        })\r\n\r\n        socket.off('loadMessages');\r\n    }, [socket, dispatch, user, cId]);\r\n\r\n    useEffect(() => {\r\n        if (!socket) return;\r\n        socket.emit(`joinChannel`, cId);\r\n    }, [socket, cId]);\r\n\r\n    const submitForm = async (e) => {\r\n        e.preventDefault();\r\n        dispatch(sendMessage(cId, sId, message));\r\n        socket.emit('sendMessage', await pseudoMessage(cId, sId, message));\r\n        setMessage('');\r\n    }\r\n\r\n    return (\r\n        <div className={`user-content background-primary ${show && 'rHeight'}`}>\r\n            <div className=\"channel-name background-primary\">\r\n                <span className=\"channel-info-name\">{channel.channelName}</span>\r\n            </div>\r\n            <div className=\"chat\">\r\n                <div className=\"chat-bar-container\">\r\n                    <form className=\"chat-bar background-primary-alt\" onSubmit={submitForm}>\r\n                        <input type=\"text\" placeholder=\"Message #general\" value={message} onChange={(e) => setMessage(e.target.value)} className=\"chat-bar-area\" />\r\n                    </form>\r\n                </div>   \r\n                <div className=\"chat-container\">\r\n                    { \r\n                        messages.map((message, i) => {\r\n                            return (\r\n                                message.isSmall ? <div className=\"chat-item-small\">\r\n                                    <div className=\"chat-item-content\">\r\n                                        <span className=\"chat-item-text\">{message.messageContent}</span>\r\n                                    </div>\r\n                                </div> :\r\n                                <div className=\"chat-item\" key={i}>\r\n                                    <img  className=\"chat-item-picture\" src={message.profilePicture} alt=\"\" />\r\n                                    <div className=\"chat-item-content\">\r\n                                        <div className=\"chat-user-info\">\r\n                                            <span className=\"chat-item-name\">{message.messageOwner}</span>\r\n                                            <span className=\"chat-item-date\">{new Date(message.messageCreation).toLocaleDateString()}</span>\r\n                                        </div>\r\n                                        <span className=\"chat-item-text\">{message.messageContent}</span>\r\n                                    </div>\r\n                                </div> \r\n                            )\r\n                        })\r\n                    }\r\n                </div>             \r\n            </div>\r\n            <div className=\"member-list background-secondary\">\r\n                <div className=\"member-list-category\">\r\n                    <span className=\"member-list-name text-channel-colour\">ONLINE</span>\r\n                    <div className=\"members\">\r\n                        <div className=\"member\">\r\n                            <div className=\"member-profile-image\" />\r\n                            <span className=\"member-name text-primary\">genericuser</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"member-list-category\">\r\n                    <span className=\"member-list-name text-channel-colour\">OFFLINE</span>\r\n                    <div className=\"members\">\r\n                        <div className=\"member\">\r\n                            <div className=\"member-profile-image\" />\r\n                            <span className=\"member-name text-muted\">Taylor Peters</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserContent\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { MdClose } from 'react-icons/md';\r\n\r\nimport './Reminder.css';\r\n\r\nconst Reminder = () => {\r\n    const [show, setShow] = useState(JSON.parse(localStorage.getItem('showReminder')));\r\n\r\n    const setFalse = () => {\r\n        setShow(false);\r\n        localStorage.setItem('showReminder', false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('showReminder') === null) {\r\n            localStorage.setItem('showReminder', true);\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {show && <div className=\"reminder\">\r\n                <div className=\"reminder-title\">\r\n                    Have you heard of shire sounds? Check out their amazing radio station! \r\n                    <a href=\"https://shiresoundsradio.co.uk/\" className=\"reminder-button\">click here!</a>\r\n                </div>\r\n                <MdClose className='reminder-close' onClick={() => setFalse()}/>\r\n            </div>}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Reminder;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../../skidapp/skidapp.css'\r\n\r\n// Main Components\r\nimport ServerNavbar from '../../skidapp/navbar/ServerNavbar';\r\nimport ChannelBar from '../../skidapp/channelbar/ChannelBar';\r\nimport UserContent from '../../skidapp/usercontent/UserContent';\r\nimport Reminder from '../../skidapp/reminder/Reminder';\r\n\r\n// Modals\r\n// import NewChannel from '../../skidapp/modals/newchannel/NewChannel'\r\n// import NewCategory from '../../skidapp/modals/newcategory/NewCategory'\r\n// import NewServer from '../../skidapp/modals/newserver/NewServer'\r\n\r\nconst SkidApp = () => {\r\n    const auth = useSelector((state) => state.auth.data);\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        if (!auth.userId) navigate('/login');\r\n    }, [auth.userId, navigate]);\r\n\r\n    return (\r\n        <div className=\"flex h-screen w-screen overflow-hidden\">\r\n            <ServerNavbar />\r\n            <div className=\"reminder-container\">\r\n                <Reminder />    \r\n                <div className=\"flex h-full w-full transition-none user-context-navbar-container\">\r\n                    <ChannelBar />\r\n                    <UserContent />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SkidApp\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport '../../skidapp/skidapp.css';\r\n\r\n// Main Components\r\nimport ServerNavbar from '../../skidapp/navbar/ServerNavbar';\r\nimport UserInfo from '../../skidapp/channelbar/UserInfo';\r\nimport Reminder from '../../skidapp/reminder/Reminder';\r\nconst SkidApp = () => {\r\n    const auth = useSelector((state) => state.auth.data);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (!auth.userId) navigate('/login')\r\n    }, [auth.userId, navigate])\r\n\r\n    return (\r\n        <div className=\"flex h-screen w-screen overflow-hidden\">\r\n            <ServerNavbar />\r\n            <UserInfo className=\"ml-[72px]\" />\r\n            <div className=\"reminder-container\">\r\n                <Reminder />    \r\n                <div className=\"flex transition-none user-context-navbar-container\">\r\n                    <nav className=\"channel-bar background-secondary\"/>\r\n                    <div className=\"user-content background-primary flex flex-grow\"></div> \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SkidApp\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Routes, Route, useNavigate } from 'react-router-dom';\r\n\r\n// HomePage Route Elements\r\nimport HomePage from './pages/HomePage/HomePage';\r\nimport Login from './pages/HomePage/Login';\r\nimport RegisterModal from './homepage/modals/RegisterModal';\r\n\r\n// SkidApp Elements\r\nimport SkidApp from './pages/SkidApp/SkidApp';\r\nimport SkidAppMe from './pages/SkidApp/SkidAppMe';\r\n\r\nimport { getServers } from '../actions/servers';\r\n\r\nconst App = () => {\r\n    const auth = useSelector((state) => state.auth.data);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getServers());\r\n    }, [dispatch, auth])\r\n\r\n    return (\r\n        <>  \r\n            <Routes>\r\n                {/* Page Routes */}\r\n                <Route path=\"/\" element={<HomePage />} />\r\n                <Route path=\"/login\" element={<Login />} />\r\n                <Route path=\"/register\" element={<RegisterModal />} />\r\n\r\n                {/* App Routes */}\r\n                <Route path=\"/skid/:sId/:cId\" element={<SkidApp />} />\r\n                <Route path=\"/skid/@me\" element={<SkidAppMe />} />\r\n\r\n                {/* 404 */}\r\n                <Route path=\"*\" element={<Redirect />} />\r\n            </Routes>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Redirect = () => {\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        navigate('/skid/@me');\r\n    }, [navigate])\r\n    return null;\r\n}\r\n\r\nexport default App\r\n","import jwtDecode from 'jwt-decode';\r\n\r\nconst initial = () => {\r\n    const currentToken = localStorage.getItem('token')\r\n\r\n    try {\r\n        return {\r\n            token: localStorage.getItem('token'), \r\n            data: {\r\n                username: jwtDecode(currentToken).data.username || '', \r\n                userId: jwtDecode(currentToken).data.userId || '', \r\n                userRole: jwtDecode(currentToken).data.userRole || '',\r\n                pfpUrl: jwtDecode(currentToken).data.profileUrl || ''\r\n            }\r\n        }\r\n    } catch {\r\n        return {\r\n            token: localStorage.getItem('token'), \r\n            data: {\r\n                username: '', \r\n                userId: '', \r\n                userRole: '',\r\n                pfpUrl: ''\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst setJwt = (action) => {\r\n    const newJwt = action.payload.jwt;\r\n    const userJwt = jwtDecode(newJwt);\r\n    console.log(userJwt)\r\n    localStorage.setItem('token', newJwt)\r\n    return { ...initial(), ...userJwt, token: newJwt };\r\n}\r\n\r\n//eslint-disable-next-line\r\nexport default (state = initial(), action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN':\r\n            return setJwt(action);\r\n        case 'LOGOUT':\r\n            localStorage.setItem('token', null)\r\n            return { ...initial() };\r\n        case 'REGISTER':\r\n            return setJwt(action);\r\n        case 'PROFILEPICTURE':\r\n            return setJwt(action);\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport auth from './auth.js';\r\nimport servers from './servers.js';\r\n\r\nexport default combineReducers({\r\n    auth, servers\r\n})","//eslint-disable-next-line\r\nexport default (state = { all: [], current: {}, channel: { allMessages: [], channelName: '' } }, action) => {\r\n    switch (action.type) {\r\n        case 'GET_ALL_SERVERS':\r\n            return { ...state, all: [...action.payload] };\r\n        case 'GET_CURRENT_SERVER':\r\n            return { ...state, current: action.payload };\r\n        case 'GET_CURRENT_CHANNEL':\r\n            return { ...state, channel: action.payload };\r\n        case 'ADD_SERVER':\r\n            return { ...state, all: [action.payload, ...state.all] };\r\n        case 'GET_MESSAGE':\r\n            return { ...state, channel: { allMessages: [action.payload, ...state.channel.allMessages] } };\r\n        case 'SEND_MESSAGE':\r\n            return { ...state, channel: { allMessages: [action.payload, ...state.channel.allMessages] } };\r\n        case 'ADD_CATEGORY':\r\n            return { ...state, current: { ...state.current, allCategorys: [...state.current.allCategorys, action.payload] } };\r\n        case 'ADD_CHANNEL':\r\n            return { ...state, current: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nimport reducers from './reducers';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { SocketProvider } from './contexts/socket';\r\n\r\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <SocketProvider>\r\n        <App />\r\n      </SocketProvider>\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}